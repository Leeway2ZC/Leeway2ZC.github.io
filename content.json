{"meta":{"title":"LeeWay","subtitle":"李海云","description":"海上升明月，云深埋故人","author":"David Lee","url":"https://leeway2zc.top","root":"/"},"pages":[{"title":"","date":"2025-08-28T08:11:15.487Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"404.html","permalink":"https://leeway2zc.top/404.html","excerpt":"","text":"404 Error 404 Hey Buddy We can't seem to find the page you are looking for. Go Home"},{"title":"","date":"2025-08-28T08:11:15.487Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"css/404.css","permalink":"https://leeway2zc.top/css/404.css","excerpt":"","text":"/*=============== GOOGLE FONTS ===============*/ @import url(\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;700&display=swap\"); /*=============== VARIABLES CSS ===============*/ :root { --header-height: 3.5rem; /*========== Colors ==========*/ /*Color mode HSL(hue, saturation, lightness)*/ --first-color: hsl(38, 69%, 59%); --text-color: hsl(38, 8%, 8%); /*========== Font and typography ==========*/ /*.5rem = 8px | 1rem = 16px ...*/ --body-font: 'Space Grotesk', sans-serif; --biggest-font-size: 2.375rem; --normal-font-size: .938rem; --smaller-font-size: .75rem; } /* Responsive typography */ @media screen and (min-width: 1024px) { :root { --biggest-font-size: 5rem; --normal-font-size: 1rem; --smaller-font-size: .813rem; } } /*=============== BASE ===============*/ * { box-sizing: border-box; padding: 0; margin: 0; } body { font-family: var(--body-font); font-size: var(--normal-font-size); font-weight: 500; color: var(--text-color); } ul { list-style: none; } a { text-decoration: none; } img { max-width: 100%; height: auto; } /*=============== REUSABLE CSS CLASSES ===============*/ .container { max-width: 1024px; margin-left: 1.5rem; margin-right: 1.5rem; } .main { overflow: hidden; /* For the animations ScrollReveal */ } /*=============== HEADER & NAV ===============*/ .header { position: fixed; width: 100%; background-color: transparent; top: 0; left: 0; z-index: 100; } .nav { height: var(--header-height); display: flex; justify-content: space-between; align-items: center; } .nav__logo, .nav__toggle { color: var(--text-color); display: inline-flex; } .nav__logo { font-weight: 700; } .nav__toggle { font-size: 1.25rem; cursor: pointer; } @media screen and (max-width: 767px) { .nav__menu { position: fixed; background-color: var(--first-color); left: 0; top: -100%; width: 100%; padding: 5rem 0 4rem; border-radius: 0 0 1.5rem 1.5rem; box-shadow: 0 2px 4px hsla(38, 4%, 15%, .15); transition: .4s; } } .nav__list { text-align: center; display: flex; flex-direction: column; row-gap: 2rem; } .nav__link { color: var(--text-color); } .nav__close { position: absolute; top: 1rem; right: 1.5rem; font-size: 1.5rem; color: var(--text-color); cursor: pointer; } /* Show menu */ .show-menu { top: 0; } /*=============== HOME ===============*/ .home { background-color: var(--first-color); padding: 9rem 0 2rem; height: 100vh; display: grid; } .home__container { display: grid; align-content: center; row-gap: 2.5rem; } .home__data { text-align: center; } .home__title { font-size: var(--biggest-font-size); margin: .75rem 0; } .home__button { margin-top: 2rem; display: inline-block; background-color: var(--text-color); color: #fff; padding: .80rem 1.5rem; border-radius: 3rem; transition: .4s; } .home__button:hover { box-shadow: 0 4px 12px hsla(38, 69%, 8%, .2); } .home__img img { width: 230px; animation: floaty 1.8s infinite alternate; } .home__img { justify-self: center; } .home__shadow { width: 130px; height: 24px; background-color: hsla(38, 21%, 19%, .16); margin: 0 auto; border-radius: 50%; filter: blur(7px); animation: shadow 1.8s infinite alternate; } .home__footer { display: flex; justify-content: center; column-gap: .5rem; font-size: var(--smaller-font-size); align-self: flex-end; } /* Animate ghost */ @keyframes floaty { 0% { transform: translateY(0); } 100% { transform: translateY(15px); } } @keyframes shadow { 0% { transform: scale(1, 1); } 100% { transform: scale(.85, .85); } } /*=============== BREAKPOINTS ===============*/ /* For small devices */ @media screen and (max-width: 320px) { .home { padding-top: 7rem; } } /* For medium devices */ @media screen and (min-width: 767px) { .nav { height: calc(var(--header-height) + 1.5rem); } .nav__toggle, .nav__close { display: none; } .nav__list { flex-direction: row; column-gap: 3.5rem; } } /* For large devices */ @media screen and (min-width: 1024px) { .home__container { grid-template-columns: repeat(2, 1fr); align-items: center; column-gap: 2rem; } .home__data { text-align: initial; } .home__img img { width: 400px; } .home__shadow { width: 250px; height: 40px; } } @media screen and (min-width: 1048px) { .container { margin-left: auto; margin-right: auto; } } /* For 2K resolutions (2048 x 1152, 2048 x 1536) */ @media screen and (min-width: 2048px) { body { zoom: 1.7; } .home { height: initial; row-gap: 4rem; } } /* For 4K resolutions (3840 x 2160, 4096 x 2160) */ @media screen and (min-width: 3840px) { body { zoom: 3.1; } }"},{"title":"","date":"2025-08-28T08:11:15.487Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"css/a11y-dark.min.css","permalink":"https://leeway2zc.top/css/a11y-dark.min.css","excerpt":"","text":"pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}/*! Theme: a11y-dark Author: @ericwbailey Maintainer: @ericwbailey Based on the Tomorrow Night Eighties theme: https://github.com/isagalaev/highlight.js/blob/master/src/styles/tomorrow-night-eighties.css */.hljs{background:#2b2b2b;color:#f8f8f2}.hljs-comment,.hljs-quote{color:#d4d0ab}.hljs-deletion,.hljs-name,.hljs-regexp,.hljs-selector-class,.hljs-selector-id,.hljs-tag,.hljs-template-variable,.hljs-variable{color:#ffa07a}.hljs-built_in,.hljs-link,.hljs-literal,.hljs-meta,.hljs-number,.hljs-params,.hljs-type{color:#f5ab35}.hljs-attribute{color:gold}.hljs-addition,.hljs-bullet,.hljs-string,.hljs-symbol{color:#abe338}.hljs-section,.hljs-title{color:#00e0e0}.hljs-keyword,.hljs-selector-tag{color:#dcc6e0}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}@media screen and (-ms-high-contrast:active){.hljs-addition,.hljs-attribute,.hljs-built_in,.hljs-bullet,.hljs-comment,.hljs-link,.hljs-literal,.hljs-meta,.hljs-number,.hljs-params,.hljs-quote,.hljs-string,.hljs-symbol,.hljs-type{color:highlight}.hljs-keyword,.hljs-selector-tag{font-weight:700}}"},{"title":"","date":"2025-08-28T08:11:15.488Z","updated":"2025-08-28T08:11:15.488Z","comments":true,"path":"css/fonts.css","permalink":"https://leeway2zc.top/css/fonts.css","excerpt":"","text":"/* montserrat-regular - latin */ @font-face { font-family: \"Montserrat\"; font-style: normal; font-weight: 400; src: local(\"\"), url(\"../fonts/montserrat-v23-latin-regular.woff2\") format(\"woff2\"), /* Chrome 26+, Opera 23+, Firefox 39+ */ url(\"../fonts/montserrat-v23-latin-regular.woff\") format(\"woff\"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */ } /* montserrat-600 - latin */ @font-face { font-family: \"Montserrat\"; font-style: normal; font-weight: 600; src: local(\"\"), url(\"../fonts/montserrat-v23-latin-600.woff2\") format(\"woff2\"), /* Chrome 26+, Opera 23+, Firefox 39+ */ url(\"../fonts/montserrat-v23-latin-600.woff\") format(\"woff\"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */ } /* montserrat-italic - latin */ @font-face { font-family: \"Montserrat\"; font-style: italic; font-weight: 400; src: local(\"\"), url(\"../fonts/montserrat-v23-latin-italic.woff2\") format(\"woff2\"), /* Chrome 26+, Opera 23+, Firefox 39+ */ url(\"../fonts/montserrat-v23-latin-italic.woff\") format(\"woff\"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */ } /* montserrat-600italic - latin */ @font-face { font-family: \"Montserrat\"; font-style: italic; font-weight: 600; src: local(\"\"), url(\"../fonts/montserrat-v23-latin-600italic.woff2\") format(\"woff2\"), /* Chrome 26+, Opera 23+, Firefox 39+ */ url(\"../fonts/montserrat-v23-latin-600italic.woff\") format(\"woff\"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */ }"},{"title":"","date":"2025-08-28T08:11:15.488Z","updated":"2025-08-28T08:11:15.488Z","comments":true,"path":"css/markdown.css","permalink":"https://leeway2zc.top/css/markdown.css","excerpt":"","text":"@charset \"utf-8\"; .post-md { width: 100%; font-size: 16px; letter-spacing: 0; } .post-md h1, .post-md h2, .post-md h3, .post-md h4, .post-md h5, .post-md h6 { color: var(--font-color-1); margin: 12px 0; } .post-md h1 { font-size: 2rem; line-height: 1.2; padding: 24px 0; } .post-md h2 { font-size: 1.6rem; line-height: 1.2; padding: 20px 0; } .post-md h3 { font-size: 1.4rem; line-height: 1.2; padding: 18px 0; } .post-md h4 { font-size: 1.2rem; line-height: 1.2; padding: 16px 0; } .post-md h5 { font-size: 1.15rem; line-height: 1.2; padding: 14px 0; } .post-md h6 { font-size: 1.1rem; line-height: 1.2; padding: 12px 0; } .post-md a { color: var(--font-color-0); /* box-shadow: 0 1.5px 0 #de1267; */ /* text-decoration: underline dotted; */ transition: color ease-in-out .65s, box-shadow ease-in-out .65s; } .post-md a:hover { color: var(--font-color-0); box-shadow: 0 2px 0 var(--font-color-0); transition: color ease-in-out .65s, box-shadow ease-in-out .65s; } .post-md strong { font-weight: 700; } .post-md em { font-style: italic; } .post-md kbd { padding: 2px 4px; border-radius: 2px; background: #eee; border: 1px solid #ddd; } .post-md ol { list-style: decimal; padding-left: 24px; } .post-md ul { list-style: disc; padding-left: 24px; } .post-md img { border-radius: 4px; box-sizing: border-box; padding: 5px 5px; border: 1px solid #ebebeb; } .post-md hr { border: none; height: 1px; background: var(--line-1); margin: 24px 0; } .post-md p, .post-md blockquote { width: 100%; margin: 12px 0; } .post-md blockquote { border-left: 2px solid var(--line-2); padding-left: 12px; word-wrap: break-word; } .post-md .video-container { background: #000; border-radius: 4px; overflow: hidden; } .post-md iframe, .post-md .video-container iframe { width: 100%; height: 100vh; max-height: 360px; margin: 12px 0; } .post-md>table { width: 100%; text-align: left; border-spacing: 0; } .post-md>table th { padding: 12px 0; border-bottom: 2px solid var(--line-1); } .post-md>table tr:nth-child(odd) td { padding: 12px 0; border-bottom: 1px solid var(--line-1); background: #fafafa; } .post-md>table tr:nth-child(even) td { padding: 12px 0; border-bottom: 1px solid var(--line-1); background: #fff; } .post-md code { border-radius: 4px; background: #2b2b2b; padding: 2px 4px; color: #f8f8f2; font-size: 1rem; } .post-md .hljs-ln-numbers { opacity: .5; padding-right: 12px; }"},{"title":"","date":"2025-08-28T08:11:15.488Z","updated":"2025-08-28T08:11:15.488Z","comments":true,"path":"css/reset.css","permalink":"https://leeway2zc.top/css/reset.css","excerpt":"","text":"@charset \"utf-8\"; *, *::before, *::after { box-sizing: border-box; } body, h1, h2, h3, h4, h5, h6, p, figure, blockquote, dl, dd { margin: 0; } ul, ol { list-style: none; } ul { padding-inline-start: 0; } html, body { scroll-behavior: smooth; } a:not([class]) { text-decoration-skip-ink: auto; } img, picture { width: auto; max-width: 100%; display: block; } input, button, textarea, select { font: inherit; } @media (prefers-reduced-motion: reduce) { html:focus-within { scroll-behavior: auto; } }"},{"title":"","date":"2025-08-28T08:11:15.488Z","updated":"2025-08-28T08:11:15.488Z","comments":true,"path":"css/boxicons.min.css","permalink":"https://leeway2zc.top/css/boxicons.min.css","excerpt":"","text":"@font-face{font-family:boxicons;font-weight:400;font-style:normal;src:url(../fonts/boxicons.eot);src:url(../fonts/boxicons.eot) format('embedded-opentype'),url(../fonts/boxicons.woff2) format('woff2'),url(../fonts/boxicons.woff) format('woff'),url(../fonts/boxicons.ttf) format('truetype'),url(../fonts/boxicons.svg?#boxicons) format('svg')}.bx{font-family:boxicons!important;font-weight:400;font-style:normal;font-variant:normal;line-height:1;text-rendering:auto;display:inline-block;text-transform:none;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.bx-ul{margin-left:2em;padding-left:0;list-style:none}.bx-ul>li{position:relative}.bx-ul .bx{font-size:inherit;line-height:inherit;position:absolute;left:-2em;width:2em;text-align:center}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@-webkit-keyframes burst{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}90%{-webkit-transform:scale(1.5);transform:scale(1.5);opacity:0}}@keyframes burst{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}90%{-webkit-transform:scale(1.5);transform:scale(1.5);opacity:0}}@-webkit-keyframes flashing{0%{opacity:1}45%{opacity:0}90%{opacity:1}}@keyframes flashing{0%{opacity:1}45%{opacity:0}90%{opacity:1}}@-webkit-keyframes fade-left{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(-20px);transform:translateX(-20px);opacity:0}}@keyframes fade-left{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(-20px);transform:translateX(-20px);opacity:0}}@-webkit-keyframes fade-right{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(20px);transform:translateX(20px);opacity:0}}@keyframes fade-right{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(20px);transform:translateX(20px);opacity:0}}@-webkit-keyframes fade-up{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(-20px);transform:translateY(-20px);opacity:0}}@keyframes fade-up{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(-20px);transform:translateY(-20px);opacity:0}}@-webkit-keyframes fade-down{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(20px);transform:translateY(20px);opacity:0}}@keyframes fade-down{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(20px);transform:translateY(20px);opacity:0}}@-webkit-keyframes tada{from{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}10%,20%{-webkit-transform:scale3d(.95,.95,.95) rotate3d(0,0,1,-10deg);transform:scale3d(.95,.95,.95) rotate3d(0,0,1,-10deg)}30%,50%,70%,90%{-webkit-transform:scale3d(1,1,1) rotate3d(0,0,1,10deg);transform:scale3d(1,1,1) rotate3d(0,0,1,10deg)}40%,60%,80%{-webkit-transform:scale3d(1,1,1) rotate3d(0,0,1,-10deg);transform:scale3d(1,1,1) rotate3d(0,0,1,-10deg)}to{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes tada{from{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}10%,20%{-webkit-transform:scale3d(.95,.95,.95) rotate3d(0,0,1,-10deg);transform:scale3d(.95,.95,.95) rotate3d(0,0,1,-10deg)}30%,50%,70%,90%{-webkit-transform:scale3d(1,1,1) rotate3d(0,0,1,10deg);transform:scale3d(1,1,1) rotate3d(0,0,1,10deg)}40%,60%,80%{-webkit-transform:rotate3d(0,0,1,-10deg);transform:rotate3d(0,0,1,-10deg)}to{-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.bx-spin{-webkit-animation:spin 2s linear infinite;animation:spin 2s linear infinite}.bx-spin-hover:hover{-webkit-animation:spin 2s linear infinite;animation:spin 2s linear infinite}.bx-tada{-webkit-animation:tada 1.5s ease infinite;animation:tada 1.5s ease infinite}.bx-tada-hover:hover{-webkit-animation:tada 1.5s ease infinite;animation:tada 1.5s ease infinite}.bx-flashing{-webkit-animation:flashing 1.5s infinite linear;animation:flashing 1.5s infinite linear}.bx-flashing-hover:hover{-webkit-animation:flashing 1.5s infinite linear;animation:flashing 1.5s infinite linear}.bx-burst{-webkit-animation:burst 1.5s infinite linear;animation:burst 1.5s infinite linear}.bx-burst-hover:hover{-webkit-animation:burst 1.5s infinite linear;animation:burst 1.5s infinite linear}.bx-fade-up{-webkit-animation:fade-up 1.5s infinite linear;animation:fade-up 1.5s infinite linear}.bx-fade-up-hover:hover{-webkit-animation:fade-up 1.5s infinite linear;animation:fade-up 1.5s infinite linear}.bx-fade-down{-webkit-animation:fade-down 1.5s infinite linear;animation:fade-down 1.5s infinite linear}.bx-fade-down-hover:hover{-webkit-animation:fade-down 1.5s infinite linear;animation:fade-down 1.5s infinite linear}.bx-fade-left{-webkit-animation:fade-left 1.5s infinite linear;animation:fade-left 1.5s infinite linear}.bx-fade-left-hover:hover{-webkit-animation:fade-left 1.5s infinite linear;animation:fade-left 1.5s infinite linear}.bx-fade-right{-webkit-animation:fade-right 1.5s infinite linear;animation:fade-right 1.5s infinite linear}.bx-fade-right-hover:hover{-webkit-animation:fade-right 1.5s infinite linear;animation:fade-right 1.5s infinite linear}.bx-xs{font-size:1rem!important}.bx-sm{font-size:1.55rem!important}.bx-md{font-size:2.25rem!important}.bx-lg{font-size:3rem!important}.bx-fw{font-size:1.2857142857em;line-height:.8em;width:1.2857142857em;height:.8em;margin-top:-.2em!important;vertical-align:middle}.bx-pull-left{float:left;margin-right:.3em!important}.bx-pull-right{float:right;margin-left:.3em!important}.bx-rotate-90{transform:rotate(90deg)}.bx-rotate-180{transform:rotate(180deg)}.bx-rotate-270{transform:rotate(270deg)}.bx-flip-horizontal{transform:scaleX(-1)}.bx-flip-vertical{transform:scaleY(-1)}.bx-border{padding:.25em;border:.07em solid rgba(0,0,0,.1);border-radius:.25em}.bx-border-circle{padding:.25em;border:.07em solid rgba(0,0,0,.1);border-radius:50%}.bxs-color:before{content:\"\\ef39\"}.bx-reflect-horizontal:before{content:\"\\ef3a\"}.bx-reflect-vertical:before{content:\"\\ef3b\"}.bx-color:before{content:\"\\ef3c\"}.bxl-mongodb:before{content:\"\\ef3d\"}.bxl-postgresql:before{content:\"\\ef3e\"}.bxl-deezer:before{content:\"\\ef3f\"}.bxs-hard-hat:before{content:\"\\ef2a\"}.bxs-home-alt-2:before{content:\"\\ef2b\"}.bxs-cheese:before{content:\"\\ef2c\"}.bx-home-alt-2:before{content:\"\\ef2d\"}.bx-hard-hat:before{content:\"\\ef2e\"}.bx-cheese:before{content:\"\\ef2f\"}.bx-cart-add:before{content:\"\\ef30\"}.bx-cart-download:before{content:\"\\ef31\"}.bx-no-signal:before{content:\"\\ef32\"}.bx-signal-1:before{content:\"\\ef33\"}.bx-signal-2:before{content:\"\\ef34\"}.bx-signal-3:before{content:\"\\ef35\"}.bx-signal-4:before{content:\"\\ef36\"}.bx-signal-5:before{content:\"\\ef37\"}.bxl-xing:before{content:\"\\ef38\"}.bxl-meta:before{content:\"\\ef27\"}.bx-lemon:before{content:\"\\ef28\"}.bxs-lemon:before{content:\"\\ef29\"}.bx-cricket-ball:before{content:\"\\ef0c\"}.bx-baguette:before{content:\"\\ef0d\"}.bx-bowl-hot:before{content:\"\\ef0e\"}.bx-bowl-rice:before{content:\"\\ef0f\"}.bx-cable-car:before{content:\"\\ef10\"}.bx-candles:before{content:\"\\ef11\"}.bx-circle-half:before{content:\"\\ef12\"}.bx-circle-quarter:before{content:\"\\ef13\"}.bx-circle-three-quarter:before{content:\"\\ef14\"}.bx-cross:before{content:\"\\ef15\"}.bx-fork:before{content:\"\\ef16\"}.bx-knife:before{content:\"\\ef17\"}.bx-money-withdraw:before{content:\"\\ef18\"}.bx-popsicle:before{content:\"\\ef19\"}.bx-scatter-chart:before{content:\"\\ef1a\"}.bxs-baguette:before{content:\"\\ef1b\"}.bxs-bowl-hot:before{content:\"\\ef1c\"}.bxs-bowl-rice:before{content:\"\\ef1d\"}.bxs-cable-car:before{content:\"\\ef1e\"}.bxs-circle-half:before{content:\"\\ef1f\"}.bxs-circle-quarter:before{content:\"\\ef20\"}.bxs-circle-three-quarter:before{content:\"\\ef21\"}.bxs-cricket-ball:before{content:\"\\ef22\"}.bxs-invader:before{content:\"\\ef23\"}.bx-male-female:before{content:\"\\ef24\"}.bxs-popsicle:before{content:\"\\ef25\"}.bxs-tree-alt:before{content:\"\\ef26\"}.bxl-venmo:before{content:\"\\e900\"}.bxl-upwork:before{content:\"\\e901\"}.bxl-netlify:before{content:\"\\e902\"}.bxl-java:before{content:\"\\e903\"}.bxl-heroku:before{content:\"\\e904\"}.bxl-go-lang:before{content:\"\\e905\"}.bxl-gmail:before{content:\"\\e906\"}.bxl-flask:before{content:\"\\e907\"}.bxl-99designs:before{content:\"\\e908\"}.bxl-500px:before{content:\"\\e909\"}.bxl-adobe:before{content:\"\\e90a\"}.bxl-airbnb:before{content:\"\\e90b\"}.bxl-algolia:before{content:\"\\e90c\"}.bxl-amazon:before{content:\"\\e90d\"}.bxl-android:before{content:\"\\e90e\"}.bxl-angular:before{content:\"\\e90f\"}.bxl-apple:before{content:\"\\e910\"}.bxl-audible:before{content:\"\\e911\"}.bxl-aws:before{content:\"\\e912\"}.bxl-baidu:before{content:\"\\e913\"}.bxl-behance:before{content:\"\\e914\"}.bxl-bing:before{content:\"\\e915\"}.bxl-bitcoin:before{content:\"\\e916\"}.bxl-blender:before{content:\"\\e917\"}.bxl-blogger:before{content:\"\\e918\"}.bxl-bootstrap:before{content:\"\\e919\"}.bxl-chrome:before{content:\"\\e91a\"}.bxl-codepen:before{content:\"\\e91b\"}.bxl-c-plus-plus:before{content:\"\\e91c\"}.bxl-creative-commons:before{content:\"\\e91d\"}.bxl-css3:before{content:\"\\e91e\"}.bxl-dailymotion:before{content:\"\\e91f\"}.bxl-deviantart:before{content:\"\\e920\"}.bxl-dev-to:before{content:\"\\e921\"}.bxl-digg:before{content:\"\\e922\"}.bxl-digitalocean:before{content:\"\\e923\"}.bxl-discord:before{content:\"\\e924\"}.bxl-discord-alt:before{content:\"\\e925\"}.bxl-discourse:before{content:\"\\e926\"}.bxl-django:before{content:\"\\e927\"}.bxl-docker:before{content:\"\\e928\"}.bxl-dribbble:before{content:\"\\e929\"}.bxl-dropbox:before{content:\"\\e92a\"}.bxl-drupal:before{content:\"\\e92b\"}.bxl-ebay:before{content:\"\\e92c\"}.bxl-edge:before{content:\"\\e92d\"}.bxl-etsy:before{content:\"\\e92e\"}.bxl-facebook:before{content:\"\\e92f\"}.bxl-facebook-circle:before{content:\"\\e930\"}.bxl-facebook-square:before{content:\"\\e931\"}.bxl-figma:before{content:\"\\e932\"}.bxl-firebase:before{content:\"\\e933\"}.bxl-firefox:before{content:\"\\e934\"}.bxl-flickr:before{content:\"\\e935\"}.bxl-flickr-square:before{content:\"\\e936\"}.bxl-flutter:before{content:\"\\e937\"}.bxl-foursquare:before{content:\"\\e938\"}.bxl-git:before{content:\"\\e939\"}.bxl-github:before{content:\"\\e93a\"}.bxl-gitlab:before{content:\"\\e93b\"}.bxl-google:before{content:\"\\e93c\"}.bxl-google-cloud:before{content:\"\\e93d\"}.bxl-google-plus:before{content:\"\\e93e\"}.bxl-google-plus-circle:before{content:\"\\e93f\"}.bxl-html5:before{content:\"\\e940\"}.bxl-imdb:before{content:\"\\e941\"}.bxl-instagram:before{content:\"\\e942\"}.bxl-instagram-alt:before{content:\"\\e943\"}.bxl-internet-explorer:before{content:\"\\e944\"}.bxl-invision:before{content:\"\\e945\"}.bxl-javascript:before{content:\"\\e946\"}.bxl-joomla:before{content:\"\\e947\"}.bxl-jquery:before{content:\"\\e948\"}.bxl-jsfiddle:before{content:\"\\e949\"}.bxl-kickstarter:before{content:\"\\e94a\"}.bxl-kubernetes:before{content:\"\\e94b\"}.bxl-less:before{content:\"\\e94c\"}.bxl-linkedin:before{content:\"\\e94d\"}.bxl-linkedin-square:before{content:\"\\e94e\"}.bxl-magento:before{content:\"\\e94f\"}.bxl-mailchimp:before{content:\"\\e950\"}.bxl-markdown:before{content:\"\\e951\"}.bxl-mastercard:before{content:\"\\e952\"}.bxl-mastodon:before{content:\"\\e953\"}.bxl-medium:before{content:\"\\e954\"}.bxl-medium-old:before{content:\"\\e955\"}.bxl-medium-square:before{content:\"\\e956\"}.bxl-messenger:before{content:\"\\e957\"}.bxl-microsoft:before{content:\"\\e958\"}.bxl-microsoft-teams:before{content:\"\\e959\"}.bxl-nodejs:before{content:\"\\e95a\"}.bxl-ok-ru:before{content:\"\\e95b\"}.bxl-opera:before{content:\"\\e95c\"}.bxl-patreon:before{content:\"\\e95d\"}.bxl-paypal:before{content:\"\\e95e\"}.bxl-periscope:before{content:\"\\e95f\"}.bxl-php:before{content:\"\\e960\"}.bxl-pinterest:before{content:\"\\e961\"}.bxl-pinterest-alt:before{content:\"\\e962\"}.bxl-play-store:before{content:\"\\e963\"}.bxl-pocket:before{content:\"\\e964\"}.bxl-product-hunt:before{content:\"\\e965\"}.bxl-python:before{content:\"\\e966\"}.bxl-quora:before{content:\"\\e967\"}.bxl-react:before{content:\"\\e968\"}.bxl-redbubble:before{content:\"\\e969\"}.bxl-reddit:before{content:\"\\e96a\"}.bxl-redux:before{content:\"\\e96b\"}.bxl-sass:before{content:\"\\e96c\"}.bxl-shopify:before{content:\"\\e96d\"}.bxl-sketch:before{content:\"\\e96e\"}.bxl-skype:before{content:\"\\e96f\"}.bxl-slack:before{content:\"\\e970\"}.bxl-slack-old:before{content:\"\\e971\"}.bxl-snapchat:before{content:\"\\e972\"}.bxl-soundcloud:before{content:\"\\e973\"}.bxl-spotify:before{content:\"\\e974\"}.bxl-spring-boot:before{content:\"\\e975\"}.bxl-squarespace:before{content:\"\\e976\"}.bxl-stack-overflow:before{content:\"\\e977\"}.bxl-steam:before{content:\"\\e978\"}.bxl-stripe:before{content:\"\\e979\"}.bxl-tailwind-css:before{content:\"\\e97a\"}.bxl-telegram:before{content:\"\\e97b\"}.bxl-tiktok:before{content:\"\\e97c\"}.bxl-trello:before{content:\"\\e97d\"}.bxl-trip-advisor:before{content:\"\\e97e\"}.bxl-tumblr:before{content:\"\\e97f\"}.bxl-tux:before{content:\"\\e980\"}.bxl-twitch:before{content:\"\\e981\"}.bxl-twitter:before{content:\"\\e982\"}.bxl-unity:before{content:\"\\e983\"}.bxl-unsplash:before{content:\"\\e984\"}.bxl-vimeo:before{content:\"\\e985\"}.bxl-visa:before{content:\"\\e986\"}.bxl-visual-studio:before{content:\"\\e987\"}.bxl-vk:before{content:\"\\e988\"}.bxl-vuejs:before{content:\"\\e989\"}.bxl-whatsapp:before{content:\"\\e98a\"}.bxl-whatsapp-square:before{content:\"\\e98b\"}.bxl-wikipedia:before{content:\"\\e98c\"}.bxl-windows:before{content:\"\\e98d\"}.bxl-wix:before{content:\"\\e98e\"}.bxl-wordpress:before{content:\"\\e98f\"}.bxl-yahoo:before{content:\"\\e990\"}.bxl-yelp:before{content:\"\\e991\"}.bxl-youtube:before{content:\"\\e992\"}.bxl-zoom:before{content:\"\\e993\"}.bx-collapse-alt:before{content:\"\\e994\"}.bx-collapse-horizontal:before{content:\"\\e995\"}.bx-collapse-vertical:before{content:\"\\e996\"}.bx-expand-horizontal:before{content:\"\\e997\"}.bx-expand-vertical:before{content:\"\\e998\"}.bx-injection:before{content:\"\\e999\"}.bx-leaf:before{content:\"\\e99a\"}.bx-math:before{content:\"\\e99b\"}.bx-party:before{content:\"\\e99c\"}.bx-abacus:before{content:\"\\e99d\"}.bx-accessibility:before{content:\"\\e99e\"}.bx-add-to-queue:before{content:\"\\e99f\"}.bx-adjust:before{content:\"\\e9a0\"}.bx-alarm:before{content:\"\\e9a1\"}.bx-alarm-add:before{content:\"\\e9a2\"}.bx-alarm-exclamation:before{content:\"\\e9a3\"}.bx-alarm-off:before{content:\"\\e9a4\"}.bx-alarm-snooze:before{content:\"\\e9a5\"}.bx-album:before{content:\"\\e9a6\"}.bx-align-justify:before{content:\"\\e9a7\"}.bx-align-left:before{content:\"\\e9a8\"}.bx-align-middle:before{content:\"\\e9a9\"}.bx-align-right:before{content:\"\\e9aa\"}.bx-analyse:before{content:\"\\e9ab\"}.bx-anchor:before{content:\"\\e9ac\"}.bx-angry:before{content:\"\\e9ad\"}.bx-aperture:before{content:\"\\e9ae\"}.bx-arch:before{content:\"\\e9af\"}.bx-archive:before{content:\"\\e9b0\"}.bx-archive-in:before{content:\"\\e9b1\"}.bx-archive-out:before{content:\"\\e9b2\"}.bx-area:before{content:\"\\e9b3\"}.bx-arrow-back:before{content:\"\\e9b4\"}.bx-arrow-from-bottom:before{content:\"\\e9b5\"}.bx-arrow-from-left:before{content:\"\\e9b6\"}.bx-arrow-from-right:before{content:\"\\e9b7\"}.bx-arrow-from-top:before{content:\"\\e9b8\"}.bx-arrow-to-bottom:before{content:\"\\e9b9\"}.bx-arrow-to-left:before{content:\"\\e9ba\"}.bx-arrow-to-right:before{content:\"\\e9bb\"}.bx-arrow-to-top:before{content:\"\\e9bc\"}.bx-at:before{content:\"\\e9bd\"}.bx-atom:before{content:\"\\e9be\"}.bx-award:before{content:\"\\e9bf\"}.bx-badge:before{content:\"\\e9c0\"}.bx-badge-check:before{content:\"\\e9c1\"}.bx-ball:before{content:\"\\e9c2\"}.bx-band-aid:before{content:\"\\e9c3\"}.bx-bar-chart:before{content:\"\\e9c4\"}.bx-bar-chart-alt:before{content:\"\\e9c5\"}.bx-bar-chart-alt-2:before{content:\"\\e9c6\"}.bx-bar-chart-square:before{content:\"\\e9c7\"}.bx-barcode:before{content:\"\\e9c8\"}.bx-barcode-reader:before{content:\"\\e9c9\"}.bx-baseball:before{content:\"\\e9ca\"}.bx-basket:before{content:\"\\e9cb\"}.bx-basketball:before{content:\"\\e9cc\"}.bx-bath:before{content:\"\\e9cd\"}.bx-battery:before{content:\"\\e9ce\"}.bx-bed:before{content:\"\\e9cf\"}.bx-been-here:before{content:\"\\e9d0\"}.bx-beer:before{content:\"\\e9d1\"}.bx-bell:before{content:\"\\e9d2\"}.bx-bell-minus:before{content:\"\\e9d3\"}.bx-bell-off:before{content:\"\\e9d4\"}.bx-bell-plus:before{content:\"\\e9d5\"}.bx-bible:before{content:\"\\e9d6\"}.bx-bitcoin:before{content:\"\\e9d7\"}.bx-blanket:before{content:\"\\e9d8\"}.bx-block:before{content:\"\\e9d9\"}.bx-bluetooth:before{content:\"\\e9da\"}.bx-body:before{content:\"\\e9db\"}.bx-bold:before{content:\"\\e9dc\"}.bx-bolt-circle:before{content:\"\\e9dd\"}.bx-bomb:before{content:\"\\e9de\"}.bx-bone:before{content:\"\\e9df\"}.bx-bong:before{content:\"\\e9e0\"}.bx-book:before{content:\"\\e9e1\"}.bx-book-add:before{content:\"\\e9e2\"}.bx-book-alt:before{content:\"\\e9e3\"}.bx-book-bookmark:before{content:\"\\e9e4\"}.bx-book-content:before{content:\"\\e9e5\"}.bx-book-heart:before{content:\"\\e9e6\"}.bx-bookmark:before{content:\"\\e9e7\"}.bx-bookmark-alt:before{content:\"\\e9e8\"}.bx-bookmark-alt-minus:before{content:\"\\e9e9\"}.bx-bookmark-alt-plus:before{content:\"\\e9ea\"}.bx-bookmark-heart:before{content:\"\\e9eb\"}.bx-bookmark-minus:before{content:\"\\e9ec\"}.bx-bookmark-plus:before{content:\"\\e9ed\"}.bx-bookmarks:before{content:\"\\e9ee\"}.bx-book-open:before{content:\"\\e9ef\"}.bx-book-reader:before{content:\"\\e9f0\"}.bx-border-all:before{content:\"\\e9f1\"}.bx-border-bottom:before{content:\"\\e9f2\"}.bx-border-inner:before{content:\"\\e9f3\"}.bx-border-left:before{content:\"\\e9f4\"}.bx-border-none:before{content:\"\\e9f5\"}.bx-border-outer:before{content:\"\\e9f6\"}.bx-border-radius:before{content:\"\\e9f7\"}.bx-border-right:before{content:\"\\e9f8\"}.bx-border-top:before{content:\"\\e9f9\"}.bx-bot:before{content:\"\\e9fa\"}.bx-bowling-ball:before{content:\"\\e9fb\"}.bx-box:before{content:\"\\e9fc\"}.bx-bracket:before{content:\"\\e9fd\"}.bx-braille:before{content:\"\\e9fe\"}.bx-brain:before{content:\"\\e9ff\"}.bx-briefcase:before{content:\"\\ea00\"}.bx-briefcase-alt:before{content:\"\\ea01\"}.bx-briefcase-alt-2:before{content:\"\\ea02\"}.bx-brightness:before{content:\"\\ea03\"}.bx-brightness-half:before{content:\"\\ea04\"}.bx-broadcast:before{content:\"\\ea05\"}.bx-brush:before{content:\"\\ea06\"}.bx-brush-alt:before{content:\"\\ea07\"}.bx-bug:before{content:\"\\ea08\"}.bx-bug-alt:before{content:\"\\ea09\"}.bx-building:before{content:\"\\ea0a\"}.bx-building-house:before{content:\"\\ea0b\"}.bx-buildings:before{content:\"\\ea0c\"}.bx-bulb:before{content:\"\\ea0d\"}.bx-bullseye:before{content:\"\\ea0e\"}.bx-buoy:before{content:\"\\ea0f\"}.bx-bus:before{content:\"\\ea10\"}.bx-bus-school:before{content:\"\\ea11\"}.bx-cabinet:before{content:\"\\ea12\"}.bx-cake:before{content:\"\\ea13\"}.bx-calculator:before{content:\"\\ea14\"}.bx-calendar:before{content:\"\\ea15\"}.bx-calendar-alt:before{content:\"\\ea16\"}.bx-calendar-check:before{content:\"\\ea17\"}.bx-calendar-edit:before{content:\"\\ea18\"}.bx-calendar-event:before{content:\"\\ea19\"}.bx-calendar-exclamation:before{content:\"\\ea1a\"}.bx-calendar-heart:before{content:\"\\ea1b\"}.bx-calendar-minus:before{content:\"\\ea1c\"}.bx-calendar-plus:before{content:\"\\ea1d\"}.bx-calendar-star:before{content:\"\\ea1e\"}.bx-calendar-week:before{content:\"\\ea1f\"}.bx-calendar-x:before{content:\"\\ea20\"}.bx-camera:before{content:\"\\ea21\"}.bx-camera-home:before{content:\"\\ea22\"}.bx-camera-movie:before{content:\"\\ea23\"}.bx-camera-off:before{content:\"\\ea24\"}.bx-capsule:before{content:\"\\ea25\"}.bx-captions:before{content:\"\\ea26\"}.bx-car:before{content:\"\\ea27\"}.bx-card:before{content:\"\\ea28\"}.bx-caret-down:before{content:\"\\ea29\"}.bx-caret-down-circle:before{content:\"\\ea2a\"}.bx-caret-down-square:before{content:\"\\ea2b\"}.bx-caret-left:before{content:\"\\ea2c\"}.bx-caret-left-circle:before{content:\"\\ea2d\"}.bx-caret-left-square:before{content:\"\\ea2e\"}.bx-caret-right:before{content:\"\\ea2f\"}.bx-caret-right-circle:before{content:\"\\ea30\"}.bx-caret-right-square:before{content:\"\\ea31\"}.bx-caret-up:before{content:\"\\ea32\"}.bx-caret-up-circle:before{content:\"\\ea33\"}.bx-caret-up-square:before{content:\"\\ea34\"}.bx-carousel:before{content:\"\\ea35\"}.bx-cart:before{content:\"\\ea36\"}.bx-cart-alt:before{content:\"\\ea37\"}.bx-cast:before{content:\"\\ea38\"}.bx-category:before{content:\"\\ea39\"}.bx-category-alt:before{content:\"\\ea3a\"}.bx-cctv:before{content:\"\\ea3b\"}.bx-certification:before{content:\"\\ea3c\"}.bx-chair:before{content:\"\\ea3d\"}.bx-chalkboard:before{content:\"\\ea3e\"}.bx-chart:before{content:\"\\ea3f\"}.bx-chat:before{content:\"\\ea40\"}.bx-check:before{content:\"\\ea41\"}.bx-checkbox:before{content:\"\\ea42\"}.bx-checkbox-checked:before{content:\"\\ea43\"}.bx-checkbox-minus:before{content:\"\\ea44\"}.bx-checkbox-square:before{content:\"\\ea45\"}.bx-check-circle:before{content:\"\\ea46\"}.bx-check-double:before{content:\"\\ea47\"}.bx-check-shield:before{content:\"\\ea48\"}.bx-check-square:before{content:\"\\ea49\"}.bx-chevron-down:before{content:\"\\ea4a\"}.bx-chevron-down-circle:before{content:\"\\ea4b\"}.bx-chevron-down-square:before{content:\"\\ea4c\"}.bx-chevron-left:before{content:\"\\ea4d\"}.bx-chevron-left-circle:before{content:\"\\ea4e\"}.bx-chevron-left-square:before{content:\"\\ea4f\"}.bx-chevron-right:before{content:\"\\ea50\"}.bx-chevron-right-circle:before{content:\"\\ea51\"}.bx-chevron-right-square:before{content:\"\\ea52\"}.bx-chevrons-down:before{content:\"\\ea53\"}.bx-chevrons-left:before{content:\"\\ea54\"}.bx-chevrons-right:before{content:\"\\ea55\"}.bx-chevrons-up:before{content:\"\\ea56\"}.bx-chevron-up:before{content:\"\\ea57\"}.bx-chevron-up-circle:before{content:\"\\ea58\"}.bx-chevron-up-square:before{content:\"\\ea59\"}.bx-chip:before{content:\"\\ea5a\"}.bx-church:before{content:\"\\ea5b\"}.bx-circle:before{content:\"\\ea5c\"}.bx-clinic:before{content:\"\\ea5d\"}.bx-clipboard:before{content:\"\\ea5e\"}.bx-closet:before{content:\"\\ea5f\"}.bx-cloud:before{content:\"\\ea60\"}.bx-cloud-download:before{content:\"\\ea61\"}.bx-cloud-drizzle:before{content:\"\\ea62\"}.bx-cloud-lightning:before{content:\"\\ea63\"}.bx-cloud-light-rain:before{content:\"\\ea64\"}.bx-cloud-rain:before{content:\"\\ea65\"}.bx-cloud-snow:before{content:\"\\ea66\"}.bx-cloud-upload:before{content:\"\\ea67\"}.bx-code:before{content:\"\\ea68\"}.bx-code-alt:before{content:\"\\ea69\"}.bx-code-block:before{content:\"\\ea6a\"}.bx-code-curly:before{content:\"\\ea6b\"}.bx-coffee:before{content:\"\\ea6c\"}.bx-coffee-togo:before{content:\"\\ea6d\"}.bx-cog:before{content:\"\\ea6e\"}.bx-coin:before{content:\"\\ea6f\"}.bx-coin-stack:before{content:\"\\ea70\"}.bx-collapse:before{content:\"\\ea71\"}.bx-collection:before{content:\"\\ea72\"}.bx-color-fill:before{content:\"\\ea73\"}.bx-columns:before{content:\"\\ea74\"}.bx-command:before{content:\"\\ea75\"}.bx-comment:before{content:\"\\ea76\"}.bx-comment-add:before{content:\"\\ea77\"}.bx-comment-check:before{content:\"\\ea78\"}.bx-comment-detail:before{content:\"\\ea79\"}.bx-comment-dots:before{content:\"\\ea7a\"}.bx-comment-edit:before{content:\"\\ea7b\"}.bx-comment-error:before{content:\"\\ea7c\"}.bx-comment-minus:before{content:\"\\ea7d\"}.bx-comment-x:before{content:\"\\ea7e\"}.bx-compass:before{content:\"\\ea7f\"}.bx-confused:before{content:\"\\ea80\"}.bx-conversation:before{content:\"\\ea81\"}.bx-cookie:before{content:\"\\ea82\"}.bx-cool:before{content:\"\\ea83\"}.bx-copy:before{content:\"\\ea84\"}.bx-copy-alt:before{content:\"\\ea85\"}.bx-copyright:before{content:\"\\ea86\"}.bx-credit-card:before{content:\"\\ea87\"}.bx-credit-card-alt:before{content:\"\\ea88\"}.bx-credit-card-front:before{content:\"\\ea89\"}.bx-crop:before{content:\"\\ea8a\"}.bx-crosshair:before{content:\"\\ea8b\"}.bx-crown:before{content:\"\\ea8c\"}.bx-cube:before{content:\"\\ea8d\"}.bx-cube-alt:before{content:\"\\ea8e\"}.bx-cuboid:before{content:\"\\ea8f\"}.bx-current-location:before{content:\"\\ea90\"}.bx-customize:before{content:\"\\ea91\"}.bx-cut:before{content:\"\\ea92\"}.bx-cycling:before{content:\"\\ea93\"}.bx-cylinder:before{content:\"\\ea94\"}.bx-data:before{content:\"\\ea95\"}.bx-desktop:before{content:\"\\ea96\"}.bx-detail:before{content:\"\\ea97\"}.bx-devices:before{content:\"\\ea98\"}.bx-dialpad:before{content:\"\\ea99\"}.bx-dialpad-alt:before{content:\"\\ea9a\"}.bx-diamond:before{content:\"\\ea9b\"}.bx-dice-1:before{content:\"\\ea9c\"}.bx-dice-2:before{content:\"\\ea9d\"}.bx-dice-3:before{content:\"\\ea9e\"}.bx-dice-4:before{content:\"\\ea9f\"}.bx-dice-5:before{content:\"\\eaa0\"}.bx-dice-6:before{content:\"\\eaa1\"}.bx-directions:before{content:\"\\eaa2\"}.bx-disc:before{content:\"\\eaa3\"}.bx-dish:before{content:\"\\eaa4\"}.bx-dislike:before{content:\"\\eaa5\"}.bx-dizzy:before{content:\"\\eaa6\"}.bx-dna:before{content:\"\\eaa7\"}.bx-dock-bottom:before{content:\"\\eaa8\"}.bx-dock-left:before{content:\"\\eaa9\"}.bx-dock-right:before{content:\"\\eaaa\"}.bx-dock-top:before{content:\"\\eaab\"}.bx-dollar:before{content:\"\\eaac\"}.bx-dollar-circle:before{content:\"\\eaad\"}.bx-donate-blood:before{content:\"\\eaae\"}.bx-donate-heart:before{content:\"\\eaaf\"}.bx-door-open:before{content:\"\\eab0\"}.bx-dots-horizontal:before{content:\"\\eab1\"}.bx-dots-horizontal-rounded:before{content:\"\\eab2\"}.bx-dots-vertical:before{content:\"\\eab3\"}.bx-dots-vertical-rounded:before{content:\"\\eab4\"}.bx-doughnut-chart:before{content:\"\\eab5\"}.bx-down-arrow:before{content:\"\\eab6\"}.bx-down-arrow-alt:before{content:\"\\eab7\"}.bx-down-arrow-circle:before{content:\"\\eab8\"}.bx-download:before{content:\"\\eab9\"}.bx-downvote:before{content:\"\\eaba\"}.bx-drink:before{content:\"\\eabb\"}.bx-droplet:before{content:\"\\eabc\"}.bx-dumbbell:before{content:\"\\eabd\"}.bx-duplicate:before{content:\"\\eabe\"}.bx-edit:before{content:\"\\eabf\"}.bx-edit-alt:before{content:\"\\eac0\"}.bx-envelope:before{content:\"\\eac1\"}.bx-envelope-open:before{content:\"\\eac2\"}.bx-equalizer:before{content:\"\\eac3\"}.bx-eraser:before{content:\"\\eac4\"}.bx-error:before{content:\"\\eac5\"}.bx-error-alt:before{content:\"\\eac6\"}.bx-error-circle:before{content:\"\\eac7\"}.bx-euro:before{content:\"\\eac8\"}.bx-exclude:before{content:\"\\eac9\"}.bx-exit:before{content:\"\\eaca\"}.bx-exit-fullscreen:before{content:\"\\eacb\"}.bx-expand:before{content:\"\\eacc\"}.bx-expand-alt:before{content:\"\\eacd\"}.bx-export:before{content:\"\\eace\"}.bx-extension:before{content:\"\\eacf\"}.bx-face:before{content:\"\\ead0\"}.bx-fast-forward:before{content:\"\\ead1\"}.bx-fast-forward-circle:before{content:\"\\ead2\"}.bx-female:before{content:\"\\ead3\"}.bx-female-sign:before{content:\"\\ead4\"}.bx-file:before{content:\"\\ead5\"}.bx-file-blank:before{content:\"\\ead6\"}.bx-file-find:before{content:\"\\ead7\"}.bx-film:before{content:\"\\ead8\"}.bx-filter:before{content:\"\\ead9\"}.bx-filter-alt:before{content:\"\\eada\"}.bx-fingerprint:before{content:\"\\eadb\"}.bx-first-aid:before{content:\"\\eadc\"}.bx-first-page:before{content:\"\\eadd\"}.bx-flag:before{content:\"\\eade\"}.bx-folder:before{content:\"\\eadf\"}.bx-folder-minus:before{content:\"\\eae0\"}.bx-folder-open:before{content:\"\\eae1\"}.bx-folder-plus:before{content:\"\\eae2\"}.bx-font:before{content:\"\\eae3\"}.bx-font-color:before{content:\"\\eae4\"}.bx-font-family:before{content:\"\\eae5\"}.bx-font-size:before{content:\"\\eae6\"}.bx-food-menu:before{content:\"\\eae7\"}.bx-food-tag:before{content:\"\\eae8\"}.bx-football:before{content:\"\\eae9\"}.bx-fridge:before{content:\"\\eaea\"}.bx-fullscreen:before{content:\"\\eaeb\"}.bx-game:before{content:\"\\eaec\"}.bx-gas-pump:before{content:\"\\eaed\"}.bx-ghost:before{content:\"\\eaee\"}.bx-gift:before{content:\"\\eaef\"}.bx-git-branch:before{content:\"\\eaf0\"}.bx-git-commit:before{content:\"\\eaf1\"}.bx-git-compare:before{content:\"\\eaf2\"}.bx-git-merge:before{content:\"\\eaf3\"}.bx-git-pull-request:before{content:\"\\eaf4\"}.bx-git-repo-forked:before{content:\"\\eaf5\"}.bx-glasses:before{content:\"\\eaf6\"}.bx-glasses-alt:before{content:\"\\eaf7\"}.bx-globe:before{content:\"\\eaf8\"}.bx-globe-alt:before{content:\"\\eaf9\"}.bx-grid:before{content:\"\\eafa\"}.bx-grid-alt:before{content:\"\\eafb\"}.bx-grid-horizontal:before{content:\"\\eafc\"}.bx-grid-small:before{content:\"\\eafd\"}.bx-grid-vertical:before{content:\"\\eafe\"}.bx-group:before{content:\"\\eaff\"}.bx-handicap:before{content:\"\\eb00\"}.bx-happy:before{content:\"\\eb01\"}.bx-happy-alt:before{content:\"\\eb02\"}.bx-happy-beaming:before{content:\"\\eb03\"}.bx-happy-heart-eyes:before{content:\"\\eb04\"}.bx-hash:before{content:\"\\eb05\"}.bx-hdd:before{content:\"\\eb06\"}.bx-heading:before{content:\"\\eb07\"}.bx-headphone:before{content:\"\\eb08\"}.bx-health:before{content:\"\\eb09\"}.bx-heart:before{content:\"\\eb0a\"}.bx-heart-circle:before{content:\"\\eb0b\"}.bx-heart-square:before{content:\"\\eb0c\"}.bx-help-circle:before{content:\"\\eb0d\"}.bx-hide:before{content:\"\\eb0e\"}.bx-highlight:before{content:\"\\eb0f\"}.bx-history:before{content:\"\\eb10\"}.bx-hive:before{content:\"\\eb11\"}.bx-home:before{content:\"\\eb12\"}.bx-home-alt:before{content:\"\\eb13\"}.bx-home-circle:before{content:\"\\eb14\"}.bx-home-heart:before{content:\"\\eb15\"}.bx-home-smile:before{content:\"\\eb16\"}.bx-horizontal-center:before{content:\"\\eb17\"}.bx-hotel:before{content:\"\\eb18\"}.bx-hourglass:before{content:\"\\eb19\"}.bx-id-card:before{content:\"\\eb1a\"}.bx-image:before{content:\"\\eb1b\"}.bx-image-add:before{content:\"\\eb1c\"}.bx-image-alt:before{content:\"\\eb1d\"}.bx-images:before{content:\"\\eb1e\"}.bx-import:before{content:\"\\eb1f\"}.bx-infinite:before{content:\"\\eb20\"}.bx-info-circle:before{content:\"\\eb21\"}.bx-info-square:before{content:\"\\eb22\"}.bx-intersect:before{content:\"\\eb23\"}.bx-italic:before{content:\"\\eb24\"}.bx-joystick:before{content:\"\\eb25\"}.bx-joystick-alt:before{content:\"\\eb26\"}.bx-joystick-button:before{content:\"\\eb27\"}.bx-key:before{content:\"\\eb28\"}.bx-label:before{content:\"\\eb29\"}.bx-landscape:before{content:\"\\eb2a\"}.bx-laptop:before{content:\"\\eb2b\"}.bx-last-page:before{content:\"\\eb2c\"}.bx-laugh:before{content:\"\\eb2d\"}.bx-layer:before{content:\"\\eb2e\"}.bx-layer-minus:before{content:\"\\eb2f\"}.bx-layer-plus:before{content:\"\\eb30\"}.bx-layout:before{content:\"\\eb31\"}.bx-left-arrow:before{content:\"\\eb32\"}.bx-left-arrow-alt:before{content:\"\\eb33\"}.bx-left-arrow-circle:before{content:\"\\eb34\"}.bx-left-down-arrow-circle:before{content:\"\\eb35\"}.bx-left-indent:before{content:\"\\eb36\"}.bx-left-top-arrow-circle:before{content:\"\\eb37\"}.bx-library:before{content:\"\\eb38\"}.bx-like:before{content:\"\\eb39\"}.bx-line-chart:before{content:\"\\eb3a\"}.bx-line-chart-down:before{content:\"\\eb3b\"}.bx-link:before{content:\"\\eb3c\"}.bx-link-alt:before{content:\"\\eb3d\"}.bx-link-external:before{content:\"\\eb3e\"}.bx-lira:before{content:\"\\eb3f\"}.bx-list-check:before{content:\"\\eb40\"}.bx-list-minus:before{content:\"\\eb41\"}.bx-list-ol:before{content:\"\\eb42\"}.bx-list-plus:before{content:\"\\eb43\"}.bx-list-ul:before{content:\"\\eb44\"}.bx-loader:before{content:\"\\eb45\"}.bx-loader-alt:before{content:\"\\eb46\"}.bx-loader-circle:before{content:\"\\eb47\"}.bx-location-plus:before{content:\"\\eb48\"}.bx-lock:before{content:\"\\eb49\"}.bx-lock-alt:before{content:\"\\eb4a\"}.bx-lock-open:before{content:\"\\eb4b\"}.bx-lock-open-alt:before{content:\"\\eb4c\"}.bx-log-in:before{content:\"\\eb4d\"}.bx-log-in-circle:before{content:\"\\eb4e\"}.bx-log-out:before{content:\"\\eb4f\"}.bx-log-out-circle:before{content:\"\\eb50\"}.bx-low-vision:before{content:\"\\eb51\"}.bx-magnet:before{content:\"\\eb52\"}.bx-mail-send:before{content:\"\\eb53\"}.bx-male:before{content:\"\\eb54\"}.bx-male-sign:before{content:\"\\eb55\"}.bx-map:before{content:\"\\eb56\"}.bx-map-alt:before{content:\"\\eb57\"}.bx-map-pin:before{content:\"\\eb58\"}.bx-mask:before{content:\"\\eb59\"}.bx-medal:before{content:\"\\eb5a\"}.bx-meh:before{content:\"\\eb5b\"}.bx-meh-alt:before{content:\"\\eb5c\"}.bx-meh-blank:before{content:\"\\eb5d\"}.bx-memory-card:before{content:\"\\eb5e\"}.bx-menu:before{content:\"\\eb5f\"}.bx-menu-alt-left:before{content:\"\\eb60\"}.bx-menu-alt-right:before{content:\"\\eb61\"}.bx-merge:before{content:\"\\eb62\"}.bx-message:before{content:\"\\eb63\"}.bx-message-add:before{content:\"\\eb64\"}.bx-message-alt:before{content:\"\\eb65\"}.bx-message-alt-add:before{content:\"\\eb66\"}.bx-message-alt-check:before{content:\"\\eb67\"}.bx-message-alt-detail:before{content:\"\\eb68\"}.bx-message-alt-dots:before{content:\"\\eb69\"}.bx-message-alt-edit:before{content:\"\\eb6a\"}.bx-message-alt-error:before{content:\"\\eb6b\"}.bx-message-alt-minus:before{content:\"\\eb6c\"}.bx-message-alt-x:before{content:\"\\eb6d\"}.bx-message-check:before{content:\"\\eb6e\"}.bx-message-detail:before{content:\"\\eb6f\"}.bx-message-dots:before{content:\"\\eb70\"}.bx-message-edit:before{content:\"\\eb71\"}.bx-message-error:before{content:\"\\eb72\"}.bx-message-minus:before{content:\"\\eb73\"}.bx-message-rounded:before{content:\"\\eb74\"}.bx-message-rounded-add:before{content:\"\\eb75\"}.bx-message-rounded-check:before{content:\"\\eb76\"}.bx-message-rounded-detail:before{content:\"\\eb77\"}.bx-message-rounded-dots:before{content:\"\\eb78\"}.bx-message-rounded-edit:before{content:\"\\eb79\"}.bx-message-rounded-error:before{content:\"\\eb7a\"}.bx-message-rounded-minus:before{content:\"\\eb7b\"}.bx-message-rounded-x:before{content:\"\\eb7c\"}.bx-message-square:before{content:\"\\eb7d\"}.bx-message-square-add:before{content:\"\\eb7e\"}.bx-message-square-check:before{content:\"\\eb7f\"}.bx-message-square-detail:before{content:\"\\eb80\"}.bx-message-square-dots:before{content:\"\\eb81\"}.bx-message-square-edit:before{content:\"\\eb82\"}.bx-message-square-error:before{content:\"\\eb83\"}.bx-message-square-minus:before{content:\"\\eb84\"}.bx-message-square-x:before{content:\"\\eb85\"}.bx-message-x:before{content:\"\\eb86\"}.bx-meteor:before{content:\"\\eb87\"}.bx-microchip:before{content:\"\\eb88\"}.bx-microphone:before{content:\"\\eb89\"}.bx-microphone-off:before{content:\"\\eb8a\"}.bx-minus:before{content:\"\\eb8b\"}.bx-minus-back:before{content:\"\\eb8c\"}.bx-minus-circle:before{content:\"\\eb8d\"}.bx-minus-front:before{content:\"\\eb8e\"}.bx-mobile:before{content:\"\\eb8f\"}.bx-mobile-alt:before{content:\"\\eb90\"}.bx-mobile-landscape:before{content:\"\\eb91\"}.bx-mobile-vibration:before{content:\"\\eb92\"}.bx-money:before{content:\"\\eb93\"}.bx-moon:before{content:\"\\eb94\"}.bx-mouse:before{content:\"\\eb95\"}.bx-mouse-alt:before{content:\"\\eb96\"}.bx-move:before{content:\"\\eb97\"}.bx-move-horizontal:before{content:\"\\eb98\"}.bx-move-vertical:before{content:\"\\eb99\"}.bx-movie:before{content:\"\\eb9a\"}.bx-movie-play:before{content:\"\\eb9b\"}.bx-music:before{content:\"\\eb9c\"}.bx-navigation:before{content:\"\\eb9d\"}.bx-network-chart:before{content:\"\\eb9e\"}.bx-news:before{content:\"\\eb9f\"}.bx-no-entry:before{content:\"\\eba0\"}.bx-note:before{content:\"\\eba1\"}.bx-notepad:before{content:\"\\eba2\"}.bx-notification:before{content:\"\\eba3\"}.bx-notification-off:before{content:\"\\eba4\"}.bx-outline:before{content:\"\\eba5\"}.bx-package:before{content:\"\\eba6\"}.bx-paint:before{content:\"\\eba7\"}.bx-paint-roll:before{content:\"\\eba8\"}.bx-palette:before{content:\"\\eba9\"}.bx-paperclip:before{content:\"\\ebaa\"}.bx-paper-plane:before{content:\"\\ebab\"}.bx-paragraph:before{content:\"\\ebac\"}.bx-paste:before{content:\"\\ebad\"}.bx-pause:before{content:\"\\ebae\"}.bx-pause-circle:before{content:\"\\ebaf\"}.bx-pen:before{content:\"\\ebb0\"}.bx-pencil:before{content:\"\\ebb1\"}.bx-phone:before{content:\"\\ebb2\"}.bx-phone-call:before{content:\"\\ebb3\"}.bx-phone-incoming:before{content:\"\\ebb4\"}.bx-phone-off:before{content:\"\\ebb5\"}.bx-phone-outgoing:before{content:\"\\ebb6\"}.bx-photo-album:before{content:\"\\ebb7\"}.bx-pie-chart:before{content:\"\\ebb8\"}.bx-pie-chart-alt:before{content:\"\\ebb9\"}.bx-pie-chart-alt-2:before{content:\"\\ebba\"}.bx-pin:before{content:\"\\ebbb\"}.bx-planet:before{content:\"\\ebbc\"}.bx-play:before{content:\"\\ebbd\"}.bx-play-circle:before{content:\"\\ebbe\"}.bx-plug:before{content:\"\\ebbf\"}.bx-plus:before{content:\"\\ebc0\"}.bx-plus-circle:before{content:\"\\ebc1\"}.bx-plus-medical:before{content:\"\\ebc2\"}.bx-podcast:before{content:\"\\ebc3\"}.bx-pointer:before{content:\"\\ebc4\"}.bx-poll:before{content:\"\\ebc5\"}.bx-polygon:before{content:\"\\ebc6\"}.bx-pound:before{content:\"\\ebc7\"}.bx-power-off:before{content:\"\\ebc8\"}.bx-printer:before{content:\"\\ebc9\"}.bx-pulse:before{content:\"\\ebca\"}.bx-purchase-tag:before{content:\"\\ebcb\"}.bx-purchase-tag-alt:before{content:\"\\ebcc\"}.bx-pyramid:before{content:\"\\ebcd\"}.bx-qr:before{content:\"\\ebce\"}.bx-qr-scan:before{content:\"\\ebcf\"}.bx-question-mark:before{content:\"\\ebd0\"}.bx-radar:before{content:\"\\ebd1\"}.bx-radio:before{content:\"\\ebd2\"}.bx-radio-circle:before{content:\"\\ebd3\"}.bx-radio-circle-marked:before{content:\"\\ebd4\"}.bx-receipt:before{content:\"\\ebd5\"}.bx-rectangle:before{content:\"\\ebd6\"}.bx-recycle:before{content:\"\\ebd7\"}.bx-redo:before{content:\"\\ebd8\"}.bx-refresh:before{content:\"\\ebd9\"}.bx-registered:before{content:\"\\ebda\"}.bx-rename:before{content:\"\\ebdb\"}.bx-repeat:before{content:\"\\ebdc\"}.bx-reply:before{content:\"\\ebdd\"}.bx-reply-all:before{content:\"\\ebde\"}.bx-repost:before{content:\"\\ebdf\"}.bx-reset:before{content:\"\\ebe0\"}.bx-restaurant:before{content:\"\\ebe1\"}.bx-revision:before{content:\"\\ebe2\"}.bx-rewind:before{content:\"\\ebe3\"}.bx-rewind-circle:before{content:\"\\ebe4\"}.bx-right-arrow:before{content:\"\\ebe5\"}.bx-right-arrow-alt:before{content:\"\\ebe6\"}.bx-right-arrow-circle:before{content:\"\\ebe7\"}.bx-right-down-arrow-circle:before{content:\"\\ebe8\"}.bx-right-indent:before{content:\"\\ebe9\"}.bx-right-top-arrow-circle:before{content:\"\\ebea\"}.bx-rocket:before{content:\"\\ebeb\"}.bx-rotate-left:before{content:\"\\ebec\"}.bx-rotate-right:before{content:\"\\ebed\"}.bx-rss:before{content:\"\\ebee\"}.bx-ruble:before{content:\"\\ebef\"}.bx-ruler:before{content:\"\\ebf0\"}.bx-run:before{content:\"\\ebf1\"}.bx-rupee:before{content:\"\\ebf2\"}.bx-sad:before{content:\"\\ebf3\"}.bx-save:before{content:\"\\ebf4\"}.bx-scan:before{content:\"\\ebf5\"}.bx-screenshot:before{content:\"\\ebf6\"}.bx-search:before{content:\"\\ebf7\"}.bx-search-alt:before{content:\"\\ebf8\"}.bx-search-alt-2:before{content:\"\\ebf9\"}.bx-selection:before{content:\"\\ebfa\"}.bx-select-multiple:before{content:\"\\ebfb\"}.bx-send:before{content:\"\\ebfc\"}.bx-server:before{content:\"\\ebfd\"}.bx-shape-circle:before{content:\"\\ebfe\"}.bx-shape-polygon:before{content:\"\\ebff\"}.bx-shape-square:before{content:\"\\ec00\"}.bx-shape-triangle:before{content:\"\\ec01\"}.bx-share:before{content:\"\\ec02\"}.bx-share-alt:before{content:\"\\ec03\"}.bx-shekel:before{content:\"\\ec04\"}.bx-shield:before{content:\"\\ec05\"}.bx-shield-alt:before{content:\"\\ec06\"}.bx-shield-alt-2:before{content:\"\\ec07\"}.bx-shield-quarter:before{content:\"\\ec08\"}.bx-shield-x:before{content:\"\\ec09\"}.bx-shocked:before{content:\"\\ec0a\"}.bx-shopping-bag:before{content:\"\\ec0b\"}.bx-show:before{content:\"\\ec0c\"}.bx-show-alt:before{content:\"\\ec0d\"}.bx-shuffle:before{content:\"\\ec0e\"}.bx-sidebar:before{content:\"\\ec0f\"}.bx-sitemap:before{content:\"\\ec10\"}.bx-skip-next:before{content:\"\\ec11\"}.bx-skip-next-circle:before{content:\"\\ec12\"}.bx-skip-previous:before{content:\"\\ec13\"}.bx-skip-previous-circle:before{content:\"\\ec14\"}.bx-sleepy:before{content:\"\\ec15\"}.bx-slider:before{content:\"\\ec16\"}.bx-slider-alt:before{content:\"\\ec17\"}.bx-slideshow:before{content:\"\\ec18\"}.bx-smile:before{content:\"\\ec19\"}.bx-sort:before{content:\"\\ec1a\"}.bx-sort-alt-2:before{content:\"\\ec1b\"}.bx-sort-a-z:before{content:\"\\ec1c\"}.bx-sort-down:before{content:\"\\ec1d\"}.bx-sort-up:before{content:\"\\ec1e\"}.bx-sort-z-a:before{content:\"\\ec1f\"}.bx-spa:before{content:\"\\ec20\"}.bx-space-bar:before{content:\"\\ec21\"}.bx-speaker:before{content:\"\\ec22\"}.bx-spray-can:before{content:\"\\ec23\"}.bx-spreadsheet:before{content:\"\\ec24\"}.bx-square:before{content:\"\\ec25\"}.bx-square-rounded:before{content:\"\\ec26\"}.bx-star:before{content:\"\\ec27\"}.bx-station:before{content:\"\\ec28\"}.bx-stats:before{content:\"\\ec29\"}.bx-sticker:before{content:\"\\ec2a\"}.bx-stop:before{content:\"\\ec2b\"}.bx-stop-circle:before{content:\"\\ec2c\"}.bx-stopwatch:before{content:\"\\ec2d\"}.bx-store:before{content:\"\\ec2e\"}.bx-store-alt:before{content:\"\\ec2f\"}.bx-street-view:before{content:\"\\ec30\"}.bx-strikethrough:before{content:\"\\ec31\"}.bx-subdirectory-left:before{content:\"\\ec32\"}.bx-subdirectory-right:before{content:\"\\ec33\"}.bx-sun:before{content:\"\\ec34\"}.bx-support:before{content:\"\\ec35\"}.bx-swim:before{content:\"\\ec36\"}.bx-sync:before{content:\"\\ec37\"}.bx-tab:before{content:\"\\ec38\"}.bx-table:before{content:\"\\ec39\"}.bx-tachometer:before{content:\"\\ec3a\"}.bx-tag:before{content:\"\\ec3b\"}.bx-tag-alt:before{content:\"\\ec3c\"}.bx-target-lock:before{content:\"\\ec3d\"}.bx-task:before{content:\"\\ec3e\"}.bx-task-x:before{content:\"\\ec3f\"}.bx-taxi:before{content:\"\\ec40\"}.bx-tennis-ball:before{content:\"\\ec41\"}.bx-terminal:before{content:\"\\ec42\"}.bx-test-tube:before{content:\"\\ec43\"}.bx-text:before{content:\"\\ec44\"}.bx-time:before{content:\"\\ec45\"}.bx-time-five:before{content:\"\\ec46\"}.bx-timer:before{content:\"\\ec47\"}.bx-tired:before{content:\"\\ec48\"}.bx-toggle-left:before{content:\"\\ec49\"}.bx-toggle-right:before{content:\"\\ec4a\"}.bx-tone:before{content:\"\\ec4b\"}.bx-traffic-cone:before{content:\"\\ec4c\"}.bx-train:before{content:\"\\ec4d\"}.bx-transfer:before{content:\"\\ec4e\"}.bx-transfer-alt:before{content:\"\\ec4f\"}.bx-trash:before{content:\"\\ec50\"}.bx-trash-alt:before{content:\"\\ec51\"}.bx-trending-down:before{content:\"\\ec52\"}.bx-trending-up:before{content:\"\\ec53\"}.bx-trim:before{content:\"\\ec54\"}.bx-trip:before{content:\"\\ec55\"}.bx-trophy:before{content:\"\\ec56\"}.bx-tv:before{content:\"\\ec57\"}.bx-underline:before{content:\"\\ec58\"}.bx-undo:before{content:\"\\ec59\"}.bx-unite:before{content:\"\\ec5a\"}.bx-unlink:before{content:\"\\ec5b\"}.bx-up-arrow:before{content:\"\\ec5c\"}.bx-up-arrow-alt:before{content:\"\\ec5d\"}.bx-up-arrow-circle:before{content:\"\\ec5e\"}.bx-upload:before{content:\"\\ec5f\"}.bx-upside-down:before{content:\"\\ec60\"}.bx-upvote:before{content:\"\\ec61\"}.bx-usb:before{content:\"\\ec62\"}.bx-user:before{content:\"\\ec63\"}.bx-user-check:before{content:\"\\ec64\"}.bx-user-circle:before{content:\"\\ec65\"}.bx-user-minus:before{content:\"\\ec66\"}.bx-user-pin:before{content:\"\\ec67\"}.bx-user-plus:before{content:\"\\ec68\"}.bx-user-voice:before{content:\"\\ec69\"}.bx-user-x:before{content:\"\\ec6a\"}.bx-vector:before{content:\"\\ec6b\"}.bx-vertical-center:before{content:\"\\ec6c\"}.bx-vial:before{content:\"\\ec6d\"}.bx-video:before{content:\"\\ec6e\"}.bx-video-off:before{content:\"\\ec6f\"}.bx-video-plus:before{content:\"\\ec70\"}.bx-video-recording:before{content:\"\\ec71\"}.bx-voicemail:before{content:\"\\ec72\"}.bx-volume:before{content:\"\\ec73\"}.bx-volume-full:before{content:\"\\ec74\"}.bx-volume-low:before{content:\"\\ec75\"}.bx-volume-mute:before{content:\"\\ec76\"}.bx-walk:before{content:\"\\ec77\"}.bx-wallet:before{content:\"\\ec78\"}.bx-wallet-alt:before{content:\"\\ec79\"}.bx-water:before{content:\"\\ec7a\"}.bx-webcam:before{content:\"\\ec7b\"}.bx-wifi:before{content:\"\\ec7c\"}.bx-wifi-0:before{content:\"\\ec7d\"}.bx-wifi-1:before{content:\"\\ec7e\"}.bx-wifi-2:before{content:\"\\ec7f\"}.bx-wifi-off:before{content:\"\\ec80\"}.bx-wind:before{content:\"\\ec81\"}.bx-window:before{content:\"\\ec82\"}.bx-window-alt:before{content:\"\\ec83\"}.bx-window-close:before{content:\"\\ec84\"}.bx-window-open:before{content:\"\\ec85\"}.bx-windows:before{content:\"\\ec86\"}.bx-wine:before{content:\"\\ec87\"}.bx-wink-smile:before{content:\"\\ec88\"}.bx-wink-tongue:before{content:\"\\ec89\"}.bx-won:before{content:\"\\ec8a\"}.bx-world:before{content:\"\\ec8b\"}.bx-wrench:before{content:\"\\ec8c\"}.bx-x:before{content:\"\\ec8d\"}.bx-x-circle:before{content:\"\\ec8e\"}.bx-yen:before{content:\"\\ec8f\"}.bx-zoom-in:before{content:\"\\ec90\"}.bx-zoom-out:before{content:\"\\ec91\"}.bxs-party:before{content:\"\\ec92\"}.bxs-hot:before{content:\"\\ec93\"}.bxs-droplet:before{content:\"\\ec94\"}.bxs-cat:before{content:\"\\ec95\"}.bxs-dog:before{content:\"\\ec96\"}.bxs-injection:before{content:\"\\ec97\"}.bxs-leaf:before{content:\"\\ec98\"}.bxs-add-to-queue:before{content:\"\\ec99\"}.bxs-adjust:before{content:\"\\ec9a\"}.bxs-adjust-alt:before{content:\"\\ec9b\"}.bxs-alarm:before{content:\"\\ec9c\"}.bxs-alarm-add:before{content:\"\\ec9d\"}.bxs-alarm-exclamation:before{content:\"\\ec9e\"}.bxs-alarm-off:before{content:\"\\ec9f\"}.bxs-alarm-snooze:before{content:\"\\eca0\"}.bxs-album:before{content:\"\\eca1\"}.bxs-ambulance:before{content:\"\\eca2\"}.bxs-analyse:before{content:\"\\eca3\"}.bxs-angry:before{content:\"\\eca4\"}.bxs-arch:before{content:\"\\eca5\"}.bxs-archive:before{content:\"\\eca6\"}.bxs-archive-in:before{content:\"\\eca7\"}.bxs-archive-out:before{content:\"\\eca8\"}.bxs-area:before{content:\"\\eca9\"}.bxs-arrow-from-bottom:before{content:\"\\ecaa\"}.bxs-arrow-from-left:before{content:\"\\ecab\"}.bxs-arrow-from-right:before{content:\"\\ecac\"}.bxs-arrow-from-top:before{content:\"\\ecad\"}.bxs-arrow-to-bottom:before{content:\"\\ecae\"}.bxs-arrow-to-left:before{content:\"\\ecaf\"}.bxs-arrow-to-right:before{content:\"\\ecb0\"}.bxs-arrow-to-top:before{content:\"\\ecb1\"}.bxs-award:before{content:\"\\ecb2\"}.bxs-baby-carriage:before{content:\"\\ecb3\"}.bxs-backpack:before{content:\"\\ecb4\"}.bxs-badge:before{content:\"\\ecb5\"}.bxs-badge-check:before{content:\"\\ecb6\"}.bxs-badge-dollar:before{content:\"\\ecb7\"}.bxs-ball:before{content:\"\\ecb8\"}.bxs-band-aid:before{content:\"\\ecb9\"}.bxs-bank:before{content:\"\\ecba\"}.bxs-bar-chart-alt-2:before{content:\"\\ecbb\"}.bxs-bar-chart-square:before{content:\"\\ecbc\"}.bxs-barcode:before{content:\"\\ecbd\"}.bxs-baseball:before{content:\"\\ecbe\"}.bxs-basket:before{content:\"\\ecbf\"}.bxs-basketball:before{content:\"\\ecc0\"}.bxs-bath:before{content:\"\\ecc1\"}.bxs-battery:before{content:\"\\ecc2\"}.bxs-battery-charging:before{content:\"\\ecc3\"}.bxs-battery-full:before{content:\"\\ecc4\"}.bxs-battery-low:before{content:\"\\ecc5\"}.bxs-bed:before{content:\"\\ecc6\"}.bxs-been-here:before{content:\"\\ecc7\"}.bxs-beer:before{content:\"\\ecc8\"}.bxs-bell:before{content:\"\\ecc9\"}.bxs-bell-minus:before{content:\"\\ecca\"}.bxs-bell-off:before{content:\"\\eccb\"}.bxs-bell-plus:before{content:\"\\eccc\"}.bxs-bell-ring:before{content:\"\\eccd\"}.bxs-bible:before{content:\"\\ecce\"}.bxs-binoculars:before{content:\"\\eccf\"}.bxs-blanket:before{content:\"\\ecd0\"}.bxs-bolt:before{content:\"\\ecd1\"}.bxs-bolt-circle:before{content:\"\\ecd2\"}.bxs-bomb:before{content:\"\\ecd3\"}.bxs-bone:before{content:\"\\ecd4\"}.bxs-bong:before{content:\"\\ecd5\"}.bxs-book:before{content:\"\\ecd6\"}.bxs-book-add:before{content:\"\\ecd7\"}.bxs-book-alt:before{content:\"\\ecd8\"}.bxs-book-bookmark:before{content:\"\\ecd9\"}.bxs-book-content:before{content:\"\\ecda\"}.bxs-book-heart:before{content:\"\\ecdb\"}.bxs-bookmark:before{content:\"\\ecdc\"}.bxs-bookmark-alt:before{content:\"\\ecdd\"}.bxs-bookmark-alt-minus:before{content:\"\\ecde\"}.bxs-bookmark-alt-plus:before{content:\"\\ecdf\"}.bxs-bookmark-heart:before{content:\"\\ece0\"}.bxs-bookmark-minus:before{content:\"\\ece1\"}.bxs-bookmark-plus:before{content:\"\\ece2\"}.bxs-bookmarks:before{content:\"\\ece3\"}.bxs-bookmark-star:before{content:\"\\ece4\"}.bxs-book-open:before{content:\"\\ece5\"}.bxs-book-reader:before{content:\"\\ece6\"}.bxs-bot:before{content:\"\\ece7\"}.bxs-bowling-ball:before{content:\"\\ece8\"}.bxs-box:before{content:\"\\ece9\"}.bxs-brain:before{content:\"\\ecea\"}.bxs-briefcase:before{content:\"\\eceb\"}.bxs-briefcase-alt:before{content:\"\\ecec\"}.bxs-briefcase-alt-2:before{content:\"\\eced\"}.bxs-brightness:before{content:\"\\ecee\"}.bxs-brightness-half:before{content:\"\\ecef\"}.bxs-brush:before{content:\"\\ecf0\"}.bxs-brush-alt:before{content:\"\\ecf1\"}.bxs-bug:before{content:\"\\ecf2\"}.bxs-bug-alt:before{content:\"\\ecf3\"}.bxs-building:before{content:\"\\ecf4\"}.bxs-building-house:before{content:\"\\ecf5\"}.bxs-buildings:before{content:\"\\ecf6\"}.bxs-bulb:before{content:\"\\ecf7\"}.bxs-bullseye:before{content:\"\\ecf8\"}.bxs-buoy:before{content:\"\\ecf9\"}.bxs-bus:before{content:\"\\ecfa\"}.bxs-business:before{content:\"\\ecfb\"}.bxs-bus-school:before{content:\"\\ecfc\"}.bxs-cabinet:before{content:\"\\ecfd\"}.bxs-cake:before{content:\"\\ecfe\"}.bxs-calculator:before{content:\"\\ecff\"}.bxs-calendar:before{content:\"\\ed00\"}.bxs-calendar-alt:before{content:\"\\ed01\"}.bxs-calendar-check:before{content:\"\\ed02\"}.bxs-calendar-edit:before{content:\"\\ed03\"}.bxs-calendar-event:before{content:\"\\ed04\"}.bxs-calendar-exclamation:before{content:\"\\ed05\"}.bxs-calendar-heart:before{content:\"\\ed06\"}.bxs-calendar-minus:before{content:\"\\ed07\"}.bxs-calendar-plus:before{content:\"\\ed08\"}.bxs-calendar-star:before{content:\"\\ed09\"}.bxs-calendar-week:before{content:\"\\ed0a\"}.bxs-calendar-x:before{content:\"\\ed0b\"}.bxs-camera:before{content:\"\\ed0c\"}.bxs-camera-home:before{content:\"\\ed0d\"}.bxs-camera-movie:before{content:\"\\ed0e\"}.bxs-camera-off:before{content:\"\\ed0f\"}.bxs-camera-plus:before{content:\"\\ed10\"}.bxs-capsule:before{content:\"\\ed11\"}.bxs-captions:before{content:\"\\ed12\"}.bxs-car:before{content:\"\\ed13\"}.bxs-car-battery:before{content:\"\\ed14\"}.bxs-car-crash:before{content:\"\\ed15\"}.bxs-card:before{content:\"\\ed16\"}.bxs-caret-down-circle:before{content:\"\\ed17\"}.bxs-caret-down-square:before{content:\"\\ed18\"}.bxs-caret-left-circle:before{content:\"\\ed19\"}.bxs-caret-left-square:before{content:\"\\ed1a\"}.bxs-caret-right-circle:before{content:\"\\ed1b\"}.bxs-caret-right-square:before{content:\"\\ed1c\"}.bxs-caret-up-circle:before{content:\"\\ed1d\"}.bxs-caret-up-square:before{content:\"\\ed1e\"}.bxs-car-garage:before{content:\"\\ed1f\"}.bxs-car-mechanic:before{content:\"\\ed20\"}.bxs-carousel:before{content:\"\\ed21\"}.bxs-cart:before{content:\"\\ed22\"}.bxs-cart-add:before{content:\"\\ed23\"}.bxs-cart-alt:before{content:\"\\ed24\"}.bxs-cart-download:before{content:\"\\ed25\"}.bxs-car-wash:before{content:\"\\ed26\"}.bxs-category:before{content:\"\\ed27\"}.bxs-category-alt:before{content:\"\\ed28\"}.bxs-cctv:before{content:\"\\ed29\"}.bxs-certification:before{content:\"\\ed2a\"}.bxs-chalkboard:before{content:\"\\ed2b\"}.bxs-chart:before{content:\"\\ed2c\"}.bxs-chat:before{content:\"\\ed2d\"}.bxs-checkbox:before{content:\"\\ed2e\"}.bxs-checkbox-checked:before{content:\"\\ed2f\"}.bxs-checkbox-minus:before{content:\"\\ed30\"}.bxs-check-circle:before{content:\"\\ed31\"}.bxs-check-shield:before{content:\"\\ed32\"}.bxs-check-square:before{content:\"\\ed33\"}.bxs-chess:before{content:\"\\ed34\"}.bxs-chevron-down:before{content:\"\\ed35\"}.bxs-chevron-down-circle:before{content:\"\\ed36\"}.bxs-chevron-down-square:before{content:\"\\ed37\"}.bxs-chevron-left:before{content:\"\\ed38\"}.bxs-chevron-left-circle:before{content:\"\\ed39\"}.bxs-chevron-left-square:before{content:\"\\ed3a\"}.bxs-chevron-right:before{content:\"\\ed3b\"}.bxs-chevron-right-circle:before{content:\"\\ed3c\"}.bxs-chevron-right-square:before{content:\"\\ed3d\"}.bxs-chevrons-down:before{content:\"\\ed3e\"}.bxs-chevrons-left:before{content:\"\\ed3f\"}.bxs-chevrons-right:before{content:\"\\ed40\"}.bxs-chevrons-up:before{content:\"\\ed41\"}.bxs-chevron-up:before{content:\"\\ed42\"}.bxs-chevron-up-circle:before{content:\"\\ed43\"}.bxs-chevron-up-square:before{content:\"\\ed44\"}.bxs-chip:before{content:\"\\ed45\"}.bxs-church:before{content:\"\\ed46\"}.bxs-circle:before{content:\"\\ed47\"}.bxs-city:before{content:\"\\ed48\"}.bxs-clinic:before{content:\"\\ed49\"}.bxs-cloud:before{content:\"\\ed4a\"}.bxs-cloud-download:before{content:\"\\ed4b\"}.bxs-cloud-lightning:before{content:\"\\ed4c\"}.bxs-cloud-rain:before{content:\"\\ed4d\"}.bxs-cloud-upload:before{content:\"\\ed4e\"}.bxs-coffee:before{content:\"\\ed4f\"}.bxs-coffee-alt:before{content:\"\\ed50\"}.bxs-coffee-togo:before{content:\"\\ed51\"}.bxs-cog:before{content:\"\\ed52\"}.bxs-coin:before{content:\"\\ed53\"}.bxs-coin-stack:before{content:\"\\ed54\"}.bxs-collection:before{content:\"\\ed55\"}.bxs-color-fill:before{content:\"\\ed56\"}.bxs-comment:before{content:\"\\ed57\"}.bxs-comment-add:before{content:\"\\ed58\"}.bxs-comment-check:before{content:\"\\ed59\"}.bxs-comment-detail:before{content:\"\\ed5a\"}.bxs-comment-dots:before{content:\"\\ed5b\"}.bxs-comment-edit:before{content:\"\\ed5c\"}.bxs-comment-error:before{content:\"\\ed5d\"}.bxs-comment-minus:before{content:\"\\ed5e\"}.bxs-comment-x:before{content:\"\\ed5f\"}.bxs-compass:before{content:\"\\ed60\"}.bxs-component:before{content:\"\\ed61\"}.bxs-confused:before{content:\"\\ed62\"}.bxs-contact:before{content:\"\\ed63\"}.bxs-conversation:before{content:\"\\ed64\"}.bxs-cookie:before{content:\"\\ed65\"}.bxs-cool:before{content:\"\\ed66\"}.bxs-copy:before{content:\"\\ed67\"}.bxs-copy-alt:before{content:\"\\ed68\"}.bxs-copyright:before{content:\"\\ed69\"}.bxs-coupon:before{content:\"\\ed6a\"}.bxs-credit-card:before{content:\"\\ed6b\"}.bxs-credit-card-alt:before{content:\"\\ed6c\"}.bxs-credit-card-front:before{content:\"\\ed6d\"}.bxs-crop:before{content:\"\\ed6e\"}.bxs-crown:before{content:\"\\ed6f\"}.bxs-cube:before{content:\"\\ed70\"}.bxs-cube-alt:before{content:\"\\ed71\"}.bxs-cuboid:before{content:\"\\ed72\"}.bxs-customize:before{content:\"\\ed73\"}.bxs-cylinder:before{content:\"\\ed74\"}.bxs-dashboard:before{content:\"\\ed75\"}.bxs-data:before{content:\"\\ed76\"}.bxs-detail:before{content:\"\\ed77\"}.bxs-devices:before{content:\"\\ed78\"}.bxs-diamond:before{content:\"\\ed79\"}.bxs-dice-1:before{content:\"\\ed7a\"}.bxs-dice-2:before{content:\"\\ed7b\"}.bxs-dice-3:before{content:\"\\ed7c\"}.bxs-dice-4:before{content:\"\\ed7d\"}.bxs-dice-5:before{content:\"\\ed7e\"}.bxs-dice-6:before{content:\"\\ed7f\"}.bxs-direction-left:before{content:\"\\ed80\"}.bxs-direction-right:before{content:\"\\ed81\"}.bxs-directions:before{content:\"\\ed82\"}.bxs-disc:before{content:\"\\ed83\"}.bxs-discount:before{content:\"\\ed84\"}.bxs-dish:before{content:\"\\ed85\"}.bxs-dislike:before{content:\"\\ed86\"}.bxs-dizzy:before{content:\"\\ed87\"}.bxs-dock-bottom:before{content:\"\\ed88\"}.bxs-dock-left:before{content:\"\\ed89\"}.bxs-dock-right:before{content:\"\\ed8a\"}.bxs-dock-top:before{content:\"\\ed8b\"}.bxs-dollar-circle:before{content:\"\\ed8c\"}.bxs-donate-blood:before{content:\"\\ed8d\"}.bxs-donate-heart:before{content:\"\\ed8e\"}.bxs-door-open:before{content:\"\\ed8f\"}.bxs-doughnut-chart:before{content:\"\\ed90\"}.bxs-down-arrow:before{content:\"\\ed91\"}.bxs-down-arrow-alt:before{content:\"\\ed92\"}.bxs-down-arrow-circle:before{content:\"\\ed93\"}.bxs-down-arrow-square:before{content:\"\\ed94\"}.bxs-download:before{content:\"\\ed95\"}.bxs-downvote:before{content:\"\\ed96\"}.bxs-drink:before{content:\"\\ed97\"}.bxs-droplet-half:before{content:\"\\ed98\"}.bxs-dryer:before{content:\"\\ed99\"}.bxs-duplicate:before{content:\"\\ed9a\"}.bxs-edit:before{content:\"\\ed9b\"}.bxs-edit-alt:before{content:\"\\ed9c\"}.bxs-edit-location:before{content:\"\\ed9d\"}.bxs-eject:before{content:\"\\ed9e\"}.bxs-envelope:before{content:\"\\ed9f\"}.bxs-envelope-open:before{content:\"\\eda0\"}.bxs-eraser:before{content:\"\\eda1\"}.bxs-error:before{content:\"\\eda2\"}.bxs-error-alt:before{content:\"\\eda3\"}.bxs-error-circle:before{content:\"\\eda4\"}.bxs-ev-station:before{content:\"\\eda5\"}.bxs-exit:before{content:\"\\eda6\"}.bxs-extension:before{content:\"\\eda7\"}.bxs-eyedropper:before{content:\"\\eda8\"}.bxs-face:before{content:\"\\eda9\"}.bxs-face-mask:before{content:\"\\edaa\"}.bxs-factory:before{content:\"\\edab\"}.bxs-fast-forward-circle:before{content:\"\\edac\"}.bxs-file:before{content:\"\\edad\"}.bxs-file-archive:before{content:\"\\edae\"}.bxs-file-blank:before{content:\"\\edaf\"}.bxs-file-css:before{content:\"\\edb0\"}.bxs-file-doc:before{content:\"\\edb1\"}.bxs-file-export:before{content:\"\\edb2\"}.bxs-file-find:before{content:\"\\edb3\"}.bxs-file-gif:before{content:\"\\edb4\"}.bxs-file-html:before{content:\"\\edb5\"}.bxs-file-image:before{content:\"\\edb6\"}.bxs-file-import:before{content:\"\\edb7\"}.bxs-file-jpg:before{content:\"\\edb8\"}.bxs-file-js:before{content:\"\\edb9\"}.bxs-file-json:before{content:\"\\edba\"}.bxs-file-md:before{content:\"\\edbb\"}.bxs-file-pdf:before{content:\"\\edbc\"}.bxs-file-plus:before{content:\"\\edbd\"}.bxs-file-png:before{content:\"\\edbe\"}.bxs-file-txt:before{content:\"\\edbf\"}.bxs-film:before{content:\"\\edc0\"}.bxs-filter-alt:before{content:\"\\edc1\"}.bxs-first-aid:before{content:\"\\edc2\"}.bxs-flag:before{content:\"\\edc3\"}.bxs-flag-alt:before{content:\"\\edc4\"}.bxs-flag-checkered:before{content:\"\\edc5\"}.bxs-flame:before{content:\"\\edc6\"}.bxs-flask:before{content:\"\\edc7\"}.bxs-florist:before{content:\"\\edc8\"}.bxs-folder:before{content:\"\\edc9\"}.bxs-folder-minus:before{content:\"\\edca\"}.bxs-folder-open:before{content:\"\\edcb\"}.bxs-folder-plus:before{content:\"\\edcc\"}.bxs-food-menu:before{content:\"\\edcd\"}.bxs-fridge:before{content:\"\\edce\"}.bxs-game:before{content:\"\\edcf\"}.bxs-gas-pump:before{content:\"\\edd0\"}.bxs-ghost:before{content:\"\\edd1\"}.bxs-gift:before{content:\"\\edd2\"}.bxs-graduation:before{content:\"\\edd3\"}.bxs-grid:before{content:\"\\edd4\"}.bxs-grid-alt:before{content:\"\\edd5\"}.bxs-group:before{content:\"\\edd6\"}.bxs-guitar-amp:before{content:\"\\edd7\"}.bxs-hand:before{content:\"\\edd8\"}.bxs-hand-down:before{content:\"\\edd9\"}.bxs-hand-left:before{content:\"\\edda\"}.bxs-hand-right:before{content:\"\\eddb\"}.bxs-hand-up:before{content:\"\\eddc\"}.bxs-happy:before{content:\"\\eddd\"}.bxs-happy-alt:before{content:\"\\edde\"}.bxs-happy-beaming:before{content:\"\\eddf\"}.bxs-happy-heart-eyes:before{content:\"\\ede0\"}.bxs-hdd:before{content:\"\\ede1\"}.bxs-heart:before{content:\"\\ede2\"}.bxs-heart-circle:before{content:\"\\ede3\"}.bxs-heart-square:before{content:\"\\ede4\"}.bxs-help-circle:before{content:\"\\ede5\"}.bxs-hide:before{content:\"\\ede6\"}.bxs-home:before{content:\"\\ede7\"}.bxs-home-circle:before{content:\"\\ede8\"}.bxs-home-heart:before{content:\"\\ede9\"}.bxs-home-smile:before{content:\"\\edea\"}.bxs-hotel:before{content:\"\\edeb\"}.bxs-hourglass:before{content:\"\\edec\"}.bxs-hourglass-bottom:before{content:\"\\eded\"}.bxs-hourglass-top:before{content:\"\\edee\"}.bxs-id-card:before{content:\"\\edef\"}.bxs-image:before{content:\"\\edf0\"}.bxs-image-add:before{content:\"\\edf1\"}.bxs-image-alt:before{content:\"\\edf2\"}.bxs-inbox:before{content:\"\\edf3\"}.bxs-info-circle:before{content:\"\\edf4\"}.bxs-info-square:before{content:\"\\edf5\"}.bxs-institution:before{content:\"\\edf6\"}.bxs-joystick:before{content:\"\\edf7\"}.bxs-joystick-alt:before{content:\"\\edf8\"}.bxs-joystick-button:before{content:\"\\edf9\"}.bxs-key:before{content:\"\\edfa\"}.bxs-keyboard:before{content:\"\\edfb\"}.bxs-label:before{content:\"\\edfc\"}.bxs-landmark:before{content:\"\\edfd\"}.bxs-landscape:before{content:\"\\edfe\"}.bxs-laugh:before{content:\"\\edff\"}.bxs-layer:before{content:\"\\ee00\"}.bxs-layer-minus:before{content:\"\\ee01\"}.bxs-layer-plus:before{content:\"\\ee02\"}.bxs-layout:before{content:\"\\ee03\"}.bxs-left-arrow:before{content:\"\\ee04\"}.bxs-left-arrow-alt:before{content:\"\\ee05\"}.bxs-left-arrow-circle:before{content:\"\\ee06\"}.bxs-left-arrow-square:before{content:\"\\ee07\"}.bxs-left-down-arrow-circle:before{content:\"\\ee08\"}.bxs-left-top-arrow-circle:before{content:\"\\ee09\"}.bxs-like:before{content:\"\\ee0a\"}.bxs-location-plus:before{content:\"\\ee0b\"}.bxs-lock:before{content:\"\\ee0c\"}.bxs-lock-alt:before{content:\"\\ee0d\"}.bxs-lock-open:before{content:\"\\ee0e\"}.bxs-lock-open-alt:before{content:\"\\ee0f\"}.bxs-log-in:before{content:\"\\ee10\"}.bxs-log-in-circle:before{content:\"\\ee11\"}.bxs-log-out:before{content:\"\\ee12\"}.bxs-log-out-circle:before{content:\"\\ee13\"}.bxs-low-vision:before{content:\"\\ee14\"}.bxs-magic-wand:before{content:\"\\ee15\"}.bxs-magnet:before{content:\"\\ee16\"}.bxs-map:before{content:\"\\ee17\"}.bxs-map-alt:before{content:\"\\ee18\"}.bxs-map-pin:before{content:\"\\ee19\"}.bxs-mask:before{content:\"\\ee1a\"}.bxs-medal:before{content:\"\\ee1b\"}.bxs-megaphone:before{content:\"\\ee1c\"}.bxs-meh:before{content:\"\\ee1d\"}.bxs-meh-alt:before{content:\"\\ee1e\"}.bxs-meh-blank:before{content:\"\\ee1f\"}.bxs-memory-card:before{content:\"\\ee20\"}.bxs-message:before{content:\"\\ee21\"}.bxs-message-add:before{content:\"\\ee22\"}.bxs-message-alt:before{content:\"\\ee23\"}.bxs-message-alt-add:before{content:\"\\ee24\"}.bxs-message-alt-check:before{content:\"\\ee25\"}.bxs-message-alt-detail:before{content:\"\\ee26\"}.bxs-message-alt-dots:before{content:\"\\ee27\"}.bxs-message-alt-edit:before{content:\"\\ee28\"}.bxs-message-alt-error:before{content:\"\\ee29\"}.bxs-message-alt-minus:before{content:\"\\ee2a\"}.bxs-message-alt-x:before{content:\"\\ee2b\"}.bxs-message-check:before{content:\"\\ee2c\"}.bxs-message-detail:before{content:\"\\ee2d\"}.bxs-message-dots:before{content:\"\\ee2e\"}.bxs-message-edit:before{content:\"\\ee2f\"}.bxs-message-error:before{content:\"\\ee30\"}.bxs-message-minus:before{content:\"\\ee31\"}.bxs-message-rounded:before{content:\"\\ee32\"}.bxs-message-rounded-add:before{content:\"\\ee33\"}.bxs-message-rounded-check:before{content:\"\\ee34\"}.bxs-message-rounded-detail:before{content:\"\\ee35\"}.bxs-message-rounded-dots:before{content:\"\\ee36\"}.bxs-message-rounded-edit:before{content:\"\\ee37\"}.bxs-message-rounded-error:before{content:\"\\ee38\"}.bxs-message-rounded-minus:before{content:\"\\ee39\"}.bxs-message-rounded-x:before{content:\"\\ee3a\"}.bxs-message-square:before{content:\"\\ee3b\"}.bxs-message-square-add:before{content:\"\\ee3c\"}.bxs-message-square-check:before{content:\"\\ee3d\"}.bxs-message-square-detail:before{content:\"\\ee3e\"}.bxs-message-square-dots:before{content:\"\\ee3f\"}.bxs-message-square-edit:before{content:\"\\ee40\"}.bxs-message-square-error:before{content:\"\\ee41\"}.bxs-message-square-minus:before{content:\"\\ee42\"}.bxs-message-square-x:before{content:\"\\ee43\"}.bxs-message-x:before{content:\"\\ee44\"}.bxs-meteor:before{content:\"\\ee45\"}.bxs-microchip:before{content:\"\\ee46\"}.bxs-microphone:before{content:\"\\ee47\"}.bxs-microphone-alt:before{content:\"\\ee48\"}.bxs-microphone-off:before{content:\"\\ee49\"}.bxs-minus-circle:before{content:\"\\ee4a\"}.bxs-minus-square:before{content:\"\\ee4b\"}.bxs-mobile:before{content:\"\\ee4c\"}.bxs-mobile-vibration:before{content:\"\\ee4d\"}.bxs-moon:before{content:\"\\ee4e\"}.bxs-mouse:before{content:\"\\ee4f\"}.bxs-mouse-alt:before{content:\"\\ee50\"}.bxs-movie:before{content:\"\\ee51\"}.bxs-movie-play:before{content:\"\\ee52\"}.bxs-music:before{content:\"\\ee53\"}.bxs-navigation:before{content:\"\\ee54\"}.bxs-network-chart:before{content:\"\\ee55\"}.bxs-news:before{content:\"\\ee56\"}.bxs-no-entry:before{content:\"\\ee57\"}.bxs-note:before{content:\"\\ee58\"}.bxs-notepad:before{content:\"\\ee59\"}.bxs-notification:before{content:\"\\ee5a\"}.bxs-notification-off:before{content:\"\\ee5b\"}.bxs-offer:before{content:\"\\ee5c\"}.bxs-package:before{content:\"\\ee5d\"}.bxs-paint:before{content:\"\\ee5e\"}.bxs-paint-roll:before{content:\"\\ee5f\"}.bxs-palette:before{content:\"\\ee60\"}.bxs-paper-plane:before{content:\"\\ee61\"}.bxs-parking:before{content:\"\\ee62\"}.bxs-paste:before{content:\"\\ee63\"}.bxs-pen:before{content:\"\\ee64\"}.bxs-pencil:before{content:\"\\ee65\"}.bxs-phone:before{content:\"\\ee66\"}.bxs-phone-call:before{content:\"\\ee67\"}.bxs-phone-incoming:before{content:\"\\ee68\"}.bxs-phone-off:before{content:\"\\ee69\"}.bxs-phone-outgoing:before{content:\"\\ee6a\"}.bxs-photo-album:before{content:\"\\ee6b\"}.bxs-piano:before{content:\"\\ee6c\"}.bxs-pie-chart:before{content:\"\\ee6d\"}.bxs-pie-chart-alt:before{content:\"\\ee6e\"}.bxs-pie-chart-alt-2:before{content:\"\\ee6f\"}.bxs-pin:before{content:\"\\ee70\"}.bxs-pizza:before{content:\"\\ee71\"}.bxs-plane:before{content:\"\\ee72\"}.bxs-plane-alt:before{content:\"\\ee73\"}.bxs-plane-land:before{content:\"\\ee74\"}.bxs-planet:before{content:\"\\ee75\"}.bxs-plane-take-off:before{content:\"\\ee76\"}.bxs-playlist:before{content:\"\\ee77\"}.bxs-plug:before{content:\"\\ee78\"}.bxs-plus-circle:before{content:\"\\ee79\"}.bxs-plus-square:before{content:\"\\ee7a\"}.bxs-pointer:before{content:\"\\ee7b\"}.bxs-polygon:before{content:\"\\ee7c\"}.bxs-printer:before{content:\"\\ee7d\"}.bxs-purchase-tag:before{content:\"\\ee7e\"}.bxs-purchase-tag-alt:before{content:\"\\ee7f\"}.bxs-pyramid:before{content:\"\\ee80\"}.bxs-quote-alt-left:before{content:\"\\ee81\"}.bxs-quote-alt-right:before{content:\"\\ee82\"}.bxs-quote-left:before{content:\"\\ee83\"}.bxs-quote-right:before{content:\"\\ee84\"}.bxs-quote-single-left:before{content:\"\\ee85\"}.bxs-quote-single-right:before{content:\"\\ee86\"}.bxs-radiation:before{content:\"\\ee87\"}.bxs-radio:before{content:\"\\ee88\"}.bxs-receipt:before{content:\"\\ee89\"}.bxs-rectangle:before{content:\"\\ee8a\"}.bxs-registered:before{content:\"\\ee8b\"}.bxs-rename:before{content:\"\\ee8c\"}.bxs-report:before{content:\"\\ee8d\"}.bxs-rewind-circle:before{content:\"\\ee8e\"}.bxs-right-arrow:before{content:\"\\ee8f\"}.bxs-right-arrow-alt:before{content:\"\\ee90\"}.bxs-right-arrow-circle:before{content:\"\\ee91\"}.bxs-right-arrow-square:before{content:\"\\ee92\"}.bxs-right-down-arrow-circle:before{content:\"\\ee93\"}.bxs-right-top-arrow-circle:before{content:\"\\ee94\"}.bxs-rocket:before{content:\"\\ee95\"}.bxs-ruler:before{content:\"\\ee96\"}.bxs-sad:before{content:\"\\ee97\"}.bxs-save:before{content:\"\\ee98\"}.bxs-school:before{content:\"\\ee99\"}.bxs-search:before{content:\"\\ee9a\"}.bxs-search-alt-2:before{content:\"\\ee9b\"}.bxs-select-multiple:before{content:\"\\ee9c\"}.bxs-send:before{content:\"\\ee9d\"}.bxs-server:before{content:\"\\ee9e\"}.bxs-shapes:before{content:\"\\ee9f\"}.bxs-share:before{content:\"\\eea0\"}.bxs-share-alt:before{content:\"\\eea1\"}.bxs-shield:before{content:\"\\eea2\"}.bxs-shield-alt-2:before{content:\"\\eea3\"}.bxs-shield-x:before{content:\"\\eea4\"}.bxs-ship:before{content:\"\\eea5\"}.bxs-shocked:before{content:\"\\eea6\"}.bxs-shopping-bag:before{content:\"\\eea7\"}.bxs-shopping-bag-alt:before{content:\"\\eea8\"}.bxs-shopping-bags:before{content:\"\\eea9\"}.bxs-show:before{content:\"\\eeaa\"}.bxs-skip-next-circle:before{content:\"\\eeab\"}.bxs-skip-previous-circle:before{content:\"\\eeac\"}.bxs-skull:before{content:\"\\eead\"}.bxs-sleepy:before{content:\"\\eeae\"}.bxs-slideshow:before{content:\"\\eeaf\"}.bxs-smile:before{content:\"\\eeb0\"}.bxs-sort-alt:before{content:\"\\eeb1\"}.bxs-spa:before{content:\"\\eeb2\"}.bxs-speaker:before{content:\"\\eeb3\"}.bxs-spray-can:before{content:\"\\eeb4\"}.bxs-spreadsheet:before{content:\"\\eeb5\"}.bxs-square:before{content:\"\\eeb6\"}.bxs-square-rounded:before{content:\"\\eeb7\"}.bxs-star:before{content:\"\\eeb8\"}.bxs-star-half:before{content:\"\\eeb9\"}.bxs-sticker:before{content:\"\\eeba\"}.bxs-stopwatch:before{content:\"\\eebb\"}.bxs-store:before{content:\"\\eebc\"}.bxs-store-alt:before{content:\"\\eebd\"}.bxs-sun:before{content:\"\\eebe\"}.bxs-tachometer:before{content:\"\\eebf\"}.bxs-tag:before{content:\"\\eec0\"}.bxs-tag-alt:before{content:\"\\eec1\"}.bxs-tag-x:before{content:\"\\eec2\"}.bxs-taxi:before{content:\"\\eec3\"}.bxs-tennis-ball:before{content:\"\\eec4\"}.bxs-terminal:before{content:\"\\eec5\"}.bxs-thermometer:before{content:\"\\eec6\"}.bxs-time:before{content:\"\\eec7\"}.bxs-time-five:before{content:\"\\eec8\"}.bxs-timer:before{content:\"\\eec9\"}.bxs-tired:before{content:\"\\eeca\"}.bxs-toggle-left:before{content:\"\\eecb\"}.bxs-toggle-right:before{content:\"\\eecc\"}.bxs-tone:before{content:\"\\eecd\"}.bxs-torch:before{content:\"\\eece\"}.bxs-to-top:before{content:\"\\eecf\"}.bxs-traffic:before{content:\"\\eed0\"}.bxs-traffic-barrier:before{content:\"\\eed1\"}.bxs-traffic-cone:before{content:\"\\eed2\"}.bxs-train:before{content:\"\\eed3\"}.bxs-trash:before{content:\"\\eed4\"}.bxs-trash-alt:before{content:\"\\eed5\"}.bxs-tree:before{content:\"\\eed6\"}.bxs-trophy:before{content:\"\\eed7\"}.bxs-truck:before{content:\"\\eed8\"}.bxs-t-shirt:before{content:\"\\eed9\"}.bxs-tv:before{content:\"\\eeda\"}.bxs-up-arrow:before{content:\"\\eedb\"}.bxs-up-arrow-alt:before{content:\"\\eedc\"}.bxs-up-arrow-circle:before{content:\"\\eedd\"}.bxs-up-arrow-square:before{content:\"\\eede\"}.bxs-upside-down:before{content:\"\\eedf\"}.bxs-upvote:before{content:\"\\eee0\"}.bxs-user:before{content:\"\\eee1\"}.bxs-user-account:before{content:\"\\eee2\"}.bxs-user-badge:before{content:\"\\eee3\"}.bxs-user-check:before{content:\"\\eee4\"}.bxs-user-circle:before{content:\"\\eee5\"}.bxs-user-detail:before{content:\"\\eee6\"}.bxs-user-minus:before{content:\"\\eee7\"}.bxs-user-pin:before{content:\"\\eee8\"}.bxs-user-plus:before{content:\"\\eee9\"}.bxs-user-rectangle:before{content:\"\\eeea\"}.bxs-user-voice:before{content:\"\\eeeb\"}.bxs-user-x:before{content:\"\\eeec\"}.bxs-vector:before{content:\"\\eeed\"}.bxs-vial:before{content:\"\\eeee\"}.bxs-video:before{content:\"\\eeef\"}.bxs-video-off:before{content:\"\\eef0\"}.bxs-video-plus:before{content:\"\\eef1\"}.bxs-video-recording:before{content:\"\\eef2\"}.bxs-videos:before{content:\"\\eef3\"}.bxs-virus:before{content:\"\\eef4\"}.bxs-virus-block:before{content:\"\\eef5\"}.bxs-volume:before{content:\"\\eef6\"}.bxs-volume-full:before{content:\"\\eef7\"}.bxs-volume-low:before{content:\"\\eef8\"}.bxs-volume-mute:before{content:\"\\eef9\"}.bxs-wallet:before{content:\"\\eefa\"}.bxs-wallet-alt:before{content:\"\\eefb\"}.bxs-washer:before{content:\"\\eefc\"}.bxs-watch:before{content:\"\\eefd\"}.bxs-watch-alt:before{content:\"\\eefe\"}.bxs-webcam:before{content:\"\\eeff\"}.bxs-widget:before{content:\"\\ef00\"}.bxs-window-alt:before{content:\"\\ef01\"}.bxs-wine:before{content:\"\\ef02\"}.bxs-wink-smile:before{content:\"\\ef03\"}.bxs-wink-tongue:before{content:\"\\ef04\"}.bxs-wrench:before{content:\"\\ef05\"}.bxs-x-circle:before{content:\"\\ef06\"}.bxs-x-square:before{content:\"\\ef07\"}.bxs-yin-yang:before{content:\"\\ef08\"}.bxs-zap:before{content:\"\\ef09\"}.bxs-zoom-in:before{content:\"\\ef0a\"}.bxs-zoom-out:before{content:\"\\ef0b\"}"},{"title":"","date":"2025-08-28T08:11:15.488Z","updated":"2025-08-28T08:11:15.488Z","comments":true,"path":"css/style.css","permalink":"https://leeway2zc.top/css/style.css","excerpt":"","text":"@charset \"utf-8\"; :root { --font-color-0: #e00000; --font-color-1: #252525; --font-color-2: #333; --font-color-3: #aaa; --bg-color-1: #eee; --line-1: #eee; --line-2: #ddd; } p { word-wrap: break-word; white-space: pre-wrap; } body { font-family: \"Montserrat\", \"SF UI Text\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", sans-serif; font-size: 16px; line-height: 1.75; letter-spacing: 0.6px; color: var(--font-color-2); /* background: #111; */ } a { text-decoration: none; color: var(--font-color-3); } .paper { /* padding: 4vw; */ } .paper-main { width: 100%; /* max-width: 880px; */ max-width: 1100px; margin: 0 auto; padding: 72px 8vw 24px; background: #fff; border-radius: 24px; background: #fff; } .header { padding-bottom: 48px; margin-bottom: 48px; border-bottom: 1px solid var(--line-1); display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; align-content: center; } .logo { font-size: 2rem; font-weight: 600; color: var(--font-color-1); margin-bottom: 23px; flex: 0 0 100%; } .nav { margin: 0 0 4px; flex: 0 0 100%; display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; align-content: center; } .nav li { padding: 2px 0; margin-right: 24px; } .nav li:last-of-type { margin-right: 0; } .nav li a { color: var(--font-color-1); opacity: .7; transition: opacity ease-in-out .5s; } .nav li a:hover { opacity: 1; transition: opacity ease-in-out .5s; } .post-header { margin-bottom: 48px; display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; align-content: center; } .post-header .logo { font-size: 2rem; } .post-header .go-home { display: block; padding: 10px 20px 8px; border-radius: 18px; background: #fff; border: 1px solid #eee; margin: 8px 0; transition: background ease-in-out .5s; } .post-header .go-home:hover { background: var(--bg-color-1); transition: background ease-in-out .5s; } .post-header .go-home svg { transform: translateX(0); transition: transform ease-in-out .5s; } .post-header .go-home:hover svg { transform: translateX(-4px); transition: transform ease-in-out .5s; } .post-list { display: flex; flex-direction: column; flex-wrap: wrap; justify-content: flex-start; align-items: stretch; } .post { width: 100%; padding-bottom: 48px; margin-bottom: 48px; border-bottom: 1px dashed var(--line-2); } .post-title { display: inline-block; font-size: 1.6rem; font-weight: 600; line-height: 1.5; margin-bottom: 12px; color: var(--font-color-1); /*transition: color ease-in-out .5s;*/ } .post-title:hover { color: var(--font-color-0); transition: color ease-in-out .5s; } .post-except { word-break: break-all; margin-bottom: 12px; } .read-more { padding: 0 4px; color: var(--font-color-0); } .read-more:before, .read-more:after { display: inline-block; transition: transform ease-in-out .5s; } .read-more:before { content: \"{ \"; } .read-more:after { content: \" }\"; } .read-more:hover:before { transform: translateX(-4px); transition: transform ease-in-out .25s; } .read-more:hover:after { transform: translateX(4px); transition: transform ease-in-out .25s; } .post-date { font-size: 0.875rem; color: var(--font-color-3); } .paginator { font-size: 0.875rem; width: 100%; margin: 0 auto 24px; display: flex; flex-direction: row; flex-wrap: wrap; justify-content: center; align-items: center; } .paginator * { display: block; padding: 8px 16px; border-radius: 18px; background: #fff; border: 1px solid #eee; } .paginator .space { display: block; padding: 8px 16px; border-radius: 18px; background: #fff; border: none; } .paginator a { margin: 4px; color: var(--font-color-2); transition: color ease-in-out .5s; } .paginator a:hover { color: var(--font-color-0); transition: color ease-in-out .5s; } .paginator .current { color: var(--font-color-0); border: 1px solid var(--font-color-0); } .footer { padding: 24px 0; font-size: 0.875rem; color: var(--font-color-3); display: flex; flex-direction: column; flex-wrap: nowrap; justify-content: flex-start; align-content: center; } .footer span { text-align: center; margin-bottom: 8px; } .footer a { color: var(--font-color-3); transition: color ease-in-out .5s; } .footer a:hover { color: var(--font-color-0); transition: color ease-in-out .5s; } .post-main { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; align-items: center; margin-bottom: 24px; } .post-main-title { flex: 0 0 100%; margin-bottom: 12px; font-size: 1.6rem; font-weight: 600; line-height: 1.5; color: var(--font-color-1); } .post-meta { font-size: 0.875rem; color: var(--font-color-3); flex: 0 0 100%; margin-bottom: 15px; } .archive { display: flex; flex-direction: column; flex-wrap: wrap; justify-content: space-between; align-content: normal; } .archive li { display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: flex-start; align-content: center; padding: 12px 0; } .archive li:nth-child(odd) { background: #fafafa; } .archive li:nth-child(even) { background: #fff; } .archive li span { width: 108px; color: var(--font-color-2); } .archive-main { flex: 0 1 calc( 100% - 108px ); } .archive-title { color: var(--font-color-1); /*transition: color ease-in-out .5s;*/ } .archive-title:hover { color: var(--font-color-0); transition: color ease-in-out .5s; } /* 文章分类 */ .tags { margin-bottom: 32px; } .tags a { display: inline-block; box-sizing: border-box; padding: 0 1em; height: 28px; line-height: 28px; border-radius: 28px; background-color:#000; color: #fff; text-decoration: none } .tags a+a { margin-left: .2em } .tags .new { --color: #3778FF; color: #fff } .tags .update { --color: #E016C4; color: #fff } .tags .fix,.tags .bugfix { --color: #FF4772; color: #fff }"},{"title":"","date":"2025-08-28T08:11:15.491Z","updated":"2025-08-28T08:11:15.491Z","comments":true,"path":"js/highlightjs-line-numbers.js","permalink":"https://leeway2zc.top/js/highlightjs-line-numbers.js","excerpt":"","text":"(function(w,d){'use strict';var TABLE_NAME='hljs-ln',LINE_NAME='hljs-ln-line',CODE_BLOCK_NAME='hljs-ln-code',NUMBERS_BLOCK_NAME='hljs-ln-numbers',NUMBER_LINE_NAME='hljs-ln-n',DATA_ATTR_NAME='data-line-number',BREAK_LINE_REGEXP=/\\r\\n|\\r|\\n/g;if(w.hljs){w.hljs.initLineNumbersOnLoad=initLineNumbersOnLoad;w.hljs.lineNumbersBlock=lineNumbersBlock;w.hljs.lineNumbersValue=lineNumbersValue;addStyles();}else{w.console.error('highlight.js not detected!');} function isHljsLnCodeDescendant(domElt){var curElt=domElt;while(curElt){if(curElt.className&&curElt.className.indexOf('hljs-ln-code')!==-1){return true;} curElt=curElt.parentNode;} return false;} function getHljsLnTable(hljsLnDomElt){var curElt=hljsLnDomElt;while(curElt.nodeName!=='TABLE'){curElt=curElt.parentNode;} return curElt;} function edgeGetSelectedCodeLines(selection){var selectionText=selection.toString();var tdAnchor=selection.anchorNode;while(tdAnchor.nodeName!=='TD'){tdAnchor=tdAnchor.parentNode;} var tdFocus=selection.focusNode;while(tdFocus.nodeName!=='TD'){tdFocus=tdFocus.parentNode;} var firstLineNumber=parseInt(tdAnchor.dataset.lineNumber);var lastLineNumber=parseInt(tdFocus.dataset.lineNumber);if(firstLineNumber!=lastLineNumber){var firstLineText=tdAnchor.textContent;var lastLineText=tdFocus.textContent;if(firstLineNumber>lastLineNumber){var tmp=firstLineNumber;firstLineNumber=lastLineNumber;lastLineNumber=tmp;tmp=firstLineText;firstLineText=lastLineText;lastLineText=tmp;} while(selectionText.indexOf(firstLineText)!==0){firstLineText=firstLineText.slice(1);} while(selectionText.lastIndexOf(lastLineText)===-1){lastLineText=lastLineText.slice(0,-1);} var selectedText=firstLineText;var hljsLnTable=getHljsLnTable(tdAnchor);for(var i=firstLineNumber+1;i1||options.singleLine){var html='';for(var i=0,l=lines.length;i0?lines[i]:' ']);} return format('{1}',[TABLE_NAME,html]);} return inputHtml;} function mapOptions(element,options){options=options||{};return{singleLine:getSingleLineOption(options),startFrom:getStartFromOption(element,options)};} function getSingleLineOption(options){var defaultValue=false;if(!!options.singleLine){return options.singleLine;} return defaultValue;} function getStartFromOption(element,options){var defaultValue=1;var startFrom=defaultValue;if(isFinite(options.startFrom)){startFrom=options.startFrom;} var value=getAttribute(element,'data-ln-start-from');if(value!==null){startFrom=toNumber(value,defaultValue);} return startFrom;} function duplicateMultilineNodes(element){var nodes=element.childNodes;for(var node in nodes){if(nodes.hasOwnProperty(node)){var child=nodes[node];if(getLinesCount(child.textContent)>0){if(child.childNodes.length>0){duplicateMultilineNodes(child);}else{duplicateMultilineNode(child.parentNode);}}}}} function duplicateMultilineNode(element){var className=element.className;if(!/hljs-/.test(className))return;var lines=getLines(element.innerHTML);for(var i=0,result='';i0?lines[i]:' ';result+=format('{1}\\n',[className,lineText]);} element.innerHTML=result.trim();} function getLines(text){if(text.length===0)return[];return text.split(BREAK_LINE_REGEXP);} function getLinesCount(text){return(text.trim().match(BREAK_LINE_REGEXP)||[]).length;} function async(func){w.setTimeout(func,0);} function format(format,args){return format.replace(/\\{(\\d+)\\}/g,function(m,n){return args[n]!==undefined?args[n]:m;});} function getAttribute(element,attrName){return element.hasAttribute(attrName)?element.getAttribute(attrName):null;} function toNumber(str,fallback){if(!str)return fallback;var number=Number(str);return isFinite(number)?number:fallback;}}(window,document));"},{"title":"","date":"2025-08-28T08:11:15.491Z","updated":"2025-08-28T08:11:15.491Z","comments":true,"path":"js/main.js","permalink":"https://leeway2zc.top/js/main.js","excerpt":"","text":"/*=============== SHOW MENU ===============*/ const navMenu = document.getElementById('nav-menu'), navToggle = document.getElementById('nav-toggle'), navClose = document.getElementById('nav-close') /*===== MENU SHOW =====*/ /* Validate if constant exists */ if(navToggle){ navToggle.addEventListener('click', () =>{ navMenu.classList.add('show-menu') }) } /*===== MENU HIDDEN =====*/ /* Validate if constant exists */ if(navClose){ navClose.addEventListener('click', () =>{ navMenu.classList.remove('show-menu') }) } /*=============== REMOVE MENU MOBILE ===============*/ const navLink = document.querySelectorAll('.nav__link') function linkAction(){ const navMenu = document.getElementById('nav-menu') // When we click on each nav__link, we remove the show-menu class navMenu.classList.remove('show-menu') } navLink.forEach(n => n.addEventListener('click', linkAction)) /*=============== SCROLL REVEAL ANIMATION ===============*/ const sr = ScrollReveal({ distance: '90px', duration: 3000, }) sr.reveal(`.home__data`, {origin: 'top', delay: 400}) sr.reveal(`.home__img`, {origin: 'bottom', delay: 600}) sr.reveal(`.home__footer`, {origin: 'bottom', delay: 800})"},{"title":"","date":"2025-08-28T08:11:15.491Z","updated":"2025-08-28T08:11:15.491Z","comments":true,"path":"js/scrollreveal.min.js","permalink":"https://leeway2zc.top/js/scrollreveal.min.js","excerpt":"","text":"/*! @license ScrollReveal v4.0.9 Copyright 2023 Fisssion LLC. Licensed under the GNU General Public License 3.0 for compatible open source projects and non-commercial use. For commercial sites, themes, projects, and applications, keep your source code private/proprietary by purchasing a commercial license from https://scrollrevealjs.org/ */ var ScrollReveal=function(){\"use strict\";var r={delay:0,distance:\"0\",duration:600,easing:\"cubic-bezier(0.5, 0, 0, 1)\",interval:0,opacity:0,origin:\"bottom\",rotate:{x:0,y:0,z:0},scale:1,cleanup:!1,container:document.documentElement,desktop:!0,mobile:!0,reset:!1,useDelay:\"always\",viewFactor:0,viewOffset:{top:0,right:0,bottom:0,left:0},afterReset:function(){},afterReveal:function(){},beforeReset:function(){},beforeReveal:function(){}};var n={success:function(){document.documentElement.classList.add(\"sr\"),document.body?document.body.style.height=\"100%\":document.addEventListener(\"DOMContentLoaded\",function(){document.body.style.height=\"100%\"})},failure:function(){return document.documentElement.classList.remove(\"sr\"),{clean:function(){},destroy:function(){},reveal:function(){},sync:function(){},get noop(){return!0}}}};function o(e){return\"object\"==typeof window.Node?e instanceof window.Node:null!==e&&\"object\"==typeof e&&\"number\"==typeof e.nodeType&&\"string\"==typeof e.nodeName}function u(e,t){if(void 0===t&&(t=document),e instanceof Array)return e.filter(o);if(o(e))return[e];if(n=e,i=Object.prototype.toString.call(n),\"object\"==typeof window.NodeList?n instanceof window.NodeList:null!==n&&\"object\"==typeof n&&\"number\"==typeof n.length&&/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(i)&&(0===n.length||o(n[0])))return Array.prototype.slice.call(e);var n,i;if(\"string\"==typeof e)try{var r=t.querySelectorAll(e);return Array.prototype.slice.call(r)}catch(e){return[]}return[]}function s(e){return null!==e&&e instanceof Object&&(e.constructor===Object||\"[object Object]\"===Object.prototype.toString.call(e))}function f(n,i){if(s(n))return Object.keys(n).forEach(function(e){return i(n[e],e,n)});if(n instanceof Array)return n.forEach(function(e,t){return i(e,t,n)});throw new TypeError(\"Expected either an array or object literal.\")}function h(e){for(var t=[],n=arguments.length-1;0"},{"title":"","date":"2025-08-28T08:11:15.491Z","updated":"2025-08-28T08:11:15.491Z","comments":true,"path":"js/highlight.min.js","permalink":"https://leeway2zc.top/js/highlight.min.js","excerpt":"","text":"/*! Highlight.js v11.4.0 (git: 2d0e7c1094) (c) 2006-2022 Ivan Sagalaev and other contributors License: BSD-3-Clause */ var hljs=function(){\"use strict\";var e={exports:{}};function n(e){ return e instanceof Map?e.clear=e.delete=e.set=()=>{ throw Error(\"map is read-only\")}:e instanceof Set&&(e.add=e.clear=e.delete=()=>{ throw Error(\"set is read-only\") }),Object.freeze(e),Object.getOwnPropertyNames(e).forEach((t=>{var a=e[t] ;\"object\"!=typeof a||Object.isFrozen(a)||n(a)})),e} e.exports=n,e.exports.default=n;var t=e.exports;class a{constructor(e){ void 0===e.data&&(e.data={}),this.data=e.data,this.isMatchIgnored=!1} ignoreMatch(){this.isMatchIgnored=!0}}function i(e){ return e.replace(/&/g,\"&amp;\").replace(//g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#x27;\") }function r(e,...n){const t=Object.create(null);for(const n in e)t[n]=e[n] ;return n.forEach((e=>{for(const n in e)t[n]=e[n]})),t}const s=e=>!!e.kind ;class o{constructor(e,n){ this.buffer=\"\",this.classPrefix=n.classPrefix,e.walk(this)}addText(e){ this.buffer+=i(e)}openNode(e){if(!s(e))return;let n=e.kind ;n=e.sublanguage?\"language-\"+n:((e,{prefix:n})=>{if(e.includes(\".\")){ const t=e.split(\".\") ;return[`${n}${t.shift()}`,...t.map(((e,n)=>`${e}${\"_\".repeat(n+1)}`))].join(\" \") }return`${n}${e}`})(n,{prefix:this.classPrefix}),this.span(n)}closeNode(e){ s(e)&&(this.buffer+=\"\")}value(){return this.buffer}span(e){ this.buffer+=``}}class l{constructor(){this.rootNode={ children:[]},this.stack=[this.rootNode]}get top(){ return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(e){ this.top.children.push(e)}openNode(e){const n={kind:e,children:[]} ;this.add(n),this.stack.push(n)}closeNode(){ if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){ for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)} walk(e){return this.constructor._walk(e,this.rootNode)}static _walk(e,n){ return\"string\"==typeof n?e.addText(n):n.children&&(e.openNode(n), n.children.forEach((n=>this._walk(e,n))),e.closeNode(n)),e}static _collapse(e){ \"string\"!=typeof e&&e.children&&(e.children.every((e=>\"string\"==typeof e))?e.children=[e.children.join(\"\")]:e.children.forEach((e=>{ l._collapse(e)})))}}class c extends l{constructor(e){super(),this.options=e} addKeyword(e,n){\"\"!==e&&(this.openNode(n),this.addText(e),this.closeNode())} addText(e){\"\"!==e&&this.add(e)}addSublanguage(e,n){const t=e.root ;t.kind=n,t.sublanguage=!0,this.add(t)}toHTML(){ return new o(this,this.options).value()}finalize(){return!0}}function d(e){ return e?\"string\"==typeof e?e:e.source:null}function g(e){return m(\"(?=\",e,\")\")} function u(e){return m(\"(?:\",e,\")*\")}function b(e){return m(\"(?:\",e,\")?\")} function m(...e){return e.map((e=>d(e))).join(\"\")}function p(...e){const n=(e=>{ const n=e[e.length-1] ;return\"object\"==typeof n&&n.constructor===Object?(e.splice(e.length-1,1),n):{} })(e);return\"(\"+(n.capture?\"\":\"?:\")+e.map((e=>d(e))).join(\"|\")+\")\"} function _(e){return RegExp(e.toString()+\"|\").exec(\"\").length-1} const h=/\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./ ;function f(e,{joinWith:n}){let t=0;return e.map((e=>{t+=1;const n=t ;let a=d(e),i=\"\";for(;a.length>0;){const e=h.exec(a);if(!e){i+=a;break} i+=a.substring(0,e.index), a=a.substring(e.index+e[0].length),\"\\\\\"===e[0][0]&&e[1]?i+=\"\\\\\"+(Number(e[1])+n):(i+=e[0], \"(\"===e[0]&&t++)}return i})).map((e=>`(${e})`)).join(n)} const E=\"[a-zA-Z]\\\\w*\",y=\"[a-zA-Z_]\\\\w*\",N=\"\\\\b\\\\d+(\\\\.\\\\d+)?\",w=\"(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)\",v=\"\\\\b(0b[01]+)\",O={ begin:\"\\\\\\\\[\\\\s\\\\S]\",relevance:0},x={scope:\"string\",begin:\"'\",end:\"'\", illegal:\"\\\\n\",contains:[O]},M={scope:\"string\",begin:'\"',end:'\"',illegal:\"\\\\n\", contains:[O]},k=(e,n,t={})=>{const a=r({scope:\"comment\",begin:e,end:n, contains:[]},t);a.contains.push({scope:\"doctag\", begin:\"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)\", end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0}) ;const i=p(\"I\",\"a\",\"is\",\"so\",\"us\",\"to\",\"at\",\"if\",\"in\",\"it\",\"on\",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/) ;return a.contains.push({begin:m(/[ ]+/,\"(\",i,/[.]?[:]?([.][ ]|[ ])/,\"){3}\")}),a },S=k(\"//\",\"$\"),A=k(\"/\\\\*\",\"\\\\*/\"),C=k(\"#\",\"$\");var T=Object.freeze({ __proto__:null,MATCH_NOTHING_RE:/\\b\\B/,IDENT_RE:E,UNDERSCORE_IDENT_RE:y, NUMBER_RE:N,C_NUMBER_RE:w,BINARY_NUMBER_RE:v, RE_STARTERS_RE:\"!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~\", SHEBANG:(e={})=>{const n=/^#![ ]*\\// ;return e.binary&&(e.begin=m(n,/.*\\b/,e.binary,/\\b.*/)),r({scope:\"meta\",begin:n, end:/$/,relevance:0,\"on:begin\":(e,n)=>{0!==e.index&&n.ignoreMatch()}},e)}, BACKSLASH_ESCAPE:O,APOS_STRING_MODE:x,QUOTE_STRING_MODE:M,PHRASAL_WORDS_MODE:{ begin:/\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/ },COMMENT:k,C_LINE_COMMENT_MODE:S,C_BLOCK_COMMENT_MODE:A,HASH_COMMENT_MODE:C, NUMBER_MODE:{scope:\"number\",begin:N,relevance:0},C_NUMBER_MODE:{scope:\"number\", begin:w,relevance:0},BINARY_NUMBER_MODE:{scope:\"number\",begin:v,relevance:0}, REGEXP_MODE:{begin:/(?=\\/[^/\\n]*\\/)/,contains:[{scope:\"regexp\",begin:/\\//, end:/\\/[gimuy]*/,illegal:/\\n/,contains:[O,{begin:/\\[/,end:/\\]/,relevance:0, contains:[O]}]}]},TITLE_MODE:{scope:\"title\",begin:E,relevance:0}, UNDERSCORE_TITLE_MODE:{scope:\"title\",begin:y,relevance:0},METHOD_GUARD:{ begin:\"\\\\.\\\\s*[a-zA-Z_]\\\\w*\",relevance:0},END_SAME_AS_BEGIN:e=>Object.assign(e,{ \"on:begin\":(e,n)=>{n.data._beginMatch=e[1]},\"on:end\":(e,n)=>{ n.data._beginMatch!==e[1]&&n.ignoreMatch()}})});function R(e,n){ \".\"===e.input[e.index-1]&&n.ignoreMatch()}function D(e,n){ void 0!==e.className&&(e.scope=e.className,delete e.className)}function I(e,n){ n&&e.beginKeywords&&(e.begin=\"\\\\b(\"+e.beginKeywords.split(\" \").join(\"|\")+\")(?!\\\\.)(?=\\\\b|\\\\s)\", e.__beforeBegin=R,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords, void 0===e.relevance&&(e.relevance=0))}function L(e,n){ Array.isArray(e.illegal)&&(e.illegal=p(...e.illegal))}function B(e,n){ if(e.match){ if(e.begin||e.end)throw Error(\"begin & end are not supported with match\") ;e.begin=e.match,delete e.match}}function $(e,n){ void 0===e.relevance&&(e.relevance=1)}const F=(e,n)=>{if(!e.beforeMatch)return ;if(e.starts)throw Error(\"beforeMatch cannot be used with starts\") ;const t=Object.assign({},e);Object.keys(e).forEach((n=>{delete e[n] })),e.keywords=t.keywords,e.begin=m(t.beforeMatch,g(t.begin)),e.starts={ relevance:0,contains:[Object.assign(t,{endsParent:!0})] },e.relevance=0,delete t.beforeMatch },z=[\"of\",\"and\",\"for\",\"in\",\"not\",\"or\",\"if\",\"then\",\"parent\",\"list\",\"value\"] ;function U(e,n,t=\"keyword\"){const a=Object.create(null) ;return\"string\"==typeof e?i(t,e.split(\" \")):Array.isArray(e)?i(t,e):Object.keys(e).forEach((t=>{ Object.assign(a,U(e[t],n,t))})),a;function i(e,t){ n&&(t=t.map((e=>e.toLowerCase()))),t.forEach((n=>{const t=n.split(\"|\") ;a[t[0]]=[e,j(t[0],t[1])]}))}}function j(e,n){ return n?Number(n):(e=>z.includes(e.toLowerCase()))(e)?0:1}const P={},K=e=>{ console.error(e)},q=(e,...n)=>{console.log(\"WARN: \"+e,...n)},H=(e,n)=>{ P[`${e}/${n}`]||(console.log(`Deprecated as of ${e}. ${n}`),P[`${e}/${n}`]=!0) },Z=Error();function G(e,n,{key:t}){let a=0;const i=e[t],r={},s={} ;for(let e=1;e{ e.scope&&\"object\"==typeof e.scope&&null!==e.scope&&(e.beginScope=e.scope, delete e.scope)})(e),\"string\"==typeof e.beginScope&&(e.beginScope={ _wrap:e.beginScope}),\"string\"==typeof e.endScope&&(e.endScope={_wrap:e.endScope }),(e=>{if(Array.isArray(e.begin)){ if(e.skip||e.excludeBegin||e.returnBegin)throw K(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\"), Z ;if(\"object\"!=typeof e.beginScope||null===e.beginScope)throw K(\"beginScope must be object\"), Z;G(e,e.begin,{key:\"beginScope\"}),e.begin=f(e.begin,{joinWith:\"\"})}})(e),(e=>{ if(Array.isArray(e.end)){ if(e.skip||e.excludeEnd||e.returnEnd)throw K(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\"), Z ;if(\"object\"!=typeof e.endScope||null===e.endScope)throw K(\"endScope must be object\"), Z;G(e,e.end,{key:\"endScope\"}),e.end=f(e.end,{joinWith:\"\"})}})(e)}function Q(e){ function n(n,t){ return RegExp(d(n),\"m\"+(e.case_insensitive?\"i\":\"\")+(e.unicodeRegex?\"u\":\"\")+(t?\"g\":\"\")) }class t{constructor(){ this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0} addRule(e,n){ n.position=this.position++,this.matchIndexes[this.matchAt]=n,this.regexes.push([n,e]), this.matchAt+=_(e)+1}compile(){0===this.regexes.length&&(this.exec=()=>null) ;const e=this.regexes.map((e=>e[1]));this.matcherRe=n(f(e,{joinWith:\"|\" }),!0),this.lastIndex=0}exec(e){this.matcherRe.lastIndex=this.lastIndex ;const n=this.matcherRe.exec(e);if(!n)return null ;const t=n.findIndex(((e,n)=>n>0&&void 0!==e)),a=this.matchIndexes[t] ;return n.splice(0,t),Object.assign(n,a)}}class a{constructor(){ this.rules=[],this.multiRegexes=[], this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(e){ if(this.multiRegexes[e])return this.multiRegexes[e];const n=new t ;return this.rules.slice(e).forEach((([e,t])=>n.addRule(e,t))), n.compile(),this.multiRegexes[e]=n,n}resumingScanAtSamePosition(){ return 0!==this.regexIndex}considerAll(){this.regexIndex=0}addRule(e,n){ this.rules.push([e,n]),\"begin\"===n.type&&this.count++}exec(e){ const n=this.getMatcher(this.regexIndex);n.lastIndex=this.lastIndex ;let t=n.exec(e) ;if(this.resumingScanAtSamePosition())if(t&&t.index===this.lastIndex);else{ const n=this.getMatcher(0);n.lastIndex=this.lastIndex+1,t=n.exec(e)} return t&&(this.regexIndex+=t.position+1, this.regexIndex===this.count&&this.considerAll()),t}} if(e.compilerExtensions||(e.compilerExtensions=[]), e.contains&&e.contains.includes(\"self\"))throw Error(\"ERR: contains `self` is not supported at the top-level of a language. See documentation.\") ;return e.classNameAliases=r(e.classNameAliases||{}),function t(i,s){const o=i ;if(i.isCompiled)return o ;[D,B,W,F].forEach((e=>e(i,s))),e.compilerExtensions.forEach((e=>e(i,s))), i.__beforeBegin=null,[I,L,$].forEach((e=>e(i,s))),i.isCompiled=!0;let l=null ;return\"object\"==typeof i.keywords&&i.keywords.$pattern&&(i.keywords=Object.assign({},i.keywords), l=i.keywords.$pattern, delete i.keywords.$pattern),l=l||/\\w+/,i.keywords&&(i.keywords=U(i.keywords,e.case_insensitive)), o.keywordPatternRe=n(l,!0), s&&(i.begin||(i.begin=/\\B|\\b/),o.beginRe=n(o.begin),i.end||i.endsWithParent||(i.end=/\\B|\\b/), i.end&&(o.endRe=n(o.end)), o.terminatorEnd=d(o.end)||\"\",i.endsWithParent&&s.terminatorEnd&&(o.terminatorEnd+=(i.end?\"|\":\"\")+s.terminatorEnd)), i.illegal&&(o.illegalRe=n(i.illegal)), i.contains||(i.contains=[]),i.contains=[].concat(...i.contains.map((e=>(e=>(e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map((n=>r(e,{ variants:null},n)))),e.cachedVariants?e.cachedVariants:X(e)?r(e,{ starts:e.starts?r(e.starts):null }):Object.isFrozen(e)?r(e):e))(\"self\"===e?i:e)))),i.contains.forEach((e=>{t(e,o) })),i.starts&&t(i.starts,s),o.matcher=(e=>{const n=new a ;return e.contains.forEach((e=>n.addRule(e.begin,{rule:e,type:\"begin\" }))),e.terminatorEnd&&n.addRule(e.terminatorEnd,{type:\"end\" }),e.illegal&&n.addRule(e.illegal,{type:\"illegal\"}),n})(o),o}(e)}function X(e){ return!!e&&(e.endsWithParent||X(e.starts))}class V extends Error{ constructor(e,n){super(e),this.name=\"HTMLInjectionError\",this.html=n}} const J=i,Y=r,ee=Symbol(\"nomatch\");var ne=(e=>{ const n=Object.create(null),i=Object.create(null),r=[];let s=!0 ;const o=\"Could not find the language '{}', did you forget to load/include a language module?\",l={ disableAutodetect:!0,name:\"Plain text\",contains:[]};let d={ ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i, languageDetectRe:/\\blang(?:uage)?-([\\w-]+)\\b/i,classPrefix:\"hljs-\", cssSelector:\"pre code\",languages:null,__emitter:c};function _(e){ return d.noHighlightRe.test(e)}function h(e,n,t){let a=\"\",i=\"\" ;\"object\"==typeof n?(a=e, t=n.ignoreIllegals,i=n.language):(H(\"10.7.0\",\"highlight(lang, code, ...args) has been deprecated.\"), H(\"10.7.0\",\"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\"), i=e,a=n),void 0===t&&(t=!0);const r={code:a,language:i};M(\"before:highlight\",r) ;const s=r.result?r.result:f(r.language,r.code,t) ;return s.code=r.code,M(\"after:highlight\",s),s}function f(e,t,i,r){ const l=Object.create(null);function c(){if(!x.keywords)return void k.addText(S) ;let e=0;x.keywordPatternRe.lastIndex=0;let n=x.keywordPatternRe.exec(S),t=\"\" ;for(;n;){t+=S.substring(e,n.index) ;const i=N.case_insensitive?n[0].toLowerCase():n[0],r=(a=i,x.keywords[a]);if(r){ const[e,a]=r ;if(k.addText(t),t=\"\",l[i]=(l[i]||0)+1,l[i]{ if(\"\"===S)return;let e=null;if(\"string\"==typeof x.subLanguage){ if(!n[x.subLanguage])return void k.addText(S) ;e=f(x.subLanguage,S,!0,M[x.subLanguage]),M[x.subLanguage]=e._top }else e=E(S,x.subLanguage.length?x.subLanguage:null) ;x.relevance>0&&(A+=e.relevance),k.addSublanguage(e._emitter,e.language) })():c(),S=\"\"}function u(e,n){let t=1;for(;void 0!==n[t];){if(!e._emit[t]){t++ ;continue}const a=N.classNameAliases[e[t]]||e[t],i=n[t] ;a?k.addKeyword(i,a):(S=i,c(),S=\"\"),t++}}function b(e,n){ return e.scope&&\"string\"==typeof e.scope&&k.openNode(N.classNameAliases[e.scope]||e.scope), e.beginScope&&(e.beginScope._wrap?(k.addKeyword(S,N.classNameAliases[e.beginScope._wrap]||e.beginScope._wrap), S=\"\"):e.beginScope._multi&&(u(e.beginScope,n),S=\"\")),x=Object.create(e,{parent:{ value:x}}),x}function m(e,n,t){let i=((e,n)=>{const t=e&&e.exec(n) ;return t&&0===t.index})(e.endRe,t);if(i){if(e[\"on:end\"]){const t=new a(e) ;e[\"on:end\"](n,t),t.isMatchIgnored&&(i=!1)}if(i){ for(;e.endsParent&&e.parent;)e=e.parent;return e}} if(e.endsWithParent)return m(e.parent,n,t)}function p(e){ return 0===x.matcher.regexIndex?(S+=e[0],1):(R=!0,0)}function _(e){ const n=e[0],a=t.substr(e.index),i=m(x,e,a);if(!i)return ee;const r=x ;x.endScope&&x.endScope._wrap?(g(), k.addKeyword(n,x.endScope._wrap)):x.endScope&&x.endScope._multi?(g(), u(x.endScope,e)):r.skip?S+=n:(r.returnEnd||r.excludeEnd||(S+=n), g(),r.excludeEnd&&(S=n));do{ x.scope&&k.closeNode(),x.skip||x.subLanguage||(A+=x.relevance),x=x.parent }while(x!==i.parent);return i.starts&&b(i.starts,e),r.returnEnd?0:n.length} let h={};function y(n,r){const o=r&&r[0];if(S+=n,null==o)return g(),0 ;if(\"begin\"===h.type&&\"end\"===r.type&&h.index===r.index&&\"\"===o){ if(S+=t.slice(r.index,r.index+1),!s){const n=Error(`0 width match regex (${e})`) ;throw n.languageName=e,n.badRule=h.rule,n}return 1} if(h=r,\"begin\"===r.type)return(e=>{ const n=e[0],t=e.rule,i=new a(t),r=[t.__beforeBegin,t[\"on:begin\"]] ;for(const t of r)if(t&&(t(e,i),i.isMatchIgnored))return p(n) ;return t.skip?S+=n:(t.excludeBegin&&(S+=n), g(),t.returnBegin||t.excludeBegin||(S=n)),b(t,e),t.returnBegin?0:n.length})(r) ;if(\"illegal\"===r.type&&!i){ const e=Error('Illegal lexeme \"'+o+'\" for mode \"'+(x.scope||\"\")+'\"') ;throw e.mode=x,e}if(\"end\"===r.type){const e=_(r);if(e!==ee)return e} if(\"illegal\"===r.type&&\"\"===o)return 1 ;if(T>1e5&&T>3*r.index)throw Error(\"potential infinite loop, way more iterations than matches\") ;return S+=o,o.length}const N=v(e) ;if(!N)throw K(o.replace(\"{}\",e)),Error('Unknown language: \"'+e+'\"') ;const w=Q(N);let O=\"\",x=r||w;const M={},k=new d.__emitter(d);(()=>{const e=[] ;for(let n=x;n!==N;n=n.parent)n.scope&&e.unshift(n.scope) ;e.forEach((e=>k.openNode(e)))})();let S=\"\",A=0,C=0,T=0,R=!1;try{ for(x.matcher.considerAll();;){ T++,R?R=!1:x.matcher.considerAll(),x.matcher.lastIndex=C ;const e=x.matcher.exec(t);if(!e)break;const n=y(t.substring(C,e.index),e) ;C=e.index+n}return y(t.substr(C)),k.closeAllNodes(),k.finalize(),O=k.toHTML(),{ language:e,value:O,relevance:A,illegal:!1,_emitter:k,_top:x}}catch(n){ if(n.message&&n.message.includes(\"Illegal\"))return{language:e,value:J(t), illegal:!0,relevance:0,_illegalBy:{message:n.message,index:C, context:t.slice(C-100,C+100),mode:n.mode,resultSoFar:O},_emitter:k};if(s)return{ language:e,value:J(t),illegal:!1,relevance:0,errorRaised:n,_emitter:k,_top:x} ;throw n}}function E(e,t){t=t||d.languages||Object.keys(n);const a=(e=>{ const n={value:J(e),illegal:!1,relevance:0,_top:l,_emitter:new d.__emitter(d)} ;return n._emitter.addText(e),n})(e),i=t.filter(v).filter(x).map((n=>f(n,e,!1))) ;i.unshift(a);const r=i.sort(((e,n)=>{ if(e.relevance!==n.relevance)return n.relevance-e.relevance ;if(e.language&&n.language){if(v(e.language).supersetOf===n.language)return 1 ;if(v(n.language).supersetOf===e.language)return-1}return 0})),[s,o]=r,c=s ;return c.secondBest=o,c}function y(e){let n=null;const t=(e=>{ let n=e.className+\" \";n+=e.parentNode?e.parentNode.className:\"\" ;const t=d.languageDetectRe.exec(n);if(t){const n=v(t[1]) ;return n||(q(o.replace(\"{}\",t[1])), q(\"Falling back to no-highlight mode for this block.\",e)),n?t[1]:\"no-highlight\"} return n.split(/\\s+/).find((e=>_(e)||v(e)))})(e);if(_(t))return ;if(M(\"before:highlightElement\",{el:e,language:t }),e.children.length>0&&(d.ignoreUnescapedHTML||(console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\"), console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\"), console.warn(\"The element with unescaped HTML:\"), console.warn(e)),d.throwUnescapedHTML))throw new V(\"One of your code blocks includes unescaped HTML.\",e.innerHTML) ;n=e;const a=n.textContent,r=t?h(a,{language:t,ignoreIllegals:!0}):E(a) ;e.innerHTML=r.value,((e,n,t)=>{const a=n&&i[n]||t ;e.classList.add(\"hljs\"),e.classList.add(\"language-\"+a) })(e,t,r.language),e.result={language:r.language,re:r.relevance, relevance:r.relevance},r.secondBest&&(e.secondBest={ language:r.secondBest.language,relevance:r.secondBest.relevance }),M(\"after:highlightElement\",{el:e,result:r,text:a})}let N=!1;function w(){ \"loading\"!==document.readyState?document.querySelectorAll(d.cssSelector).forEach(y):N=!0 }function v(e){return e=(e||\"\").toLowerCase(),n[e]||n[i[e]]} function O(e,{languageName:n}){\"string\"==typeof e&&(e=[e]),e.forEach((e=>{ i[e.toLowerCase()]=n}))}function x(e){const n=v(e) ;return n&&!n.disableAutodetect}function M(e,n){const t=e;r.forEach((e=>{ e[t]&&e[t](n)}))} \"undefined\"!=typeof window&&window.addEventListener&&window.addEventListener(\"DOMContentLoaded\",(()=>{ N&&w()}),!1),Object.assign(e,{highlight:h,highlightAuto:E,highlightAll:w, highlightElement:y, highlightBlock:e=>(H(\"10.7.0\",\"highlightBlock will be removed entirely in v12.0\"), H(\"10.7.0\",\"Please use highlightElement now.\"),y(e)),configure:e=>{d=Y(d,e)}, initHighlighting:()=>{ w(),H(\"10.6.0\",\"initHighlighting() deprecated. Use highlightAll() now.\")}, initHighlightingOnLoad:()=>{ w(),H(\"10.6.0\",\"initHighlightingOnLoad() deprecated. Use highlightAll() now.\") },registerLanguage:(t,a)=>{let i=null;try{i=a(e)}catch(e){ if(K(\"Language definition for '{}' could not be registered.\".replace(\"{}\",t)), !s)throw e;K(e),i=l} i.name||(i.name=t),n[t]=i,i.rawDefinition=a.bind(null,e),i.aliases&&O(i.aliases,{ languageName:t})},unregisterLanguage:e=>{delete n[e] ;for(const n of Object.keys(i))i[n]===e&&delete i[n]}, listLanguages:()=>Object.keys(n),getLanguage:v,registerAliases:O, autoDetection:x,inherit:Y,addPlugin:e=>{(e=>{ e[\"before:highlightBlock\"]&&!e[\"before:highlightElement\"]&&(e[\"before:highlightElement\"]=n=>{ e[\"before:highlightBlock\"](Object.assign({block:n.el},n)) }),e[\"after:highlightBlock\"]&&!e[\"after:highlightElement\"]&&(e[\"after:highlightElement\"]=n=>{ e[\"after:highlightBlock\"](Object.assign({block:n.el},n))})})(e),r.push(e)} }),e.debugMode=()=>{s=!1},e.safeMode=()=>{s=!0 },e.versionString=\"11.4.0\",e.regex={concat:m,lookahead:g,either:p,optional:b, anyNumberOfTimes:u};for(const e in T)\"object\"==typeof T[e]&&t(T[e]) ;return Object.assign(e,T),e})({});const te=e=>({IMPORTANT:{scope:\"meta\", begin:\"!important\"},BLOCK_COMMENT:e.C_BLOCK_COMMENT_MODE,HEXCOLOR:{ scope:\"number\",begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/}, FUNCTION_DISPATCH:{className:\"built_in\",begin:/[\\w-]+(?=\\()/}, ATTRIBUTE_SELECTOR_MODE:{scope:\"selector-attr\",begin:/\\[/,end:/\\]/,illegal:\"$\", contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{ scope:\"number\", begin:e.NUMBER_RE+\"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\", relevance:0},CSS_VARIABLE:{className:\"attr\",begin:/--[A-Za-z][A-Za-z0-9_-]*/} }),ae=[\"a\",\"abbr\",\"address\",\"article\",\"aside\",\"audio\",\"b\",\"blockquote\",\"body\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"dd\",\"del\",\"details\",\"dfn\",\"div\",\"dl\",\"dt\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"hgroup\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"label\",\"legend\",\"li\",\"main\",\"mark\",\"menu\",\"nav\",\"object\",\"ol\",\"p\",\"q\",\"quote\",\"samp\",\"section\",\"span\",\"strong\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"ul\",\"var\",\"video\"],ie=[\"any-hover\",\"any-pointer\",\"aspect-ratio\",\"color\",\"color-gamut\",\"color-index\",\"device-aspect-ratio\",\"device-height\",\"device-width\",\"display-mode\",\"forced-colors\",\"grid\",\"height\",\"hover\",\"inverted-colors\",\"monochrome\",\"orientation\",\"overflow-block\",\"overflow-inline\",\"pointer\",\"prefers-color-scheme\",\"prefers-contrast\",\"prefers-reduced-motion\",\"prefers-reduced-transparency\",\"resolution\",\"scan\",\"scripting\",\"update\",\"width\",\"min-width\",\"max-width\",\"min-height\",\"max-height\"],re=[\"active\",\"any-link\",\"blank\",\"checked\",\"current\",\"default\",\"defined\",\"dir\",\"disabled\",\"drop\",\"empty\",\"enabled\",\"first\",\"first-child\",\"first-of-type\",\"fullscreen\",\"future\",\"focus\",\"focus-visible\",\"focus-within\",\"has\",\"host\",\"host-context\",\"hover\",\"indeterminate\",\"in-range\",\"invalid\",\"is\",\"lang\",\"last-child\",\"last-of-type\",\"left\",\"link\",\"local-link\",\"not\",\"nth-child\",\"nth-col\",\"nth-last-child\",\"nth-last-col\",\"nth-last-of-type\",\"nth-of-type\",\"only-child\",\"only-of-type\",\"optional\",\"out-of-range\",\"past\",\"placeholder-shown\",\"read-only\",\"read-write\",\"required\",\"right\",\"root\",\"scope\",\"target\",\"target-within\",\"user-invalid\",\"valid\",\"visited\",\"where\"],se=[\"after\",\"backdrop\",\"before\",\"cue\",\"cue-region\",\"first-letter\",\"first-line\",\"grammar-error\",\"marker\",\"part\",\"placeholder\",\"selection\",\"slotted\",\"spelling-error\"],oe=[\"align-content\",\"align-items\",\"align-self\",\"all\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"caret-color\",\"clear\",\"clip\",\"clip-path\",\"clip-rule\",\"color\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"contain\",\"content\",\"content-visibility\",\"counter-increment\",\"counter-reset\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"empty-cells\",\"filter\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"flow\",\"font\",\"font-display\",\"font-family\",\"font-feature-settings\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-smoothing\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-variation-settings\",\"font-weight\",\"gap\",\"glyph-orientation-vertical\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-gap\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"ime-mode\",\"isolation\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marks\",\"mask\",\"mask-border\",\"mask-border-mode\",\"mask-border-outset\",\"mask-border-repeat\",\"mask-border-slice\",\"mask-border-source\",\"mask-border-width\",\"mask-clip\",\"mask-composite\",\"mask-image\",\"mask-mode\",\"mask-origin\",\"mask-position\",\"mask-repeat\",\"mask-size\",\"mask-type\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"mix-blend-mode\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"none\",\"normal\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pointer-events\",\"position\",\"quotes\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"right\",\"row-gap\",\"scroll-margin\",\"scroll-margin-block\",\"scroll-margin-block-end\",\"scroll-margin-block-start\",\"scroll-margin-bottom\",\"scroll-margin-inline\",\"scroll-margin-inline-end\",\"scroll-margin-inline-start\",\"scroll-margin-left\",\"scroll-margin-right\",\"scroll-margin-top\",\"scroll-padding\",\"scroll-padding-block\",\"scroll-padding-block-end\",\"scroll-padding-block-start\",\"scroll-padding-bottom\",\"scroll-padding-inline\",\"scroll-padding-inline-end\",\"scroll-padding-inline-start\",\"scroll-padding-left\",\"scroll-padding-right\",\"scroll-padding-top\",\"scroll-snap-align\",\"scroll-snap-stop\",\"scroll-snap-type\",\"shape-image-threshold\",\"shape-margin\",\"shape-outside\",\"speak\",\"speak-as\",\"src\",\"tab-size\",\"table-layout\",\"text-align\",\"text-align-all\",\"text-align-last\",\"text-combine-upright\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-indent\",\"text-justify\",\"text-orientation\",\"text-overflow\",\"text-rendering\",\"text-shadow\",\"text-transform\",\"text-underline-position\",\"top\",\"transform\",\"transform-box\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"writing-mode\",\"z-index\"].reverse(),le=re.concat(se) ;var ce=\"\\\\.([0-9](_*[0-9])*)\",de=\"[0-9a-fA-F](_*[0-9a-fA-F])*\",ge={ className:\"number\",variants:[{ begin:`(\\\\b([0-9](_*[0-9])*)((${ce})|\\\\.)?|(${ce}))[eE][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b` },{begin:`\\\\b([0-9](_*[0-9])*)((${ce})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)`},{ begin:`(${ce})[fFdD]?\\\\b`},{begin:\"\\\\b([0-9](_*[0-9])*)[fFdD]\\\\b\"},{ begin:`\\\\b0[xX]((${de})\\\\.?|(${de})?\\\\.(${de}))[pP][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b` },{begin:\"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\"},{begin:`\\\\b0[xX](${de})[lL]?\\\\b`},{ begin:\"\\\\b0(_*[0-7])*[lL]?\\\\b\"},{begin:\"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\"}], relevance:0};function ue(e,n,t){return-1===t?\"\":e.replace(n,(a=>ue(e,n,t-1)))} const be=\"[A-Za-z$_][0-9A-Za-z$_]*\",me=[\"as\",\"in\",\"of\",\"if\",\"for\",\"while\",\"finally\",\"var\",\"new\",\"function\",\"do\",\"return\",\"void\",\"else\",\"break\",\"catch\",\"instanceof\",\"with\",\"throw\",\"case\",\"default\",\"try\",\"switch\",\"continue\",\"typeof\",\"delete\",\"let\",\"yield\",\"const\",\"class\",\"debugger\",\"async\",\"await\",\"static\",\"import\",\"from\",\"export\",\"extends\"],pe=[\"true\",\"false\",\"null\",\"undefined\",\"NaN\",\"Infinity\"],_e=[\"Object\",\"Function\",\"Boolean\",\"Symbol\",\"Math\",\"Date\",\"Number\",\"BigInt\",\"String\",\"RegExp\",\"Array\",\"Float32Array\",\"Float64Array\",\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Int32Array\",\"Uint16Array\",\"Uint32Array\",\"BigInt64Array\",\"BigUint64Array\",\"Set\",\"Map\",\"WeakSet\",\"WeakMap\",\"ArrayBuffer\",\"SharedArrayBuffer\",\"Atomics\",\"DataView\",\"JSON\",\"Promise\",\"Generator\",\"GeneratorFunction\",\"AsyncFunction\",\"Reflect\",\"Proxy\",\"Intl\",\"WebAssembly\"],he=[\"Error\",\"EvalError\",\"InternalError\",\"RangeError\",\"ReferenceError\",\"SyntaxError\",\"TypeError\",\"URIError\"],fe=[\"setInterval\",\"setTimeout\",\"clearInterval\",\"clearTimeout\",\"require\",\"exports\",\"eval\",\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",\"escape\",\"unescape\"],Ee=[\"arguments\",\"this\",\"super\",\"console\",\"window\",\"document\",\"localStorage\",\"module\",\"global\"],ye=[].concat(fe,_e,he) ;function Ne(e){const n=e.regex,t=be,a={begin:/|\\/>/,isTrulyOpeningTag:(e,n)=>{ const t=e[0].length+e.index,a=e.input[t] ;if(\"\"===a&&(((e,{after:n})=>{const t=\"\",x={ match:[/const|var|let/,/\\s+/,t,/\\s*/,/=\\s*/,/(async\\s*)?/,n.lookahead(O)], keywords:\"async\",className:{1:\"keyword\",3:\"title.function\"},contains:[_]} ;return{name:\"Javascript\",aliases:[\"js\",\"jsx\",\"mjs\",\"cjs\"],keywords:i,exports:{ PARAMS_CONTAINS:p,CLASS_REFERENCE:f},illegal:/#(?![$_A-z])/, contains:[e.SHEBANG({label:\"shebang\",binary:\"node\",relevance:5}),{ label:\"use_strict\",className:\"meta\",relevance:10, begin:/^\\s*['\"]use (strict|asm)['\"]/ },e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,c,d,g,u,o,f,{className:\"attr\", begin:t+n.lookahead(\":\"),relevance:0},x,{ begin:\"(\"+e.RE_STARTERS_RE+\"|\\\\b(case|return|throw)\\\\b)\\\\s*\", keywords:\"return throw case\",relevance:0,contains:[u,e.REGEXP_MODE,{ className:\"function\",begin:O,returnBegin:!0,end:\"\\\\s*=>\",contains:[{ className:\"params\",variants:[{begin:e.UNDERSCORE_IDENT_RE,relevance:0},{ className:null,begin:/\\(\\s*\\)/,skip:!0},{begin:/\\(/,end:/\\)/,excludeBegin:!0, excludeEnd:!0,keywords:i,contains:p}]}]},{begin:/,/,relevance:0},{match:/\\s+/, relevance:0},{variants:[{begin:\"\",end:\"\"},{ match://},{begin:a.begin, \"on:begin\":a.isTrulyOpeningTag,end:a.end}],subLanguage:\"xml\",contains:[{ begin:a.begin,end:a.end,skip:!0,contains:[\"self\"]}]}]},E,{ beginKeywords:\"while if switch catch for\"},{ begin:\"\\\\b(?!function)\"+e.UNDERSCORE_IDENT_RE+\"\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{\", returnBegin:!0,label:\"func.def\",contains:[_,e.inherit(e.TITLE_MODE,{begin:t, className:\"title.function\"})]},{match:/\\.\\.\\./,relevance:0},w,{match:\"\\\\$\"+t, relevance:0},{match:[/\\bconstructor(?=\\s*\\()/],className:{1:\"title.function\"}, contains:[_]},y,{relevance:0,match:/\\b[A-Z][A-Z_0-9]+\\b/, className:\"variable.constant\"},h,v,{match:/\\$[(.]/}]}} const we=e=>m(/\\b/,e,/\\w$/.test(e)?/\\b/:/\\B/),ve=[\"Protocol\",\"Type\"].map(we),Oe=[\"init\",\"self\"].map(we),xe=[\"Any\",\"Self\"],Me=[\"actor\",\"associatedtype\",\"async\",\"await\",/as\\?/,/as!/,\"as\",\"break\",\"case\",\"catch\",\"class\",\"continue\",\"convenience\",\"default\",\"defer\",\"deinit\",\"didSet\",\"do\",\"dynamic\",\"else\",\"enum\",\"extension\",\"fallthrough\",/fileprivate\\(set\\)/,\"fileprivate\",\"final\",\"for\",\"func\",\"get\",\"guard\",\"if\",\"import\",\"indirect\",\"infix\",/init\\?/,/init!/,\"inout\",/internal\\(set\\)/,\"internal\",\"in\",\"is\",\"isolated\",\"nonisolated\",\"lazy\",\"let\",\"mutating\",\"nonmutating\",/open\\(set\\)/,\"open\",\"operator\",\"optional\",\"override\",\"postfix\",\"precedencegroup\",\"prefix\",/private\\(set\\)/,\"private\",\"protocol\",/public\\(set\\)/,\"public\",\"repeat\",\"required\",\"rethrows\",\"return\",\"set\",\"some\",\"static\",\"struct\",\"subscript\",\"super\",\"switch\",\"throws\",\"throw\",/try\\?/,/try!/,\"try\",\"typealias\",/unowned\\(safe\\)/,/unowned\\(unsafe\\)/,\"unowned\",\"var\",\"weak\",\"where\",\"while\",\"willSet\"],ke=[\"false\",\"nil\",\"true\"],Se=[\"assignment\",\"associativity\",\"higherThan\",\"left\",\"lowerThan\",\"none\",\"right\"],Ae=[\"#colorLiteral\",\"#column\",\"#dsohandle\",\"#else\",\"#elseif\",\"#endif\",\"#error\",\"#file\",\"#fileID\",\"#fileLiteral\",\"#filePath\",\"#function\",\"#if\",\"#imageLiteral\",\"#keyPath\",\"#line\",\"#selector\",\"#sourceLocation\",\"#warn_unqualified_access\",\"#warning\"],Ce=[\"abs\",\"all\",\"any\",\"assert\",\"assertionFailure\",\"debugPrint\",\"dump\",\"fatalError\",\"getVaList\",\"isKnownUniquelyReferenced\",\"max\",\"min\",\"numericCast\",\"pointwiseMax\",\"pointwiseMin\",\"precondition\",\"preconditionFailure\",\"print\",\"readLine\",\"repeatElement\",\"sequence\",\"stride\",\"swap\",\"swift_unboxFromSwiftValueWithType\",\"transcode\",\"type\",\"unsafeBitCast\",\"unsafeDowncast\",\"withExtendedLifetime\",\"withUnsafeMutablePointer\",\"withUnsafePointer\",\"withVaList\",\"withoutActuallyEscaping\",\"zip\"],Te=p(/[/=\\-+!*%&|^~?]/,/[\\u00A1-\\u00A7]/,/[\\u00A9\\u00AB]/,/[\\u00AC\\u00AE]/,/[\\u00B0\\u00B1]/,/[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/,/[\\u2016-\\u2017]/,/[\\u2020-\\u2027]/,/[\\u2030-\\u203E]/,/[\\u2041-\\u2053]/,/[\\u2055-\\u205E]/,/[\\u2190-\\u23FF]/,/[\\u2500-\\u2775]/,/[\\u2794-\\u2BFF]/,/[\\u2E00-\\u2E7F]/,/[\\u3001-\\u3003]/,/[\\u3008-\\u3020]/,/[\\u3030]/),Re=p(Te,/[\\u0300-\\u036F]/,/[\\u1DC0-\\u1DFF]/,/[\\u20D0-\\u20FF]/,/[\\uFE00-\\uFE0F]/,/[\\uFE20-\\uFE2F]/),De=m(Te,Re,\"*\"),Ie=p(/[a-zA-Z_]/,/[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/,/[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/,/[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/,/[\\u1E00-\\u1FFF]/,/[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/,/[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/,/[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/,/[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/,/[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/,/[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/),Le=p(Ie,/\\d/,/[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/),Be=m(Ie,Le,\"*\"),$e=m(/[A-Z]/,Le,\"*\"),Fe=[\"autoclosure\",m(/convention\\(/,p(\"swift\",\"block\",\"c\"),/\\)/),\"discardableResult\",\"dynamicCallable\",\"dynamicMemberLookup\",\"escaping\",\"frozen\",\"GKInspectable\",\"IBAction\",\"IBDesignable\",\"IBInspectable\",\"IBOutlet\",\"IBSegueAction\",\"inlinable\",\"main\",\"nonobjc\",\"NSApplicationMain\",\"NSCopying\",\"NSManaged\",m(/objc\\(/,Be,/\\)/),\"objc\",\"objcMembers\",\"propertyWrapper\",\"requires_stored_property_inits\",\"resultBuilder\",\"testable\",\"UIApplicationMain\",\"unknown\",\"usableFromInline\"],ze=[\"iOS\",\"iOSApplicationExtension\",\"macOS\",\"macOSApplicationExtension\",\"macCatalyst\",\"macCatalystApplicationExtension\",\"watchOS\",\"watchOSApplicationExtension\",\"tvOS\",\"tvOSApplicationExtension\",\"swift\"] ;var Ue=Object.freeze({__proto__:null,grmr_bash:e=>{const n=e.regex,t={},a={ begin:/\\$\\{/,end:/\\}/,contains:[\"self\",{begin:/:-/,contains:[t]}]} ;Object.assign(t,{className:\"variable\",variants:[{ begin:n.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\"(?![\\\\w\\\\d])(?![$])\")},a]});const i={ className:\"subst\",begin:/\\$\\(/,end:/\\)/,contains:[e.BACKSLASH_ESCAPE]},r={ begin:/({ className:\"string\",begin:\"~?\"+e+\".*?\"+e}),o=(e,n,t)=>({className:e,begin:n, relevance:t}),l={$pattern:/[a-z-]+/,keyword:\"and or not only\", attribute:ie.join(\" \")},c={begin:\"\\\\(\",end:\"\\\\)\",contains:r,keywords:l, relevance:0} ;r.push(e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,s(\"'\"),s('\"'),n.CSS_NUMBER_MODE,{ begin:\"(url|data-uri)\\\\(\",starts:{className:\"string\",end:\"[\\\\)\\\\n]\", excludeEnd:!0} },n.HEXCOLOR,c,o(\"variable\",\"@@?[\\\\w-]+\",10),o(\"variable\",\"@\\\\{[\\\\w-]+\\\\}\"),o(\"built_in\",\"~?`[^`]*?`\"),{ className:\"attribute\",begin:\"[\\\\w-]+\\\\s*:\",end:\":\",returnBegin:!0,excludeEnd:!0 },n.IMPORTANT);const d=r.concat({begin:/\\{/,end:/\\}/,contains:i}),g={ beginKeywords:\"when\",endsWithParent:!0,contains:[{beginKeywords:\"and not\" }].concat(r)},u={begin:a+\"\\\\s*:\",returnBegin:!0,end:/[;}]/,relevance:0, contains:[{begin:/-(webkit|moz|ms|o)-/},n.CSS_VARIABLE,{className:\"attribute\", begin:\"\\\\b(\"+oe.join(\"|\")+\")\\\\b\",end:/(?=:)/,starts:{endsWithParent:!0, illegal:\"[]\",end:\"[;{}]\"},{begin:a,end:/\\{/}],returnBegin:!0, returnEnd:!0,illegal:\"[{const n={ className:\"variable\",variants:[{begin:\"\\\\$\\\\(\"+e.UNDERSCORE_IDENT_RE+\"\\\\)\", contains:[e.BACKSLASH_ESCAPE]},{begin:/\\$[@%{ const n=e.regex,t=n.concat(/[A-Z_]/,n.optional(/[A-Z0-9_.-]*:/),/[A-Z0-9_.-]*/),a={ className:\"symbol\",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},i={begin:/\\s/, contains:[{className:\"keyword\",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\\n/}] },r=e.inherit(i,{begin:/\\(/,end:/\\)/}),s=e.inherit(e.APOS_STRING_MODE,{ className:\"string\"}),o=e.inherit(e.QUOTE_STRING_MODE,{className:\"string\"}),l={ endsWithParent:!0,illegal:/\",subLanguage:\"xml\", relevance:0},t={variants:[{begin:/\\[.+?\\]\\[.*?\\]/,relevance:0},{ begin:/\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/, relevance:2},{ begin:e.regex.concat(/\\[.+?\\]\\(/,/[A-Za-z][A-Za-z0-9+.-]*/,/:\\/\\/.*?\\)/), relevance:2},{begin:/\\[.+?\\]\\([./?&#].*?\\)/,relevance:1},{ begin:/\\[.*?\\]\\(.*?\\)/,relevance:0}],returnBegin:!0,contains:[{match:/\\[(?=\\])/ },{className:\"string\",relevance:0,begin:\"\\\\[\",end:\"\\\\]\",excludeBegin:!0, returnEnd:!0},{className:\"link\",relevance:0,begin:\"\\\\]\\\\(\",end:\"\\\\)\", excludeBegin:!0,excludeEnd:!0},{className:\"symbol\",relevance:0,begin:\"\\\\]\\\\[\", end:\"\\\\]\",excludeBegin:!0,excludeEnd:!0}]},a={className:\"strong\",contains:[], variants:[{begin:/_{2}/,end:/_{2}/},{begin:/\\*{2}/,end:/\\*{2}/}]},i={ className:\"emphasis\",contains:[],variants:[{begin:/\\*(?!\\*)/,end:/\\*/},{ begin:/_(?!_)/,end:/_/,relevance:0}]};a.contains.push(i),i.contains.push(a) ;let r=[n,t] ;return a.contains=a.contains.concat(r),i.contains=i.contains.concat(r), r=r.concat(a,i),{name:\"Markdown\",aliases:[\"md\",\"mkdown\",\"mkd\"],contains:[{ className:\"section\",variants:[{begin:\"^#{1,6}\",end:\"$\",contains:r},{ begin:\"(?=^.+?\\\\n[=-]{2,}$)\",contains:[{begin:\"^[=-]*$\"},{begin:\"^\",end:\"\\\\n\", contains:r}]}]},n,{className:\"bullet\",begin:\"^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)\", end:\"\\\\s+\",excludeEnd:!0},a,i,{className:\"quote\",begin:\"^>\\\\s+\",contains:r, end:\"$\"},{className:\"code\",variants:[{begin:\"(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*\"},{ begin:\"(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*\"},{begin:\"```\",end:\"```+[ ]*$\"},{ begin:\"~~~\",end:\"~~~+[ ]*$\"},{begin:\"`.+?`\"},{begin:\"(?=^( {4}|\\\\t))\", contains:[{begin:\"^( {4}|\\\\t)\",end:\"(\\\\n)$\"}],relevance:0}]},{ begin:\"^[-\\\\*]{3,}\",end:\"$\"},t,{begin:/^\\[[^\\n]+\\]:/,returnBegin:!0,contains:[{ className:\"symbol\",begin:/\\[/,end:/\\]/,excludeBegin:!0,excludeEnd:!0},{ className:\"link\",begin:/:\\s*/,end:/$/,excludeBegin:!0}]}]}},grmr_objectivec:e=>{ const n=/[a-zA-Z@][a-zA-Z0-9_]*/,t={$pattern:n, keyword:[\"@interface\",\"@class\",\"@protocol\",\"@implementation\"]};return{ name:\"Objective-C\",aliases:[\"mm\",\"objc\",\"obj-c\",\"obj-c++\",\"objective-c++\"], keywords:{$pattern:n, keyword:[\"int\",\"float\",\"while\",\"char\",\"export\",\"sizeof\",\"typedef\",\"const\",\"struct\",\"for\",\"union\",\"unsigned\",\"long\",\"volatile\",\"static\",\"bool\",\"mutable\",\"if\",\"do\",\"return\",\"goto\",\"void\",\"enum\",\"else\",\"break\",\"extern\",\"asm\",\"case\",\"short\",\"default\",\"double\",\"register\",\"explicit\",\"signed\",\"typename\",\"this\",\"switch\",\"continue\",\"wchar_t\",\"inline\",\"readonly\",\"assign\",\"readwrite\",\"self\",\"@synchronized\",\"id\",\"typeof\",\"nonatomic\",\"super\",\"unichar\",\"IBOutlet\",\"IBAction\",\"strong\",\"weak\",\"copy\",\"in\",\"out\",\"inout\",\"bycopy\",\"byref\",\"oneway\",\"__strong\",\"__weak\",\"__block\",\"__autoreleasing\",\"@private\",\"@protected\",\"@public\",\"@try\",\"@property\",\"@end\",\"@throw\",\"@catch\",\"@finally\",\"@autoreleasepool\",\"@synthesize\",\"@dynamic\",\"@selector\",\"@optional\",\"@required\",\"@encode\",\"@package\",\"@import\",\"@defs\",\"@compatibility_alias\",\"__bridge\",\"__bridge_transfer\",\"__bridge_retained\",\"__bridge_retain\",\"__covariant\",\"__contravariant\",\"__kindof\",\"_Nonnull\",\"_Nullable\",\"_Null_unspecified\",\"__FUNCTION__\",\"__PRETTY_FUNCTION__\",\"__attribute__\",\"getter\",\"setter\",\"retain\",\"unsafe_unretained\",\"nonnull\",\"nullable\",\"null_unspecified\",\"null_resettable\",\"class\",\"instancetype\",\"NS_DESIGNATED_INITIALIZER\",\"NS_UNAVAILABLE\",\"NS_REQUIRES_SUPER\",\"NS_RETURNS_INNER_POINTER\",\"NS_INLINE\",\"NS_AVAILABLE\",\"NS_DEPRECATED\",\"NS_ENUM\",\"NS_OPTIONS\",\"NS_SWIFT_UNAVAILABLE\",\"NS_ASSUME_NONNULL_BEGIN\",\"NS_ASSUME_NONNULL_END\",\"NS_REFINED_FOR_SWIFT\",\"NS_SWIFT_NAME\",\"NS_SWIFT_NOTHROW\",\"NS_DURING\",\"NS_HANDLER\",\"NS_ENDHANDLER\",\"NS_VALUERETURN\",\"NS_VOIDRETURN\"], literal:[\"false\",\"true\",\"FALSE\",\"TRUE\",\"nil\",\"YES\",\"NO\",\"NULL\"], built_in:[\"BOOL\",\"dispatch_once_t\",\"dispatch_queue_t\",\"dispatch_sync\",\"dispatch_async\",\"dispatch_once\"] },illegal:\"{ const r=\"\\\\1\"===i?i:n.concat(i,a) ;return n.concat(n.concat(\"(?:\",e,\")\"),a,/(?:\\\\.|[^\\\\\\/])*?/,r,/(?:\\\\.|[^\\\\\\/])*?/,i,t) },d=(e,a,i)=>n.concat(n.concat(\"(?:\",e,\")\"),a,/(?:\\\\.|[^\\\\\\/])*?/,i,t),g=[s,e.HASH_COMMENT_MODE,e.COMMENT(/^=\\w/,/=cut/,{ endsWithParent:!0}),r,{className:\"string\",contains:o,variants:[{ begin:\"q[qwxr]?\\\\s*\\\\(\",end:\"\\\\)\",relevance:5},{begin:\"q[qwxr]?\\\\s*\\\\[\", end:\"\\\\]\",relevance:5},{begin:\"q[qwxr]?\\\\s*\\\\{\",end:\"\\\\}\",relevance:5},{ begin:\"q[qwxr]?\\\\s*\\\\|\",end:\"\\\\|\",relevance:5},{begin:\"q[qwxr]?\\\\s*\", relevance:5},{begin:\"qw\\\\s+q\",end:\"q\",relevance:5},{begin:\"'\",end:\"'\", contains:[e.BACKSLASH_ESCAPE]},{begin:'\"',end:'\"'},{begin:\"`\",end:\"`\", contains:[e.BACKSLASH_ESCAPE]},{begin:/\\{\\w+\\}/,relevance:0},{ begin:\"-?\\\\w+\\\\s*=>\",relevance:0}]},{className:\"number\", begin:\"(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b\", relevance:0},{ begin:\"(\\\\/\\\\/|\"+e.RE_STARTERS_RE+\"|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*\", keywords:\"split return print reverse grep\",relevance:0, contains:[e.HASH_COMMENT_MODE,{className:\"regexp\",variants:[{ begin:c(\"s|tr|y\",n.either(...l,{capture:!0}))},{begin:c(\"s|tr|y\",\"\\\\(\",\"\\\\)\")},{ begin:c(\"s|tr|y\",\"\\\\[\",\"\\\\]\")},{begin:c(\"s|tr|y\",\"\\\\{\",\"\\\\}\")}],relevance:2},{ className:\"regexp\",variants:[{begin:/(m|qr)\\/\\//,relevance:0},{ begin:d(\"(?:m|qr)?\",/\\//,/\\//)},{begin:d(\"m|qr\",n.either(...l,{capture:!0 }),/\\1/)},{begin:d(\"m|qr\",/\\(/,/\\)/)},{begin:d(\"m|qr\",/\\[/,/\\]/)},{ begin:d(\"m|qr\",/\\{/,/\\}/)}]}]},{className:\"function\",beginKeywords:\"sub\", end:\"(\\\\s*\\\\(.*?\\\\))?[;{]\",excludeEnd:!0,relevance:5,contains:[e.TITLE_MODE]},{ begin:\"-\\\\w\\\\b\",relevance:0},{begin:\"^__DATA__$\",end:\"^__END__$\", subLanguage:\"mojolicious\",contains:[{begin:\"^@@.*\",end:\"$\",className:\"comment\"}] }];return i.contains=g,r.contains=g,{name:\"Perl\",aliases:[\"pl\",\"pm\"],keywords:a, contains:g}},grmr_php:e=>{ const n=e.regex,t=\"[a-zA-Z0-9_\\x7f-\\xff]*(?![A-Za-z0-9])(?![$]))\",a=n.concat(\"([a-zA-Z_\\\\x7f-\\\\xff]\",t),i=n.concat(\"([A-Z]\",t),r={ scope:\"variable\",match:\"\\\\$+\"+a},s={scope:\"subst\",variants:[{begin:/\\$\\w+/},{ begin:/\\{\\$/,end:/\\}/}]},o=e.inherit(e.APOS_STRING_MODE,{illegal:null }),l=\"[ \\t\\n]\",c={scope:\"string\",variants:[e.inherit(e.QUOTE_STRING_MODE,{ illegal:null,contains:e.QUOTE_STRING_MODE.contains.concat(s) }),o,e.END_SAME_AS_BEGIN({begin:/e.map((e=>e.replace(/\\|\\d+$/,\"\"))),p={variants:[{ match:[/new/,n.concat(l,\"+\"),n.concat(\"(?!\",m(u).join(\"\\\\b|\"),\"\\\\b)\"),n.concat(/\\\\?/,a),n.concat(l,\"*\",/\\(/)], scope:{1:\"keyword\",4:\"title.class\"}}]},_={relevance:0, match:[/\\b/,n.concat(\"(?!fn\\\\b|function\\\\b|\",m(g).join(\"\\\\b|\"),\"|\",m(u).join(\"\\\\b|\"),\"\\\\b)\"),a,n.concat(l,\"*\"),n.lookahead(/(?=\\()/)], scope:{3:\"title.function.invoke\"}},h=n.concat(a,\"\\\\b(?!\\\\()\"),f={variants:[{ match:[n.concat(/::/,n.lookahead(/(?!class\\b)/)),h],scope:{2:\"variable.constant\" }},{match:[/::/,/class/],scope:{2:\"variable.language\"}},{ match:[i,n.concat(\"::\",n.lookahead(/(?!class\\b)/))],scope:{1:\"title.class\"}},{ match:[i,/::/,/class/],scope:{1:\"title.class\",3:\"variable.language\"}}]};return{ case_insensitive:!1,keywords:b, contains:[e.HASH_COMMENT_MODE,e.COMMENT(\"//\",\"$\"),e.COMMENT(\"/\\\\*\",\"\\\\*/\",{ contains:[{scope:\"doctag\",match:\"@[A-Za-z]+\"}]}),{match:/__halt_compiler\\(\\);/, keywords:\"__halt_compiler\",starts:{scope:\"comment\",end:e.MATCH_NOTHING_RE, contains:[{match:/\\?>/,scope:\"meta\",endsParent:!0}]}},{scope:\"meta\",variants:[{ begin:/|(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>)(?=[ ])\", starts:{end:\"$\",contains:u}}];return s.unshift(r),{name:\"Ruby\", aliases:[\"rb\",\"gemspec\",\"podspec\",\"thor\",\"irb\"],keywords:a,illegal:/\\/\\*/, contains:[e.SHEBANG({binary:\"ruby\"})].concat(b).concat(s).concat(u)}}, grmr_rust:e=>{const n=e.regex,t={className:\"title.function.invoke\",relevance:0, begin:n.concat(/\\b/,/(?!let\\b)/,e.IDENT_RE,n.lookahead(/\\s*\\(/)) },a=\"([ui](8|16|32|64|128|size)|f(32|64))?\",i=[\"drop \",\"Copy\",\"Send\",\"Sized\",\"Sync\",\"Drop\",\"Fn\",\"FnMut\",\"FnOnce\",\"ToOwned\",\"Clone\",\"Debug\",\"PartialEq\",\"PartialOrd\",\"Eq\",\"Ord\",\"AsRef\",\"AsMut\",\"Into\",\"From\",\"Default\",\"Iterator\",\"Extend\",\"IntoIterator\",\"DoubleEndedIterator\",\"ExactSizeIterator\",\"SliceConcatExt\",\"ToString\",\"assert!\",\"assert_eq!\",\"bitflags!\",\"bytes!\",\"cfg!\",\"col!\",\"concat!\",\"concat_idents!\",\"debug_assert!\",\"debug_assert_eq!\",\"env!\",\"panic!\",\"file!\",\"format!\",\"format_args!\",\"include_bin!\",\"include_str!\",\"line!\",\"local_data_key!\",\"module_path!\",\"option_env!\",\"print!\",\"println!\",\"select!\",\"stringify!\",\"try!\",\"unimplemented!\",\"unreachable!\",\"vec!\",\"write!\",\"writeln!\",\"macro_rules!\",\"assert_ne!\",\"debug_assert_ne!\"] ;return{name:\"Rust\",aliases:[\"rs\"],keywords:{$pattern:e.IDENT_RE+\"!?\", type:[\"i8\",\"i16\",\"i32\",\"i64\",\"i128\",\"isize\",\"u8\",\"u16\",\"u32\",\"u64\",\"u128\",\"usize\",\"f32\",\"f64\",\"str\",\"char\",\"bool\",\"Box\",\"Option\",\"Result\",\"String\",\"Vec\"], keyword:[\"abstract\",\"as\",\"async\",\"await\",\"become\",\"box\",\"break\",\"const\",\"continue\",\"crate\",\"do\",\"dyn\",\"else\",\"enum\",\"extern\",\"false\",\"final\",\"fn\",\"for\",\"if\",\"impl\",\"in\",\"let\",\"loop\",\"macro\",\"match\",\"mod\",\"move\",\"mut\",\"override\",\"priv\",\"pub\",\"ref\",\"return\",\"self\",\"Self\",\"static\",\"struct\",\"super\",\"trait\",\"true\",\"try\",\"type\",\"typeof\",\"unsafe\",\"unsized\",\"use\",\"virtual\",\"where\",\"while\",\"yield\"], literal:[\"true\",\"false\",\"Some\",\"None\",\"Ok\",\"Err\"],built_in:i},illegal:\"{ const n=Ne(e),t=[\"any\",\"void\",\"number\",\"boolean\",\"string\",\"object\",\"never\",\"enum\"],a={ beginKeywords:\"namespace\",end:/\\{/,excludeEnd:!0, contains:[n.exports.CLASS_REFERENCE]},i={beginKeywords:\"interface\",end:/\\{/, excludeEnd:!0,keywords:{keyword:\"interface extends\",built_in:t}, contains:[n.exports.CLASS_REFERENCE]},r={$pattern:be, keyword:me.concat([\"type\",\"namespace\",\"typedef\",\"interface\",\"public\",\"private\",\"protected\",\"implements\",\"declare\",\"abstract\",\"readonly\"]), literal:pe,built_in:ye.concat(t),\"variable.language\":Ee},s={className:\"meta\", begin:\"@[A-Za-z$_][0-9A-Za-z$_]*\"},o=(e,n,t)=>{ const a=e.contains.findIndex((e=>e.label===n)) ;if(-1===a)throw Error(\"can not find mode to replace\");e.contains.splice(a,1,t)} ;return Object.assign(n.keywords,r), n.exports.PARAMS_CONTAINS.push(s),n.contains=n.contains.concat([s,a,i]), o(n,\"shebang\",e.SHEBANG()),o(n,\"use_strict\",{className:\"meta\",relevance:10, begin:/^\\s*['\"]use strict['\"]/ }),n.contains.find((e=>\"func.def\"===e.label)).relevance=0,Object.assign(n,{ name:\"TypeScript\",aliases:[\"ts\",\"tsx\"]}),n},grmr_vbnet:e=>{ const n=e.regex,t=/\\d{1,2}\\/\\d{1,2}\\/\\d{4}/,a=/\\d{4}-\\d{1,2}-\\d{1,2}/,i=/(\\d|1[012])(:\\d+){0,2} *(AM|PM)/,r=/\\d{1,2}(:\\d{1,2}){1,2}/,s={ className:\"literal\",variants:[{begin:n.concat(/# */,n.either(a,t),/ *#/)},{ begin:n.concat(/# */,r,/ *#/)},{begin:n.concat(/# */,i,/ *#/)},{ begin:n.concat(/# */,n.either(a,t),/ +/,n.either(i,r),/ *#/)}] },o=e.COMMENT(/'''/,/$/,{contains:[{className:\"doctag\",begin://}] }),l=e.COMMENT(null,/$/,{variants:[{begin:/'/},{begin:/([\\t ]|^)REM(?=\\s)/}]}) ;return{name:\"Visual Basic .NET\",aliases:[\"vb\"],case_insensitive:!0, classNameAliases:{label:\"symbol\"},keywords:{ keyword:\"addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield\", built_in:\"addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort\", type:\"boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort\", literal:\"true false nothing\"}, illegal:\"//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ \",contains:[{ className:\"string\",begin:/\"(\"\"|[^/n])\"C\\b/},{className:\"string\",begin:/\"/, end:/\"/,illegal:/\\n/,contains:[{begin:/\"\"/}]},s,{className:\"number\",relevance:0, variants:[{begin:/\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/ },{begin:/\\b\\d[\\d_]*((U?[SIL])|[%&])?/},{begin:/&H[\\dA-F_]+((U?[SIL])|[%&])?/},{ begin:/&O[0-7_]+((U?[SIL])|[%&])?/},{begin:/&B[01_]+((U?[SIL])|[%&])?/}]},{ className:\"label\",begin:/^\\w+:/},o,l,{className:\"meta\", begin:/[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/, end:/$/,keywords:{ keyword:\"const disable else elseif enable end externalsource if region then\"}, contains:[l]}]}},grmr_yaml:e=>{ const n=\"true false yes no null\",t=\"[\\\\w#;/?:@&=+$,.~*'()[\\\\]]+\",a={ className:\"string\",relevance:0,variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/ },{begin:/\\S+/}],contains:[e.BACKSLASH_ESCAPE,{className:\"template-variable\", variants:[{begin:/\\{\\{/,end:/\\}\\}/},{begin:/%\\{/,end:/\\}/}]}]},i=e.inherit(a,{ variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/[^\\s,{}[\\]]+/}]}),r={ end:\",\",endsWithParent:!0,excludeEnd:!0,keywords:n,relevance:0},s={begin:/\\{/, end:/\\}/,contains:[r],illegal:\"\\\\n\",relevance:0},o={begin:\"\\\\[\",end:\"\\\\]\", contains:[r],illegal:\"\\\\n\",relevance:0},l=[{className:\"attr\",variants:[{ begin:\"\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)\"},{begin:'\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)'},{ begin:\"'\\\\w[\\\\w :\\\\/.-]*':(?=[ \\t]|$)\"}]},{className:\"meta\",begin:\"^---\\\\s*$\", relevance:10},{className:\"string\", begin:\"[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*\"},{ begin:\"\",subLanguage:\"ruby\",excludeBegin:!0,excludeEnd:!0, relevance:0},{className:\"type\",begin:\"!\\\\w+!\"+t},{className:\"type\", begin:\"!\"},{className:\"type\",begin:\"!\"+t},{className:\"type\",begin:\"!!\"+t },{className:\"meta\",begin:\"&\"+e.UNDERSCORE_IDENT_RE+\"$\"},{className:\"meta\", begin:\"\\\\*\"+e.UNDERSCORE_IDENT_RE+\"$\"},{className:\"bullet\",begin:\"-(?=[ ]|$)\", relevance:0},e.HASH_COMMENT_MODE,{beginKeywords:n,keywords:{literal:n}},{ className:\"number\", begin:\"\\\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\\\.[0-9]*)?([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\\\b\" },{className:\"number\",begin:e.C_NUMBER_RE+\"\\\\b\",relevance:0},s,o,a],c=[...l] ;return c.pop(),c.push(i),r.contains=c,{name:\"YAML\",case_insensitive:!0, aliases:[\"yml\"],contains:l}}});const je=ne;for(const e of Object.keys(Ue)){ const n=e.replace(\"grmr_\",\"\").replace(\"_\",\"-\");je.registerLanguage(n,Ue[e])} return je}() ;\"object\"==typeof exports&&\"undefined\"!=typeof module&&(module.exports=hljs);"}],"posts":[{"title":"博客测试","slug":"博客测试","date":"2025-08-28T16:09:54.000Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"2025/08/28/博客测试/","permalink":"https://leeway2zc.top/2025/08/28/%E5%8D%9A%E5%AE%A2%E6%B5%8B%E8%AF%95/","excerpt":"","text":"111 测试思维导图导出的svg图片是否能正常显示","categories":[],"tags":[]},{"title":"博客升级","slug":"博客升级","date":"2025-08-21T08:40:34.000Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"2025/08/21/博客升级/","permalink":"https://leeway2zc.top/2025/08/21/%E5%8D%9A%E5%AE%A2%E5%8D%87%E7%BA%A7/","excerpt":"","text":"现在的博客还不太完善，有很多不满意的地方，例如： 有个多余的…more在文章下面 显示不了访问次数 更新后日期没变动 文章下没有标签(如果解决不了，可以尝试更换主题为Indigo) 评论区有Code 403: 访问被API域名白名单拒绝，请检查你的安全域名设置 目录显示不全 页脚不显示总访问数和访客数 页眉没有图片","categories":[],"tags":[]},{"title":"C++开发学习笔记","slug":"C++开发学习笔记","date":"2025-08-12T22:12:50.000Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"2025/08/12/C++开发学习笔记/","permalink":"https://leeway2zc.top/2025/08/12/C++%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"C/C++全栈开发学习笔记 1.1.1 随处可见的红黑树 学习目标： 能使用C语言实现红黑树 能记住红黑树的代码实现 红黑树的性质： 每个结点是红的或者黑的 根结点是黑的 每个叶子结点是黑的 如果一个结点是红的，则它的两个儿子都是黑的（不存在相邻红色） 对每个结点，从该结点到其子孙结点的所有路径包含相同数目的黑节点（即黑高度相同） 最长路径长度不超过最短路径长度的2倍（2n-1，一条黑红黑红，一条全黑） 红黑树的优点：插入和删除的时间复杂度优于平衡二叉搜索树，又没有二叉搜索树可能退化为链表的Bug rbTree查询元素：O(log(N)) rbTree插入元素：插入最多2次旋转，加上查询的时间O(log(N))，插入的复杂度O(log(N)) rbTree删除元素：删除最多需要3次旋转，加上查询的时间，删除的复杂度O(log(N)) 红黑树的应用场景 c++ stl map,set（红黑树的封装） 进程调度cfs（用红黑树存储进程的集合，把调度的时间作为key，那么树的左下角时间就是最小的） 内存管理（每次使用malloc的时候都会分配一块小内存出来，那么这么块就是用红黑树来存，如何表述一段内存块呢，用开始地址+长度来表示，所以key-&gt;开始地址，val-&gt;大小） epoll中使用红黑树管理socketfd nginx中使用红黑树管理定时器，中序遍历第一个就是最小的定时器 红黑树结点的定义12345678910111213typedef struct _rbtree_node &#123; //rbtree unsigned char color; // #define RED 0 define BLACK 1 struct _rbtree_node *parent; struct _rbtree_node *left; struct _rbtree_node *right; KEY_TYPE key; // 例如 typedef int KEY_TYPE // value // value 的类型也是自己定义 //&#125; rbtree_node; 红黑树的定义123456struct rbtree &#123; // 只需要一个 root 根结点 rbtree_node *root; // 红黑树中空结点的类型也是红黑树结点，也有left、right、parent指针 rbtree_node *nil; // NULL &#125;; 红黑树的四个难点：删除、插入、调整、左旋右旋 红黑树结点的左旋与右旋 红黑树的左旋操作：左旋就是向左倾斜，记住要操作三条线，六个指针，分别是: x-&gt;right &#x3D; y-&gt;left | y-&gt;left-&gt;parent &#x3D; x y-&gt;parent &#x3D; x-&gt;parent | x-&gt;parent-&gt;left&#x2F;right &#x3D; y x-&gt;parent-&gt;left&#x2F;right &#x3D; y | y-&gt;left-&gt;parent &#x3D; x 1234567891011121314151617181920212223void rbtree_left_rotate(struct rbtree *T, rbtree_node *x) &#123; // 左旋只需要一个结点就能完成，引入 T 是为了判断是否为根结点或者叶子结点 if(x == T-&gt;nil) return; // 直接读取左旋需要的右节点 rbtree_node *y = x-&gt;right; // x到y的那条线 x-&gt;right = y-&gt;left; if(y-&gt;left != T-&gt;nil) &#123; y-&gt;left-&gt;parent = x; &#125; // x上面那条线 y-&gt;parent = x-&gt;parent; if(x-&gt;parent == T-&gt;nil) &#123; // 如果x是根节点 T-&gt;root = y; &#125; else if(x == x-&gt;parent-&gt;left) &#123; // 否则判断x是x父节点的左结点还是右节点 x-&gt;parent-&gt;left = y; &#125; else &#123; x-&gt;parent-&gt;right = y; &#125; // y到b那条线 y-&gt;left = x; x-&gt;parent = y;&#125; 红黑树的右旋操作：右旋就是向右倾斜，由于左旋和右旋是完全对称的，因此在代码上可以直接替换来实现右旋 123456789101112131415161718192021222324// x --&gt; y, y --&gt;x // left --&gt; right, right --&gt; leftvoid rbtree_right_rotate(struct rbtree *T, rbtree_node *y) &#123; // NULL --&gt; T-&gt;nil if (y == T-&gt;nil) return ; rbtree_node *x = y-&gt;left; // y到x的那条线 y-&gt;left = x-&gt;right; if (x-&gt;right != T-&gt;nil) &#123; x-&gt;right-&gt;parent = y; &#125; // y上面那条线 x-&gt;parent = y-&gt;parent; if (y-&gt;parent == T-&gt;nil) &#123; T-&gt;root = x; &#125; else if (y == y-&gt;parent-&gt;right) &#123; y-&gt;parent-&gt;right = x; &#125; else &#123; y-&gt;parent-&gt;left = x; &#125; // x到b那条线 x-&gt;right = y; y-&gt;parent = x;&#125; 注意红黑树的左旋右旋代码执行顺序 红黑树插入结点后的调整 当插入一个结点时，有时要对红黑树进行调整，包括变色和左旋右旋以及回溯这三个操作 CASE 1：父节点是爷结点的左子树 且 叔结点是红色的 无需旋转，只需要将父节点和叔结点变黑，将爷结点变红，然后令z指向爷结点即回溯调整 CASE 2：父节点是叶结点的左子树的情况 且 叔结点是红色 以及 当前结点是右孩子 此时需要先旋转变为第三种情况，然后按照第三种情况处理，即让当前结点指向其父结点并进行一次左旋 CASE 3：父节点是祖父结点的左子树 且 叔节点是黑色的 以及 当前结点是左孩子 此时需要先将当前结点的父节点变为黑色，以及让爷结点变为红色，然后让爷结点进行一次右旋 12345678910111213141516171819202122232425262728293031323334353637383940414243void rbtree_insert_fixup(rbtree *T, rbtree_node *z) &#123; // z是插入的结点，y是z的父节点，y是z的叔结点 //只有当父节点是红的时需要调整，因为插入的节点必须为红，两个红色结点不能相邻 while (z-&gt;parent-&gt;color == RED) &#123; if (z-&gt;parent == z-&gt;parent-&gt;parent-&gt;left) &#123; rbtree_node *y = z-&gt;parent-&gt;parent-&gt;right; if (y-&gt;color == RED) &#123; // 对应于CASE 1 z-&gt;parent-&gt;color = BLACK; y-&gt;color = BLACK; z-&gt;parent-&gt;parent-&gt;color = RED; // 回溯判断调整后是否满足红黑树条件 z = z-&gt;parent-&gt;parent; // z --&gt; RED &#125; else &#123; if (z == z-&gt;parent-&gt;right) &#123; // 对应于CASE 2 z = z-&gt;parent; rbtree_left_rotate(T, z); &#125; // 对应于CASE 3 z-&gt;parent-&gt;color = BLACK; z-&gt;parent-&gt;parent-&gt;color = RED; rbtree_right_rotate(T, z-&gt;parent-&gt;parent); &#125; &#125; else &#123; // 而对于父节点是爷结点右子树的情况，只需要镜像替换即可 // left -&gt; right, right -&gt; left rbtree_node *y = z-&gt;parent-&gt;parent-&gt;left; if (y-&gt;color == RED) &#123; z-&gt;parent-&gt;color = BLACK; y-&gt;color = BLACK; z-&gt;parent-&gt;parent-&gt;color = RED; z = z-&gt;parent-&gt;parent; // z --&gt; RED &#125; else &#123; if (z == z-&gt;parent-&gt;left) &#123; z = z-&gt;parent; rbtree_right_rotate(T, z); &#125; z-&gt;parent-&gt;color = BLACK; z-&gt;parent-&gt;parent-&gt;color = RED; rbtree_left_rotate(T, z-&gt;parent-&gt;parent); &#125; &#125; &#125; T-&gt;root-&gt;color = BLACK;&#125; 红黑树插入结点 插入其实很简单，不过是判断大小找到合适的插入位置 1234567891011121314151617181920212223242526void rbtree_insert(rbtree *T, rbtree_node *z) &#123; rbtree_node *y = T-&gt;nil; rbtree_node *x = T-&gt;root; while (x != T-&gt;nil) &#123; y = x; if (z-&gt;key &lt; x-&gt;key) &#123; x = x-&gt;left; &#125; else if (z-&gt;key &gt; x-&gt;key) &#123; x = x-&gt;right; &#125; else &#123; //Exist return ; &#125; &#125; z-&gt;parent = y; if (y == T-&gt;nil) &#123; T-&gt;root = z; &#125; else if (z-&gt;key &lt; y-&gt;key) &#123; y-&gt;left = z; &#125; else &#123; y-&gt;right = z; &#125; z-&gt;left = T-&gt;nil; z-&gt;right = T-&gt;nil; z-&gt;color = RED; rbtree_insert_fixup(T, z);&#125; 红黑树删除结点 待办","categories":[],"tags":[]},{"title":"FIO 测试学习文档","slug":"FIO-测试学习文档","date":"2025-08-12T17:35:35.000Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"2025/08/12/FIO-测试学习文档/","permalink":"https://leeway2zc.top/2025/08/12/FIO-%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E6%96%87%E6%A1%A3/","excerpt":"","text":"FIO测试 学习文档 Job File 配置文件执行 FIO 测试 通过编写一个ini格式的Job File来执行FIO测试，使用fio jobfile.fio完成测试 [global] 常用参数以及说明 参数名 取值 作用说明 iodepth_batch_complete 8 io请求过来后，能retrieve获得的最多请求数，即当io请求提交后，取出处理的io请求数 iodepth_batch 16 io队列请求丢过来后，积攒到16个io请求后立即提交，一般是iodepth的值 ioengine libaio 使用 Linux 的异步 I&#x2F;O 引擎（libaio），适合测试真实负载环境 rw read I&#x2F;O 模式为顺序读（sequential read），用于测试读取吞吐能力，除了read还可以取值write,rw,randread,randwrite,randrw bs 1M 每次 I&#x2F;O 操作的块大小为 1MB，影响数据吞吐与 IOPS size 10G 每个 job 的总 I&#x2F;O 数据量上限为 10GB（如果不是基于时间模式才生效） time_based 1 启用基于时间的测试模式，不以数据总量决定测试结束 runtime 30 测试持续时间为 30 秒 norandommap 1 禁用随机 I&#x2F;O 映射表，减少运行时开销，每个块可能多次读写可能不使用 randrepeat 1 使用固定的随机种子，每次运行能复现相同的随机序列 group_reporting 1 合并组内 job 的测试结果，统一输出 iodepth 8 设置每个 job 的 I&#x2F;O 队列深度为 8，控制并发请求数量，线程一次提出8个I&#x2F;O请求 direct 1 启用 Direct I&#x2F;O，跳过文件系统缓存，直接访问存储设备 numjobs 10 启动 10 个并发 job，提高测试负载并模拟多线程环境 thread 1 使用线程创建job，适合numjobs值很大的情况，模拟多应用高并发场景，但要求测试复杂度较低，需要处理同步问题，容易崩溃 ramp_time 30 跑每个job之前进行的预热时间 [file] 常用参数以及说明 参数名 取值 作用说明 filename /mnt/glfs/file0 指定测试文件的路径，这里是挂载在 /mnt/glfs/ 下的一个文件，通常为分布式文件系统路径 命令行格式参数与说明 通过命令行参数执行 FIO 测试，便于与shell脚本结合使用 命令行参数含义如下： --filename=...：测试设备，这里是多个 NVMe 磁盘。 --direct=1：绕过文件系统缓存，直接 I&#x2F;O。 --norandommap：防止随机访问映射（提高随机性）。 --rw=$&#123;k&#125;：I&#x2F;O 模式，传入变量 k，如 read、write。 --ioengine=libaio：使用异步 I&#x2F;O 引擎。 --size=10G：每个 job 的 I&#x2F;O 数据大小。 --iodepth=8：每个 job 的 I&#x2F;O 队列深度。 --bs=$&#123;i&#125;：块大小，传入变量 i。 --group_reporting：报告时合并所有 job 的结果。 --name=test：任务名。 --numjobs=$&#123;j&#125;：并发 job 数量。 --runtime=$&#123;test_time&#125;：测试时间（单位为秒），变量 test_time 应该事先定义。 --output=$&#123;result_file&#125;：将结果输出到指定日志文件。 fio 结果解读1fio -filename=/dev/vdb -direct=1 -iodepth 32 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=16k -size=2G -numjobs=10 -runtime=60 -group_reporting -name=testfio 12345678910111213141516171819202122232425262728293031323334353637383940414243444546testfio: (g=0): rw=randrw, bs=(R) 16.0KiB-16.0KiB, (W) 16.0KiB-16.0KiB, (T) 16.0KiB-16.0KiB, ioengine=libaio, iodepth=32...fio-3.7Starting 10 threadsJobs: 8 (f=8): [m(4),_(1),m(3),_(1),m(1)][91.9%][r=677MiB/s,w=291MiB/s][r=43.4k,w=18.6k IOPS][eta 00m:03s]testfio: (groupid=0, jobs=10): err= 0: pid=3335: Thu Sep 24 04:25:36 2020 read: IOPS=26.6k, BW=416MiB/s (436MB/s)(13.0GiB/34469msec) slat (usec): min=2, max=375533, avg=40.79, stdev=1058.36 clat (usec): min=65, max=455661, avg=8296.62, stdev=12218.78 lat (usec): min=76, max=455669, avg=8338.53, stdev=12297.28 clat percentiles (usec): | 1.00th=[ 955], 5.00th=[ 1745], 10.00th=[ 2245], 20.00th=[ 2868], | 30.00th=[ 3556], 40.00th=[ 4228], 50.00th=[ 4948], 60.00th=[ 5735], | 70.00th=[ 7177], 80.00th=[ 10159], 90.00th=[ 17957], 95.00th=[ 26608], | 99.00th=[ 51643], 99.50th=[ 63177], 99.90th=[147850], 99.95th=[189793], | 99.99th=[287310] bw ( KiB/s): min= 768, max=128736, per=9.86%, avg=41984.49, stdev=31169.50, samples=678 iops : min= 48, max= 8046, avg=2623.95, stdev=1948.09, samples=678 write: IOPS=11.4k, BW=178MiB/s (187MB/s)(6149MiB/34469msec) slat (usec): min=2, max=397853, avg=44.61, stdev=1202.15 clat (usec): min=135, max=455595, avg=8322.44, stdev=12370.30 lat (usec): min=148, max=455605, avg=8368.17, stdev=12458.54 clat percentiles (usec): | 1.00th=[ 947], 5.00th=[ 1762], 10.00th=[ 2245], 20.00th=[ 2868], | 30.00th=[ 3556], 40.00th=[ 4228], 50.00th=[ 4948], 60.00th=[ 5735], | 70.00th=[ 7177], 80.00th=[ 10290], 90.00th=[ 17957], 95.00th=[ 26870], | 99.00th=[ 51643], 99.50th=[ 62653], 99.90th=[162530], 99.95th=[193987], | 99.99th=[421528] bw ( KiB/s): min= 288, max=53120, per=9.86%, avg=18002.25, stdev=13353.37, samples=678 iops : min= 18, max= 3320, avg=1125.06, stdev=834.58, samples=678 lat (usec) : 100=0.01%, 250=0.01%, 500=0.06%, 750=0.45%, 1000=0.62% lat (msec) : 2=6.00%, 4=30.00%, 10=42.44%, 20=12.12%, 50=7.23% lat (msec) : 100=0.88%, 250=0.18%, 500=0.02% cpu : usr=1.74%, sys=3.50%, ctx=47684, majf=0, minf=10 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=100.0%, &gt;=64=0.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.1%, 64=0.0%, &gt;=64=0.0% issued rwts: total=917210,393510,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=32Run status group 0 (all jobs): READ: bw=416MiB/s (436MB/s), 416MiB/s-416MiB/s (436MB/s-436MB/s), io=13.0GiB (15.0GB), run=34469-34469msec WRITE: bw=178MiB/s (187MB/s), 178MiB/s-178MiB/s (187MB/s-187MB/s), io=6149MiB (6447MB), run=34469-34469msecDisk stats (read/write): vdb: ios=914415/392173, merge=0/0, ticks=5986235/2577115, in_queue=7910956, util=65.39% IOPS: 每秒的输入输出量(或读写次数)，是衡量磁盘性能的主要指标之一； Bw: 带宽，带宽是指平均每秒读写的数据量。在同样的延时指标下，增加并发可以提高吞吐量。 存储性能的好坏，需要IOPS、延迟、带宽三者结合来看 123slat (usec): min=2, max=397853, avg=44.61, stdev=1202.15clat (usec): min=135, max=455595, avg=8322.44, stdev=12370.30lat (usec): min=148, max=455605, avg=8368.17, stdev=12458.54 I&#x2F;O延迟包括三种：slat，clat，lat：关系是 lat &#x3D; slat + clat； slat 表示fio submit某个I&#x2F;O的延迟； clat 表示fio complete某个I&#x2F;O的延迟； lat 表示从fio将请求提交给内核，再到内核完成这个I&#x2F;O为止所需要的时间； 1234lat (usec) : 100=0.01%, 250=0.01%, 500=0.06%, 750=0.45%, 1000=0.62%lat (msec) : 2=6.00%, 4=30.00%, 10=42.44%, 20=12.12%, 50=7.23%lat (msec) : 100=0.88%, 250=0.18%, 500=0.02% 这组数据表明lat(latency：延迟 )的分布；有0.01%的request延迟&lt;100us，有0.01%的 100us &lt; request lat &lt; 250us，有0.06%的 250us &lt; request lat &lt; 500us，以此类推； 1cpu : usr=1.74%, sys=3.50%, ctx=47684, majf=0, minf=10 usr：表示用户空间进程； sys：表示内核空间进程； 因为上下文切换导致的主要和次要页面失败的用户&#x2F;系统 CPU使用百分比。因为测试被配置的使用直接IO，因此有很少的页面失败： 1IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, &gt;=64=99.9% iodepth设置用来控制在任何时间有多少IO分发给系统。这完全是应用方面的，意味着它和设备的IO队列做不同的事情，iodepth设置为1因此IO深度在100%的时间里一直是一个1； 123Run status group 0 (all jobs): READ: bw=416MiB/s (436MB/s), 416MiB/s-416MiB/s (436MB/s-436MB/s), io=13.0GiB (15.0GB), run=34469-34469msec WRITE: bw=178MiB/s (187MB/s), 178MiB/s-178MiB/s (187MB/s-187MB/s), io=6149MiB (6447MB), run=34469-34469msec bw&#x3D;这组进程的总带宽，每个线程的带宽（设置了numjobs&gt;1这里会很明显）； io&#x3D;这组总io大小； 线程的最小和最大时间； 12Disk stats (read/write): vdb: ios=914415/392173, merge=0/0, ticks=5986235/2577115, in_queue=7910956, util=65.39% ios：读&#x2F;写 I&#x2F;O 次数 merge：合并的请求数 ticks：花在 I&#x2F;O 上的时间（ms） in_queue：请求在队列里的时间（ms） util：磁盘利用率（100% 说明磁盘一直在忙） 四个关键参数bw（带宽） 顺序 I&#x2F;O 时：带宽是核心指标（HPC 大文件通常看 GB&#x2F;s） 随机 I&#x2F;O 时：带宽 + IOPS 结合看 判断合理性 → 和硬件理论上限比，例如 NVMe 单盘顺序写可达 3.5GB&#x2F;s，集群可叠加。 iops 小块随机 I&#x2F;O 的核心指标 HPC 元数据测试或数据库场景才特别看这个 和理论值比：NVMe 可到 700k IOPS（4KB 随机读），集群按并行度成倍增加。 延迟（slat &#x2F; clat &#x2F; lat） slat &#x3D; 提交延迟（fio 发出请求到内核调度的时间） clat &#x3D; 完成延迟（存储设备处理时间） lat &#x3D; 总延迟（两者之和） 重点看 平均值 和 高百分位数（如 99.99th） 判断合理性 → HPC 顺序 I&#x2F;O 延迟在 ms 级是正常，小块随机 NVMe 应在 100µs~1ms 内。 百分位延迟 HPC 场景需要看尾延迟（tail latency），因为并行任务很怕极端慢请求。 如果 99.99% 延迟明显高于平均值很多，说明系统在高并发下有抖动问题。 影响四个关键参数的主要 fio 参数 指标 关键影响参数 说明 带宽 (bw) bs（块大小）、iodepth、numjobs、rw（读写模式） 大块顺序 I&#x2F;O 通过较大 bs 和 iodepth 来提升吞吐；numjobs 多进程并发可叠加带宽。 IOPS bs、iodepth、numjobs、rw 小块随机 I&#x2F;O 依赖更深队列 (iodepth) 和更多并发 (numjobs) 才能达到高 IOPS。 延迟 (slat, clat, lat) iodepth、rw, ioengine iodepth 增大会带来排队延迟；ioengine（如 libaio vs sync）影响请求提交和完成方式，影响延迟。 百分位延迟 同上 + iodepth_batch_complete, rate_iops, rate 控制批量完成和速率限制参数会影响尾延迟表现，调节请求节奏，避免峰值拥塞。 HPC 分布式存储系统中影响这四指标的因素硬件相关 存储介质类型：NVMe SSD、HDD、持久内存（PMEM）等带宽和延迟天差地别。 网络带宽和延迟：分布式存储中，网络往往成为瓶颈，影响总体带宽和延迟。 缓存策略：客户端缓存、服务器端缓存会降低实际 I&#x2F;O 延迟，提高带宽。 软件&#x2F;协议相关 并行访问算法： 文件分条（striping）、条带大小（stripe size） 数据复制策略（副本数、纠删码参数） 并发调度策略（请求合并、重排） I&#x2F;O 协议栈： NFS, SMB, Lustre, BeeGFS 等协议处理效率和并发能力差异 TCP&#x2F;IP 堆栈优化，RDMA 等低延迟传输方式 负载均衡： 多客户端多请求分配到不同存储节点，均衡访问才能保持带宽和低延迟。 总结 指标 HPC存储影响因素（示例） 典型调优建议 bw 硬件带宽、网络带宽、并发数、条带大小 大块顺序读写，提升 bs、iodepth、numjobs iops NVMe能力、并行请求数、负载均衡 增加随机小块 iodepth 和 numjobs，用异步 ioengine 延迟 协议栈效率、存储介质响应时间、队列长度 适当控制 iodepth，避免队列过深导致排队延迟 尾延迟 突发负载、缓存失效、网络抖动 使用 iodepth_batch_complete 等批量参数，限速避免过载 读写混合测试（randrw）的具体流程举例randrw + iodepth=16 + numjobs=1： 准备阶段 fio打开目标文件 /tmp/testfile，文件大小100M。 根据bs=4k，文件被切成约 25,600 个块（100M&#x2F;4k）。 执行阶段 fio的单线程循环： 它随机选择一个块（因为是randrw，随机读写）。 根据rwmixread=70，它有70%概率选择读，30%概率选择写。 提交一个异步I&#x2F;O请求到操作系统（通过libaio）。 同时，它不会等第一个请求完成就停住，而是会继续提交请求，直到挂起的请求数达到iodepth=16。 当某个I&#x2F;O完成，线程会收到通知，然后提交下一个请求，保持挂起请求数量稳定在16左右。 总结 这样，fio的单线程模拟了一个深队列、高并发的I&#x2F;O负载。 存储设备能同时处理多个请求，提高吞吐量。 fio收集带宽、IOPS、延迟等指标，反映设备在这种负载下的表现。 示例 FIO 代码仓库 The StorPool FIO Test Suite 这个仓库提供基于FIO的块存储性能测试脚本，专为分布式存储系统（如StorPool集群）设计，支持在HPC环境中运行多节点测试。包括预定义的测试模板，适用于随机&#x2F;顺序读写基准，适合分布式块存储的性能评估。仓库中有template目录下的.fio配置文件模板。 axboe&#x2F;fio仓库（FIO官方仓库 FIO工具的官方GitHub仓库，examples&#x2F;目录下有大量通用FIO job文件示例。虽然不是专为HPC分布式存储设计，但许多配置（如SSD或NVMe测试）可以修改用于分布式环境（如在HPC集群的多节点并行运行）。例如，ssd-steady.fio适用于高性能存储基准，可结合MPI或脚本实现分布式测试。 distributed-system-analysis&#x2F;pbench仓库 pbench工具集中的FIO基准脚本，专为存储性能测试设计，支持HPC环境下的自动化测试，包括随机&#x2F;顺序工作负载和统计计算。适用于分布式系统，如在集群中测试文件系统I&#x2F;O。文档中描述了如何配置FIO参数以模拟HPC场景。 ls1intum&#x2F;storage-benchmarking仓库 使用FIO测试容器化环境中的I&#x2F;O性能，适用于分布式存储系统（如Kubernetes集群中的HPC应用）。仓库提供预定义的job配置，适合基准测试分布式存储的性能比较。","categories":[{"name":"存储测试教程","slug":"存储测试教程","permalink":"https://leeway2zc.top/categories/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"存储测试教程","slug":"存储测试教程","permalink":"https://leeway2zc.top/tags/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%E6%95%99%E7%A8%8B/"}]},{"title":"Linux内核实验笔记","slug":"Linux内核实验笔记","date":"2025-08-11T17:04:55.000Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"2025/08/11/Linux内核实验笔记/","permalink":"https://leeway2zc.top/2025/08/11/Linux%E5%86%85%E6%A0%B8%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/","excerpt":"","text":"OS2 内核编程和驱动程序开发实验 基于布加勒斯特理工大学自动控制与计算机学院计算机科学与工程系的 “操作系统2” 课程 环境配置软件配置 主机：在win10上使用oracle virtualbox创建的 ubuntu 20.04 作为上位机，用于编辑模块源代码、编译模块、将模块应用到操作系统上等 虚拟机：通过Docker配置虚拟机模拟OS内核，在ubuntu 20.04上直接使用，通过脚本运行完成内核模块代码测试 操作流程 若提示用户没有sudo权限，使用su -切换到 root 用户即可，密码是虚拟机设置镜像时自己设置的，一般就是开机密码 在ubuntu 20.04中安装Docker 12345678910111213141516171819202122232425262728# 1. 安装依赖sudo apt updatesudo apt install -y \\ ca-certificates \\ curl \\ gnupg \\ lsb-release# 2. 添加 Docker 官方 GPG 密钥sudo mkdir -p /etc/apt/keyringscurl -fsSL https://download.docker.com/linux/ubuntu/gpg | \\ sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg# 3. 添加 Docker 软件源echo \\ &quot;deb [arch=$(dpkg --print-architecture) \\ signed-by=/etc/apt/keyrings/docker.gpg] \\ https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable&quot; | \\ sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null# 4. 更新 apt 并安装 Dockersudo apt updatesudo apt install -y docker-ce docker-ce-cli containerd.io# 5. 启动并设置开机启动sudo systemctl start dockersudo systemctl enable docker 在ubuntu 20.04中安装必需软件 123sudo apt updatesudo apt install -y flex bison build-essential gcc-multilib libncurses5-dev \\qemu-system-x86 qemu-system-arm python3 minicom 创建一个脚本文件并编辑如下内容，随后运行脚本 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132#!/bin/bashif [[ $(id -u) != &quot;0&quot; ]]; then echo &quot;Please run as root (or use sudo)&quot; exit 1 ficd &quot;$(dirname &quot;$0&quot;)&quot; || exit 1#=============================================================================#================================= CONSTANTS =================================#=============================================================================RED=&#x27;\\033[0;31m&#x27;NC=&#x27;\\033[0m&#x27;DEFAULT_IMAGE_NAME=&quot;so2/so2-assignments&quot;DEFAULT_TAG=&#x27;latest&#x27;DEFAULT_REGISTRY=&#x27;gitlab.cs.pub.ro:5050&#x27;SO2_WORKSPACE=&quot;/linux/tools/labs&quot;SO2_VOLUME=&quot;SO2_DOCKER_VOLUME&quot;#=============================================================================#=================================== UTILS ===================================#=============================================================================LOG_INFO() &#123; echo -e &quot;[$(date +%FT%T)] [INFO] $1&quot;&#125;LOG_FATAL() &#123; echo -e &quot;[$(date +%FT%T)] [$&#123;RED&#125;FATAL$&#123;NC&#125;] $1&quot; exit 1&#125;#=============================================================================#=============================================================================#=============================================================================print_help() &#123; echo &quot;Usage:&quot; echo &quot;local.sh docker interactive [--privileged]&quot; echo &quot;&quot; echo &quot; --privileged - run a privileged container. This allows the use of KVM (if available)&quot; echo &quot; --allow-gui - run the docker such that it can open GUI apps&quot; echo &quot;&quot;&#125;docker_interactive() &#123; local full_image_name=&quot;$&#123;DEFAULT_REGISTRY&#125;/$&#123;DEFAULT_IMAGE_NAME&#125;:$&#123;DEFAULT_TAG&#125;&quot; local executable=&quot;/bin/bash&quot; local registry=$&#123;DEFAULT_REGISTRY&#125; while [[ $# -gt 0 ]]; do case $1 in --privileged) privileged=--privileged ;; --allow-gui) allow_gui=true ;; *) print_help exit 1 esac shift done if [[ $(docker images -q $full_image_name 2&gt; /dev/null) == &quot;&quot; ]]; then docker pull $full_image_name fi if ! docker volume inspect $SO2_VOLUME &gt;/dev/null 2&gt;&amp;1; then echo &quot;Volume $SO2_VOLUME does not exist.&quot; echo &quot;Creating it&quot; docker volume create $SO2_VOLUME local vol_mount=$(docker inspect $SO2_VOLUME | grep -i mountpoin | cut -d : -f2 | cut -d, -f1) chmod 777 -R $vol_mount fi echo &quot;The /linux directory is made persistent within the $SO2_VOLUME:&quot; docker inspect $SO2_VOLUME if $allow_gui; then # TODO: remove this after you change sdl to gtk in qemu-runqemu.sh docker run $privileged --rm -it --cap-add=NET_ADMIN --device /dev/net/tun:/dev/net/tun \\ -v $SO2_VOLUME:/linux \\ --workdir &quot;$SO2_WORKSPACE&quot; \\ &quot;$full_image_name&quot; sed &quot;s+\\$&#123;QEMU_DISPLAY:-\\&quot;sdl\\&quot;+\\$&#123;QEMU_DISPLAY:-\\&quot;gtk\\&quot;+g&quot; -i /linux/tools/labs/qemu/run-qemu.sh # wsl if cat /proc/version | grep -i microsoft &amp;&gt; /dev/null ; then export DISPLAY=&quot;$(ip r show default | awk &#x27;&#123;print $3&#125;&#x27;):0.0&quot; fi if [[ $DISPLAY == &quot;&quot; ]]; then echo &quot;Error: Something unexpected happend. The environment var DISPLAY is not set. Consider setting it with&quot; echo -e &quot;\\texport DISPLAY=&lt;dispaly&gt;&quot; exit 1 fi local xauth_var=$(echo $(xauth info | grep Auth | cut -d: -f2)) docker run --privileged --rm -it \\ --net=host --env=&quot;DISPLAY&quot; --volume=&quot;$&#123;xauth_var&#125;:/root/.Xauthority:rw&quot; \\ -v $SO2_VOLUME:/linux \\ --workdir &quot;$SO2_WORKSPACE&quot; \\ &quot;$full_image_name&quot; &quot;$executable&quot; else docker run $privileged --rm -it --cap-add=NET_ADMIN --device /dev/net/tun:/dev/net/tun \\ -v $SO2_VOLUME:/linux \\ --workdir &quot;$SO2_WORKSPACE&quot; \\ &quot;$full_image_name&quot; &quot;$executable&quot; fi&#125;docker_main() &#123; if [ &quot;$1&quot; = &quot;interactive&quot; ] ; then shift docker_interactive &quot;$@&quot; fi&#125;if [ &quot;$1&quot; = &quot;docker&quot; ] ; then shift docker_main &quot;$@&quot;elif [ &quot;$1&quot; = &quot;-h&quot; ] || [ &quot;$1&quot; = &quot;--help&quot; ]; then print_helpelse print_helpfi 12# 在终端运行脚本sudo bash ./local.sh docker interactive --privileged 显示如下内容时说明配置成功 此时根目录下会出现一个目录&#x2F;linux，这是docker虚拟挂载出来的，只有执行脚本时才会出现这个目录。&#x2F;linux&#x2F;tools&#x2F;lab是这个docker容器的工作目录，是我们编译模块和启动虚拟机的地方。 需要两个Docker内部的终端，通过tmux(终端复用器)可以得到分离的两个终端，输入指令如下 1$tmux 使用ctrl+b然后shift+”可以得到水平分割的两个终端，如下所示 使用ctrl+b然后shift+可以得到垂直分割的两个终端，但是不方便复制代码可以得到垂直分割的两个终端，但是不方便复制代码可以得到垂直分割的两个终端，但是不方便复制代码 &gt; 使用ctrl+b然后按下 [ 可以自由浏览终端界面，方便复制粘贴代码使用ctrl+b然后按下 d 可以推出tmux，但这会杀死所有tmux正在执行的进程 配置好环境以后就可以进行试验了，将上面的窗格作为虚拟机OS2，下面的窗格作为主机Docker容器，在上面的窗格中执行以下命令即可生成骨架，开始实验 1$ LABS=&lt;实验名称&gt; make skels 接下来要启动虚拟机，执行 make console 使用 root 用户名登陆 我们的工作流程包括：在Docker内编写模块代码，修改Make|Kbuild文件，执行make build编译得到ko模块，然后在虚拟机中通过 insmod 命令将其插入到虚拟机，或者通过 rmmod 将其移除。 每次构建模块无需重启虚拟机，停止虚拟机的操作是 ctrl+a，然后按下 q 一 内核模块实验目标 创建简单的模块 描述内核模块编译的过程 展示如何在内核中使用模块 简单的内核调试方法 1 内核模块的使用|加载|卸载 使用 make console 启动虚拟机，并完成以下任务 (正确启动虚拟机以及上位机应该是下面这个界面) 使用ctrl+alt+t打开一个终端，确保pwd下有文件local.sh，使用以下代码进入docker容器 1sudo bash ./local.sh docker interactive --privileged 在docker容器中构建骨架，编写模块代码，编译模块，然后启动虚拟机安装测试模块 1234567# 在docker容器中构建骨架，在里面编写代码# 实验名称一般是skel目录下的目录路径如LABS=&quot;kernel_modules/6-cmd-mod kernel_modules/8-kprobes&quot;LABS=&lt;实验名称&gt; make skels# 编写完成后，修改Make和Kbuild文件，使用 make build 编译得到 .ko 模块文件，就可以测试了# 使用tmux分离出一个终端，使用make console启动虚拟机make console #使用root用户名login，效果如下，此时主机名为qemu 加载内核模块 在 ~/skels/kernel_modules 目录下有很多模块目录，里面存放要完成的任务 ​ 2. 在 1-2-test-mod 这个目录下，执行命令 insmod hello_mod.ko 完成模块加载 列出内核模块并检查当前模块是否存在 使用指令 lsmod 查看模块是否加载成功 卸载内核模块 使用指令 rmmod hello_mod (不需要后缀) 完成模块卸载 使用 dmesg 命令查看加载&#x2F;卸载内核模块时显示的消息 2 Printk 配置系统，使消息不直接显示在串行控制台上，只能使用 dmesg 命令来查看 使用命令 echo &quot;4 4 1 7&quot; &gt; /proc/sys/kernel/printk 修改打印日志行为设置 此时再加载模块就不会显示消息在串行控制台上了 3 错误 生成名为 3-error-mod 的任务的框架。编译源代码并得到相应的内核模块。 为什么会出现编译错误? 提示: 这个模块与前一个模块有什么不同？ 修改该模块以解决这些错误的原因，然后编译和测试该模块。 根据TODO提示，缺少头文件 &lt;linux/module.h&gt;，添加后能编译成功 4 子模块 查看 4-multi-mod/ 目录中的 C 源代码文件 mod1.c 和 mod2.c。模块 2 仅包含模块 1 使用的函数的定义。 修改 Kbuild 文件，从这两个 C 源文件创建 multi_mod.ko 模块。 编译、复制、启动虚拟机、加载和卸载内核模块。确保消息在控制台上正确显示。 使用 LABS=&quot;kernel_modules/4-multi-mod&quot; make skels 构建骨架 在目录 root@ubuntu20:/linux/tools/labs/skels/kernel_modules/4-multi-mod 中修改Kbuild文件 123# TODO: add rules to create a multi object moduleobj-m = multi-mod.omulti-mod-y = mod1.o mod2.o 然后 cd /linux/tools/labs 进行编译 make build 启动虚拟机，加载和卸载 multi-mod.ko 模块 5 内核 oops 学习当内核模块代码有问题导致模块插入后内核发生了错误应该怎么处理 使用 LABS=&quot;kernel_modules/5-oops-mod&quot; make skels 构建骨架 在 root@ubuntu20:/linux/tools/labs/skels/kernel_modules/5-oops-mod 中修改Kbuild文件，为Kbuild文件添加编译标记，使得之后在安装模块时，会出现编译过程信息，提示哪里出现了问题 1234# TODO: add flags to generate debug informationccflags-y += -gobj-m = oops_mod.o make build 进行编译，然后在虚拟机中安装模块 insmod oops_mod.ko 会输出很长一段编译信息，其中最重要的是 123456# 告诉我们错误的原因BUG: kernel NULL pointer dereference, address: 00000000# 告诉我们这是第一个 oops（#1）Oops: 0002 [#1] SMP# 造成错误的指令的地址，它解码了指令指针 (EIP) 的值，并指出错误出现在 my_oops_init 函数中，偏移为 d个字节EIP: my_oops_init+0xd/0x22 [oops_mod] 12345oops 代码（0002）提供了有关错误类型的信息（参见 arch/x86/include/asm/trap_pf.h ）：第 0 位 == 0 表示找不到页面，1 表示保护故障第 1 位 == 0 表示读取，1 表示写入第 2 位 == 0 表示内核模式，1 表示用户模式 有了 EIP 值就可以使用 address2line 来找到出错的代码出现的位置，在主机中使用 12addr2line -e oops_mod.ko +0xd/linux/tools/labs/skels/./kernel_modules/5-oops-mod/oops_mod.c:15 可以知道是 oops_mod.c 的第 15 行出现了问题 由于oops_mod.ko模块加载卡住了，所以无法正常卸载，因此要重启虚拟机才能完成卸载 模块加载必须经过init函数以及注册exit函数 重启虚拟机之后，删去第15行代码，重新编译以及插入模块即可完成模块的加载与卸载 6 模块参数 在不修改源代码 cmd_mod.c 的情况下，加载内核模块以显示消息 Early bird gets tired 通过命令行传递参数可以修改函数变量的值从而输出特定内容 使用命令行传递参数需要源代码满足以下条件 变量必须是模块级别的全局变量，不能是函数内部变量，必须像这样： 1static char *str = &quot;default&quot;; 使用 module_param() 宏声明该变量为模块参数 123456/*str：变量名charp：变量类型（支持 int、charp、bool、ulong 等）0：权限标志位（sysfs 中的访问权限）*/module_param(str, charp, 0); 模块必须使用标准 init &#x2F; exit 入口函数机制，如 12345static int __init my_init(void) &#123; ... &#125;static void __exit my_exit(void) &#123; ... &#125;module_init(my_init);module_exit(my_exit);# 这样，内核在执行 insmod 时会先处理模块参数，再调用 init 函数。 模块参数变量声明前不能加 const 因为内核需要在运行时修改它 1static const char *str = &quot;hello&quot;; // ❌ 无法作为 module_param 7 进程信息 检查名为 7-list-proc 的任务的框架。添加代码来显示当前进程的进程 ID（ PID ）和可执行文件名 执行 root@ubuntu20:/linux/tools/labs/skels/kernel_modules/7-list-proc# vim list_proc.c 命令，修改 list_proc.c 文件源代码 在注释TO DO处添加如下代码 123456789101112/* TODO: add missing headers */#include &lt;linux/sched/signal.h&gt;/* TODO/2: print current process pid and its name */pr_info(&quot;Current process: pid = %d; comm = %s\\n&quot;, current-&gt;pid, current-&gt;comm);/* TODO/3: print the pid and name of all processes */pr_info(&quot;\\nProcess list:\\n\\n&quot;);for_each_process(p) pr_info(&quot;pid = %d; comm = %s\\n&quot;, p-&gt;pid, p-&gt;comm);/* TODO/2: print current process pid and name */pr_info(&quot;Current process: pid = %d; comm = %s\\n&quot;, current-&gt;pid, current-&gt;comm); 编译执行得到如下输出 这里得查很多资料才能知道这些代码是什么意思 8 KDB 使用KDB(Kernel Debugger)分析堆栈找出错误代码位置|使用KDB找到模块加载的地址|在一个新窗口中使用 GDB 并根据 KDB 提供的信息查看代码(没解决) 在虚拟机中配置KDB使用hvc0串口 echo hvc0 &gt; /sys/module/kgdboc/parameters/kgdboc 使用 SysRq 命令启用 KDB (Ctrl + O g)，此时进入KDB调试命令行，输入Help可查看可用KDB命令，如果出现乱码例如文字显示不出来，很多乱码挤在界面右侧，是因为minicom的换行格式有问题，按下 ctrl + A 然后按下 U(或者L)，这样会将minicom从列显示模式切换到行显示模式，此时输出即可恢复正常 kdb&gt; “这里输入go可以继续执行内核跳出kdb调试，按回车是重新输入并执行上一个命令，按↑是显示上一个命令” 加载 hello_kdb 模块。该模块在写入 /proc/hello_kdb_bug 文件时会模拟一个错误。使用以下命令模拟错误：echo 1 &gt; /proc/hello_kdb_bug 运行这个命令就会发生oops错误，然后会进入KDB调试命令行，使用 [0]kdb&gt; bt 即可分析堆栈跟踪并确定导致错误的代码，bt输出的最下面是执行的起始处(堆栈跟踪要从后往前看)，有些行前面的 ? 是指KDB不确定这个地址偏移是否计算正确，bt输出中最重要的就是kgbd_panic、kgdb_breakpoint这两个点，这表明有函数执行之后发生了错误，可以看到kgbd_panic下面的函数是panic，panic下面的函数是dummy_func1并指明它是 hello_kdb.c文件中的函数，所以错误代码就是 hello_kdb.c 中的函数 dummy_func1 有问题 123456789101112131415notify_die+0x4d/0x90exc_int3+0x5c/0x140handle_exception+0x140/0x140EIP: kgdb_breakpoint+0xe/0x20 Code: b4 26 00 00 00 00 8d b6 00 00 00 00 31 c0 c3 8d b4 26 00 00 00 00 8d b6 00 00 00 00 3e ff8EAX: 0000001e EBX: c40b9e00 ECX: 00000000 EDX: 00000000ESI: c180e898 EDI: c1badb40 EBP: c4519e2c ESP: c4519e20 DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068 EFLAGS: 00000002 ? exc_general_protection+0x2c0/0x2c0 ? kgdb_breakpoint+0xe/0x20 ? kgdb_panic+0x4d/0x60 panic+0xbc/0x266 ? dummy_func1+0x8/0x8 [hello_kdb] dummy_func18+0xd/0xd [hello_kdb] dummy_func17+0x8/0x8 [hello_kdb] 使用 [0]kdb&gt; lsmod 可以看到模块的加载地址 二 内核 API实验目标： 熟悉基本的Linux内核API 内核是一个独立运行的实体，不能调用用户空间的任何库，所以不能使用printf、malloc、free等常见的用户控件函数 描述内存分配机制 描述锁定机制 1 Linux 内核中的内存分配 GFP_KERNEL ——使用此值可能导致当前进程被挂起。因此，它不能在中断上下文中使用。 GFP_ATOMIC ——使用此值确保 kmalloc() 函数不会挂起当前进程。它可以随时使用。 1234567891011121314151617181920212223242526static char *mem;static int mem_init(void)&#123; size_t i; // 第一个参数是字节大小，这里是4096个字节，第二个参数是分配标志 // 表示这是普通内核上下文分配，允许睡眠、可以进行内存回收 mem = kmalloc(4096 * sizeof(*mem), GFP_KERNEL); if (mem == NULL) goto err_mem; // 打印mem~mem+4096内存地址区间的所有值为字母的元素 pr_info(&quot;chars: &quot;); for (i = 0; i &lt; 4096; i++) &#123; if (isalpha(mem[i])) printk(&quot;%c &quot;, mem[i]); &#125; pr_info(&quot;\\n&quot;); return 0;err_mem: return -1;&#125;static void mem_exit(void)&#123; kfree(mem);&#125; 重点在于使用kmalloc分配内存给指针，从而能使用指针指向内存空间进行引用、操作，其实kmalloc的用法和malloc差不多 2 在原子上下文中睡眠12345678910111213141516static int sched_spin_init(void)&#123; // 定义一个自旋锁变量 spinlock_t lock; // 初始化自旋锁变量 spin_lock_init(&amp;lock); // 执行锁定，此时CPU进入中断上下文进行原语操作，即此时代码运行在由自旋锁保护的临界区域当前进程不能挂起或睡眠 spin_lock(&amp;lock); // 强制使当前进程进入睡眠，因此执行insmod时会报错 set_current_state(TASK_INTERRUPTIBLE); schedule_timeout(5 * HZ); // 释放锁定，使用自旋锁时一定注意，在spin_lock和unlock这两个函数之间不能有挂机或睡眠操作代码 spin_unlock(&amp;lock); return 0;&#125; 学习重点在于学会使用自旋锁变量以及使用时的注意要点 3 使用内核内存1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859struct task_info &#123; pid_t pid; unsigned long timestamp;&#125;;static struct task_info *ti1, *ti2, *ti3, *ti4;static struct task_info *task_info_alloc(int pid)&#123; struct task_info *ti; /* TODO 1/5: allocated and initialize a task_info struct */ // 没有使用sizeof(struct task_info)，可能是为了更好的复用，这里参考1内存分配的操作即可 ti = kmalloc(sizeof(*ti), GFP_KERNEL); if (ti == NULL) return NULL; ti-&gt;pid = pid; // jiffies 是一个全局可见变量，表示当前的时间 ti-&gt;timestamp = jiffies; return ti;&#125;static int memory_init(void)&#123; /* TODO 2/1: call task_info_alloc for current pid */ // current是一个可以直接使用的宏，等价于struct task_struct结构体，使用current-&gt;pid查找当前进程的PID值 ti1 = task_info_alloc(current-&gt;pid); /* TODO 2/1: call task_info_alloc for parent PID */ // 使用current-&gt;parent查找当前进程的父进程，这里纯属背板操作，无需了解为什么 ti2 = task_info_alloc(current-&gt;parent-&gt;pid); /* TODO 2/1: call task_info alloc for next process PID */ // 使用next_task(current)宏找到当前进程的下一个进程 ti3 = task_info_alloc(next_task(current)-&gt;pid); /* TODO 2/1: call task_info_alloc for next process of the next process */ ti4 = task_info_alloc(next_task(next_task(current))-&gt;pid); return 0;&#125;static void memory_exit(void)&#123; /* TODO 3/4: print ti* field values */ printk(&quot;pid: %d, timestamp: %lu\\n&quot;, ti1-&gt;pid, ti1-&gt;timestamp); printk(&quot;pid: %d, timestamp: %lu\\n&quot;, ti2-&gt;pid, ti2-&gt;timestamp); printk(&quot;pid: %d, timestamp: %lu\\n&quot;, ti3-&gt;pid, ti3-&gt;timestamp); printk(&quot;pid: %d, timestamp: %lu\\n&quot;, ti4-&gt;pid, ti4-&gt;timestamp); /* TODO 4/4: free ti* structures */ // 释放内存 kfree(ti1); kfree(ti2); kfree(ti3); kfree(ti4);&#125; 重点在于学习如何给分配了内存的变量赋值以及如何使用current宏、next_task宏找到进程PID值 4 使用内核列表1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768struct task_info &#123; pid_t pid; unsigned long timestamp; struct list_head list;&#125;;static struct list_head head;static struct task_info *task_info_alloc(int pid)&#123; struct task_info *ti; ti = kmalloc(sizeof(*ti), GFP_KERNEL); if (ti == NULL) return NULL; ti-&gt;pid = pid; ti-&gt;timestamp = jiffies; return ti;&#125;static void task_info_add_to_list(int pid)&#123; struct task_info *ti; /* TODO 1/2: Allocate task_info and add it to list */ // 分配内存给ti变量,ti是一个task_info结构体指针，描述任务信息(这里指描述当前进程的PID和时间) ti = task_info_alloc(pid); // 将ti添加到链表，注意list_add函数的用法，传入的是ti-&gt;list的地址和head的地址(没有使用结构体指针) list_add(&amp;ti-&gt;list, &amp;head);&#125;static void task_info_add_for_current(void)&#123; /* Add current, parent, next and next of next to the list */ task_info_add_to_list(current-&gt;pid); task_info_add_to_list(current-&gt;parent-&gt;pid); task_info_add_to_list(next_task(current)-&gt;pid); task_info_add_to_list(next_task(next_task(current))-&gt;pid);&#125;static void task_info_print_list(const char *msg)&#123; struct list_head *p; struct task_info *ti; pr_info(&quot;%s: [ &quot;, msg); list_for_each(p, &amp;head) &#123; ti = list_entry(p, struct task_info, list); pr_info(&quot;(%d, %lu) &quot;, ti-&gt;pid, ti-&gt;timestamp); &#125; pr_info(&quot;]\\n&quot;);&#125;static void task_info_purge_list(void)&#123; struct list_head *p, *q; struct task_info *ti; /* TODO 2/5: Iterate over the list and delete all elements */ // 这里要注意，list_for_each_safe是一个宏而不是函数，不要加分号 list_for_each_safe(p, q, &amp;head) &#123; // list_entry是找到当前链表节点相对应的原来的结构体指针变量，即映射回去 ti = list_entry(p, struct task_info, list); list_del(p); kfree(ti); &#125;&#125; 知识点 list_entry(ptr, type, member)() 返回列表中包含元素 ptr 的类型为 type 的结构，该结构中具有名为 member 的成员。 list_for_each(pos, head) 使用 pos 作为游标来迭代列表。 list_for_each_safe(pos, n, head) 使用 pos 作为游标，n 作为临时游标来迭代列表。此宏用于从列表中删除项目。 list_del(struct list_head *entry)() 删除属于列表的 entry 地址处的项目。 list_add(struct list_head *new, struct list_head *head)() 将 new 指针所引用的元素添加到 head 指针所引用的元素之后。 使用 static struct list_head head; 来声明一个链表头，在使用head前进行 INIT_LIST_HEAD(&amp;head); INIT_LIST_HEAD(struct list_head *list)() 用于在进行动态分配时，通过设置链表字段 next 和 prev，来初始化链表的标记。 5 使用内核列表进行进程处理123456789101112131415161718192021222324252627282930// kernel_api\\5-list-full\\list-full.cstatic struct task_info *task_info_find_pid(int pid)&#123; struct list_head *p; struct task_info *ti; /* TODO 1/5: Look for pid and return task_info or NULL if not found */ // 找到成员pid值等于参数pid值的链表节点ti list_for_each(p, &amp;head) &#123; ti = list_entry(p, struct task_info, list); if (ti-&gt;pid == pid) return ti; &#125; return NULL;&#125;static void list_full_exit(void)&#123; struct task_info *ti; /* TODO 2/2: Ensure that at least one task is not deleted */ // 这里要学会使用原子操作函数atomic_set，原子操作是一种不会被打断必定执行的操作，必须使用原子变量atomic_t ti = list_entry(head.prev, struct task_info, list); atomic_set(&amp;ti-&gt;count, 10); task_info_remove_expired(); task_info_print_list(&quot;after removing expired&quot;); task_info_purge_list();&#125; 一些常用的原子操作函数 6 同步列表工作 代码相关答案可以看&#x2F;templates文件夹下的代码 使用DEFINE_RWLOCK(lock)定义一个读写自旋锁 12/* TODO 1: you can use either a spinlock or rwlock, define it here */DEFINE_RWLOCK(lock); 读写自旋锁中的代码涉及到的共享资源会被锁定 1234567891011121314151617181920212223write_lock(&amp;lock);/* 临界区（critical region） */ti = task_info_find_pid(pid);if (ti != NULL) &#123; ti-&gt;timestamp = jiffies; atomic_inc(&amp;ti-&gt;count); /* TODO: Guess why this comment was added here */ /* 临界区（critical region） */ write_unlock(&amp;lock); return;&#125;/* TODO 1: critical section ends here *//* 临界区（critical region） */write_unlock(&amp;lock);read_lock(&amp;lock);list_for_each(p, &amp;head) &#123; ti = list_entry(p, struct task_info, list); pr_info(&quot;(%d, %lu) &quot;, ti-&gt;pid, ti-&gt;timestamp);&#125;/* TODO 1: Critical section ends here */read_unlock(&amp;lock);pr_info(&quot;]\\n&quot;); 简单来说，就是write_lock和write_unlock之间的代码片段当cpu在执行时会进入临界区，此时如果是write_lock，那就是只有当前的进程能写，其他的进程包括CPU都不能写，如果是read_lock，那就是所有进程都不能写，但是可以一起读 如果代码只涉及共享资源的访问就使用read_lock，如果设计对共享资源的修改就使用write_lock，在这个例子中，由于要修改ti的时间戳和计数器，所以使用了write_lock读自旋锁，而只需要打印ti的pid和时间戳，所以使用read_lock 关于 EXPORT_SYMBOL(name); ，其作用是导出模块代码中的函数或者变量给其它模块使用，当模块代码中使用了 EXPORT_SYMBOL(name); 那么加载此模块后，其他模块也能使用 name 代表的函数或者变量，但有几点要求 函数或变量不能是静态的，即不能使用 static 关键字 必须在函数定义或变量赋值后使用 7 在我们的列表模块中测试模块调用 这一节没什么好讲的，就是一个模块依赖关系，如果模块代码使用了其他模块导出的内核符号name，则这个模块依赖于其他模块，被依赖的模块由于模块引用计数refcnt&gt;0无法卸载，所以必须先卸载依赖模块，在这个例子中就是必须先卸载 list-test 模块，然后卸载 list-sync 模块 除此以外，如果一个模块要使用其他模块导出的内核符号(函数或者变量)，必须先extern声明这个内核符号再使用，例如 123456789101112131415161718192021// 要使用 task_info_print_listvoid task_info_print_list(const char *msg) //被依赖模块代码&#123; struct list_head *p; struct task_info *ti; pr_info(&quot;%s: [ &quot;, msg); /* TODO 1: Protect list, is this read or write access? */ read_lock(&amp;lock); list_for_each(p, &amp;head) &#123; ti = list_entry(p, struct task_info, list); pr_info(&quot;(%d, %lu) &quot;, ti-&gt;pid, ti-&gt;timestamp); &#125; /* TODO 1: Critical section ends here */ read_unlock(&amp;lock); pr_info(&quot;]\\n&quot;);&#125;EXPORT_SYMBOL(task_info_print_list);// 必须先 extern task_info_print_listextern void task_info_print_list(const char *msg); //依赖模块代码 很多东西都是背板式的，如果每个不熟悉的符号都使用LXR或cscope去查询，会消耗大量时间而且不一定能查找正确，学习linux内核编程有如学习一个语法无比复杂的语言，与其先背下来所有单词和认识所有语法后再实践练习使用，不如先开口把最常用最实用的操作记下来，让自己变得熟练，那么以前那些晦涩难懂的知识也就比较容易理解了 三 字符设备驱动程序 实验目标 理解字符设备驱动程序背后的概念 理解可以在字符设备上执行的各种操作 使用等待队列进行工作 0 简介1234// struct file -linux - linux-2.6.0\\include\\linux\\fs.h// struct file_operations - linux-2.6.0\\include\\linux\\fs.h// generic_ro_fops - linux-2.6.0\\include\\linux\\fs.h// vfs_read() - linux-2.6.0\\fs\\read_write.c 1 注册&#x2F;注销 使用 mknod 创建 &#x2F;dev&#x2F;so2_cdev 字符设备节点 123// 在QUMU上使用mknod命令mknod /dev/so2_cdev c 42 0// 42是主设备号，0是此设备号，均在so2_cdev.c中定义过 此时只是创建了一个节点，要使用register_chrdev_region完成注册才能在&#x2F;proc&#x2F;devices中看到设备文件 实现设备的注册和注销 12345/* TODO 1/6: register char device region for MY_MAJOR and NUM_MINORS starting at MY_MINOR */err = register_chrdev_region(MKDEV(MY_MAJOR, MY_MINOR), NUM_MINORS, MODULE_NAME);/* TODO 1/1: unregister char device region, for MY_MAJOR and NUM_MINORS starting at MY_MINOR */unregister_chrdev_region(MKDEV(MY_MAJOR, MY_MINOR),NUM_MINORS); MKDEV的意思是从主设备号MY_MAJOR开始注册次设备号MY_MINOR，注册NUM_MINORS个设备文件，如果当前主设备号下的设备文件数大于NUM_MINORS，则让主设备号＋1继续注册 2 注册一个已经注册过的主设备号12// 使用 cat proc/devices 看已有的设备文件的主设备号，然后替换掉下面的宏定义#define MY_MAJOR 42 此时会返回错误码 -16，#define EBUSY 16 &#x2F;* Device or resource busy *&#x2F; 表示是当前设备正忙无法被注册 3 打开和关闭 打开和关闭字符设备文件 初始化设备 123456789101112struct so2_device_data &#123; /* TODO 2/1: add cdev member */ struct cdev cdev; /* TODO 4/2: add buffer with BUFSIZ elements */ char buffer[BUFSIZ]; size_t size; /* TODO 7/2: extra members for home */ wait_queue_head_t wq; int flag; /* TODO 3/1: add atomic_t access variable to keep track if file is opened */ atomic_t access;&#125;; 为当前设备文件建立一个结构体，成员有cdev结构体，该结构体用于在系统中注册字符设备(供cdev_init和cdev_add函数使用)，字符数组buffer用于读操作，size用于指示传输数据的大小，access是一个原子变量，用于计数实现阻塞其它进程干涉，这里只需要关注 TODO 2&#x2F;1 实现打开和释放函数 1234567891011// 在结构体定义static const struct file_operations so2_fops中/* TODO 2/2: add open and release functions */.open = so2_cdev_open,.release = so2_cdev_release,// 在函数so2_cdev_open中/* TODO 3/1: inode-&gt;i_cdev contains our cdev struct, use container_of to obtain a pointer to so2_device_data */// 获取当前设备文件的结构体data = container_of(inode-&gt;i_cdev, struct so2_device_data, cdev);// 让file指针指向当前设备文件，实现打开file-&gt;private_data = data; container_of 宏用于从一个结构体成员的地址反推出成员所在的结构体的首地址，用法是container_of(ptr, type, member)，在这个例子中container_of 从 inode-&gt;i_cdev（一个struct cdev 类型的指针，指向so2_device_data的成员cdev）反推出它所在的 struct so2_device_data 结构体的首地址，从而获得设备的私有数据指针 data 显示消息 1// 使用pr_info函数，与printf类似 再次读取 1// 使用 cat /dev/so2_cdev 4 访问限制 使用原子变量限制设备访问 在设备结构体中添加 atomic_t 变量 123// 在结构体so2_device_data中/* TODO 3/1: add atomic_t access variable to keep track if file is opened */atomic_t access; 在模块初始化时对该变量进行初始化 12345// 在函数so2_cdev_init中/* TODO 3/1: set access variable to 0, use atomic_set */atomic_set(&amp;devs[i].access, 0);// 这里的devs是设备文件的实例化，在设备文件结构体下有定义// struct so2_device_data devs[NUM_MINORS]; 在打开函数中使用该变量限制对设备的访问。我们建议使用 atomic_cmpxchg() 1234// 在函数so2_cdev_open中/* TODO 3/2: return immediately if access is != 0, use atomic_cmpxchg */if (atomic_cmpxchg(&amp;data-&gt;access, 0, 1) != 0) return -EBUSY; static inline int atomic_cmpxchg(atomic_t *ptr, int old, int new)这个函数可以在一个原子操作中检查变量的旧值并将其设为新值，在上面的例子中，它表示如果当前的access等于旧值0就将access设为1，不等于0就不修改，无论是否发生替换，atomic_cmpxchg函数都会返回ptr指向的原始值（也就是操作之前的值）。 在释放函数中重置该变量以恢复对设备的访问权限 123// 在函数so2_cdev_release中/* TODO 3/1: reset access variable to 0, use atomic_set */atomic_set(&amp;data-&gt;access, 0); 模拟休眠 123// 在函数so2_cdev_open中set_current_state(TASK_INTERRUPTIBLE);schedule_timeout(1000); set_current_state(TASK_INTERRUPTIBLE);把当前进程（current）的状态设置为可中断睡眠 (TASK_INTERRUPTIBLE)。在这个状态下，进程会被调度器认为是“睡着的”，直到有事件唤醒它schedule_timeout(10 * HZ);把当前进程从 CPU 调度队列里移走，并设置一个定时器，在 10 * HZ 个 jiffies 后唤醒它。HZ 是内核的时钟频率（例如在 x86 上常见是 100、250 或 1000），10 * HZ 表示 10 秒。如果在这段时间内进程收到信号，会提前被唤醒。 5 读操作 在驱动程序中实现读取函数 在 so2_device_data 结构中保持一个缓冲区，并用 MESSAGE 宏的值进行初始化。缓冲区的初始化在模块的 init 函数中完成 12345678// struct so2_device_data/* TODO 4/2: add buffer with BUFSIZ elements */char buffer[BUFSIZ];size_t size;// static int so2_cdev_init(void)/*TODO 4/2: initialize buffer with MESSAGE string */memcpy(devs[i].buffer, MESSAGE, sizeof(MESSAGE));devs[i].size = sizeof(MESSAGE); 在读取调用时，将内核空间缓冲区的内容复制到用户空间缓冲区 使用 copy_to_user() 函数将信息从内核空间复制到用户空间 1234567891011// static ssize_t so2_cdev_read(file, user_buffer, size, offset)// 首先定义传输的字节数to_read以及获取设备文件指针struct so2_device_data *data = (struct so2_device_data *) file-&gt;private_data;size_t to_read = (size &gt; data-&gt;size - *offset) ? (data-&gt;size - *offset) : size;/* TODO 4/4: Copy data-&gt;buffer to user_buffer, use copy_to_user */if (copy_to_user(user_buffer, data-&gt;buffer + *offset, to_read) != 0) return -EFAULT;*offset += to_read;return to_read; 需要将请求的字节数size和内部缓冲区大小data-&gt;size - *offset作比较，有可能请求的字节数要超过内部缓存区大小，从而引发错误，其实这里应该是判断 size+*offset &gt; data-&gt;size，可能为了防止越界写成了减去，注意要更新偏移参数，以便于用户达到文件内部缓冲区末尾时退出 读取函数so2_cdev_read调用返回的值是从内核空间缓冲区传输到用户空间缓冲区的字节数 6 写操作7 ioctl 操作8 带消息的 ioctl9 使用等待队列的 ioctl10 O_NONBLOCK 实现四 I&#x2F;O访问和中断实验目标： 与外围设备进行通信 实现中断处理程序 将中断与进程上下文同步 关键词：IRQ，I&#x2F;O 端口，I&#x2F;O 地址，基地址，UART，request_region，release_region，inb，outb 0 简介123456789101112131415161718192021222324252627//resource - /inclue/linux/ioport.hstruct resource &#123; resource_size_t start; resource_size_t end; const char *name; unsigned long flags; unsigned long desc; struct resource *parent, *sibling, *child;&#125;;//request_region - /inclue/linux/ioport.h#define request_region(start,n,name)\\ __request_region(&amp;ioport_resource, (start), (n), (name), 0)//__request_region() - /kernel/resource.cstruct resource *__request_region(struct resource *parent, resource_size_t start, resource_size_t n, const char *name, int flags)//request_irq() - /include/linux/interrupt.hstatic inline int __must_checkrequest_irq(unsigned int irq, irq_handler_t handler, unsigned long flags, const char *name, void *dev)&#123; return request_threaded_irq(irq, handler, NULL, flags, name, dev);&#125;//request_threaded_irq() - /kernel/irq/manage.cint request_threaded_irq(unsigned int irq, irq_handler_t handler, irq_handler_t thread_fn, unsigned long irqflags, const char *devname, void *dev_id) 实现键盘驱动程序 目标是创建一个使用键盘IRQ的驱动程序，检查传入的按键代码并将其存储在缓冲区中。通过字符设备驱动程序，用户空间可以访问该缓冲区。 如果说上一个实验字符设备驱动程序是关于如何驱动外设如何实现物理设备的读写I&#x2F;O操作，那么这个实验是关于如何通过中断来操控外设 1 请求I&#x2F;O端口123456789101112131415161718192021222324// 在 kbd_init 函数中/* TODO 1/8: request the keyboard I/O ports */if (request_region(I8042_DATA_REG+1, 1, MODULE_NAME) == NULL) &#123; err = -EBUSY; goto out_unregister;&#125;if (request_region(I8042_STATUS_REG+1, 1, MODULE_NAME) == NULL) &#123; err = -EBUSY; goto out_release_region;&#125;out_release_regions: release_region(I8042_STATUS_REG+1, 1);out_release_region: release_region(I8042_DATA_REG+1, 1);out_unregister: unregister_chrdev_region(MKDEV(KBD_MAJOR, KBD_MINOR), KBD_NR_MINORS);out: return err;// 在 kbd_exit 函数中/* TODO 1/2: release keyboard I/O ports */release_region(I8042_STATUS_REG+1, 1);release_region(I8042_DATA_REG+1, 1); 请求 I&#x2F;O 端口后，可以在&#x2F;proc&#x2F;ioports中找到自己的端口号如果遇到报错提示-EBUSY，可能是因为没有执行release_region或者unregister_chrdev_region，需要在init函数开头写release_region或者unregister_chrdev_region然后重新插入模块 2 中断处理例程 所谓中断处理例程，就是中断发生时会执行的代码功能函数，一般是xxx_interrupt_handler() 12345678910111213141516171819202122// 自己写的一个函数 kbd_interrupt_handle 注意类型是 irqreturn_t/* TODO 2/27: implement interrupt handler */irqreturn_t kbd_interrupt_handle(int irq_no, void *dev_id)&#123; // 当中断发生时输出 pr_info(&quot;You just pressed A key!\\n&quot;); /* TODO 3: read the scancode */ /* TODO 3/2: interpret the scancode */ /* TODO 3/2: display information about the keystrokes */ /* TODO 3/7: store ASCII key to buffer */ return IRQ_NONE;&#125;// 在 kbd_init 函数中, 注册中断处理例程，使用 request_irq/* TODO 2/7: Register IRQ handler for keyboard IRQ (IRQ 1). */err = request_irq(I8042_KBD_IRQ, kbd_interrupt_handle, IRQF_SHARED, MODULE_NAME, &amp;devs[0]);if (err != 0) &#123; pr_err(&quot;request_irq failed: %d\\n&quot;, err); goto out_release_regions;&#125; 使用request_irq注册中断例程后，能在&#x2F;proc&#x2F;interrupts中看到自己的中断程序 kbd 按照“注意”的提示使用 QEMU_DISPLAY=gtk make boot 是无法启动成功的，因为QEMU中的Makefile指定需要下载yotco2.4版本的镜像系统，但是链接早就失效了，必须修改QEMU中的Makefile的yotco版本号为4.1才能正常下载系统镜像从而启动，如下图所示修改，如果下载的很慢或者还是下载不了，可能需要使用代理，使用clash-verge的TUN模式可以让虚拟机走代理 没有报错之后应该能正常启动系统，如下所示 但此时要退出来，因为没有在Docker内执行 make copy，执行前系统内是没有 skels 这个文件夹的 在QEMU中按下键盘按键会触发中断例程程序，使用dmesg可以看到： 3 将 ASCII 键存储到缓冲区读取数据存储器1234567891011// 使用函数 inb 读取 I/O 端口的数据，只读一个字符大小的数据(1 Byte)static inline u8 i8042_read_data(void)&#123; u8 val; /* TODO 3: Read DATA register (8 bits). */ val = inb(I8042_DATA_REG); // 此时读取的是寄存器中的扫描码，还需要转换才能成为ASCII码 return val;&#125;// 在 kbd_interrupt_handle 函数中/* TODO 3: read the scancode */scancode = i8042_read_data(); 解释扫描码1234567891011121314151617181920212223242526272829303132333435// 在 kbd_interrupt_handle 函数中/* TODO 3/2: interpret the scancode */pressed = is_key_press(scancode); // 此函数能判断扫描码是按下键还是释放键ch = get_ascii(scancode); // 此函数能将扫描码转换为ASCII码/* TODO 3/2: display information about the keystrokes */pr_info(&quot;IRQ %d: scancode=0x%x (%u) pressed=%d ch=%c\\n&quot;, irq_no, scancode, scancode, pressed, ch);static int get_ascii(unsigned int scancode)&#123; static char *row1 = &quot;1234567890&quot;; static char *row2 = &quot;qwertyuiop&quot;; static char *row3 = &quot;asdfghjkl&quot;; static char *row4 = &quot;zxcvbnm&quot;; scancode &amp;= ~SCANCODE_RELEASED_MASK; if (scancode &gt;= 0x02 &amp;&amp; scancode &lt;= 0x0b) return *(row1 + scancode - 0x02); if (scancode &gt;= 0x10 &amp;&amp; scancode &lt;= 0x19) return *(row2 + scancode - 0x10); if (scancode &gt;= 0x1e &amp;&amp; scancode &lt;= 0x26) return *(row3 + scancode - 0x1e); if (scancode &gt;= 0x2c &amp;&amp; scancode &lt;= 0x32) return *(row4 + scancode - 0x2c); if (scancode == 0x39) return &#x27; &#x27;; if (scancode == 0x1c) return &#x27;\\n&#x27;; return &#x27;?&#x27;;&#125;static int is_key_press(unsigned int scancode)&#123; return !(scancode &amp; SCANCODE_RELEASED_MASK);&#125; 将字符存储到缓冲区12345678910111213141516171819202122232425// 在 kbd_interrupt_handle 函数中/* TODO 3/7: store ASCII key to buffer */if (pressed) &#123; struct kbd *data = (struct kbd *)dev_id; // 获取设备结构体 // 使用自旋锁，确保共享资源缓冲区是同步访问的，需要先在init函数中初始化 spin_lock(&amp;data-&gt;lock); // 读取字符，将 I/O 端口的字符读取到设备缓冲区中，以便于用户空间读取 put_char(data, ch); spin_unlock(&amp;data-&gt;lock);&#125;// 在 kbd_init 函数中/* TODO 3: initialize spinlock */spin_lock_init(&amp;devs[0].lock);// put_char 函数定义static void put_char(struct kbd *data, char c)&#123; // 如果缓冲区中的字符数量大于缓冲区的容量，则丢弃当前读取的字符 if (data-&gt;count &gt;= BUFFER_SIZE) return; // put-&gt;idx指向缓冲区下一个写入位置的索引 data-&gt;buf[data-&gt;put_idx] = c; // 更新索引 data-&gt;put_idx = (data-&gt;put_idx + 1) % BUFFER_SIZE; data-&gt;count++;&#125; 4 读取缓冲区 为了访问键盘记录器的数据，我们需要将其发送到用户空间。我们将使用 &#x2F;dev&#x2F;kbd 字符设备来实现这一点。当从该设备读取数据时，我们将从内核空间的缓冲区中获取按键数据 12345678910111213141516171819202122232425262728293031323334353637// 使用 get_char() 从缓冲区中读取一个字符，并使用 put_user() 将其存储到用户缓冲区中static bool get_char(char *c, struct kbd *data)&#123; /* TODO 4/6: get char from buffer; update count and get_idx */ if (data-&gt;count &gt; 0) &#123; // 如果缓冲区中的字符数量大于0，则读取字符 *c = data-&gt;buf[data-&gt;get_idx]; data-&gt;get_idx = (data-&gt;get_idx + 1) % BUFFER_SIZE; data-&gt;count--; return true; &#125; return false;&#125;// 在 kbd_read 函数中static ssize_t kbd_read(struct file *file, char __user *user_buffer, size_t size, loff_t *offset)&#123; struct kbd *data = (struct kbd *) file-&gt;private_data; size_t read = 0; /* TODO 4/18: read data from buffer */ unsigned long flags; char ch; bool more = true; while (size--) &#123; // 在读取函数中，使用 spin_lock_irqsave() 和 spin_unlock_irqrestore() 进行加锁 spin_lock_irqsave(&amp;data-&gt;lock, flags); more = get_char(&amp;ch, data); // 原子上下文中不允许访问用户空间 spin_unlock_irqrestore(&amp;data-&gt;lock, flags); if (!more) break; // 关键的一句在这，使用put_user函数将字符存储到用户缓存区 if (put_user(ch, user_buffer++)) // 参数是ch(字符)和user_buffer(传入的用户缓冲区) return -EFAULT; read++; &#125; return read;&#125; 为了测试是否成功实现了从键盘这一物理设备驱动程序的中断中实现数据读取，应该先使用mknod创建/dev/kbd字符设备驱动程序，正如在kbd_init函数中注册字符驱动设备文件的函数 register_chrdev_region 中的参数一样，要使用同样的KBD_MAJOR和MODULE_NAME以及KBD_MINOR，也就是 42、kbd、0，使用命令 mknod /dev/kbd c 42 0 在QEMU中创建设备驱动文件kbd，构建复制和启动QEMU，加载模块后，能在/proc/devices中看到自己的设备文件42 kbd，最后 1// 使用 cat /dev/kbd 读取缓冲区中的数据吧，因为 cat 是用户空间使用的命令，因此此时应该显示 5 重置缓冲区 使用 echo &quot;clear&quot; &gt; /dev/kbd 将数据写入设备 12345678910111213141516171819202122232425262728293031// 实现 reset_bufferstatic void reset_buffer(struct kbd *data)&#123; /* TODO 5/3: reset count, put_idx, get_idx */ data-&gt;count = 0; data-&gt;put_idx = 0; data-&gt;get_idx = 0;&#125;// 当写操作发生时，应该执行.../* TODO 5/12: add write operation and reset the buffer */static ssize_t kbd_write(struct file *file, const char __user *user_buffer, size_t size, loff_t *offset)&#123; struct kbd *data = (struct kbd *) file-&gt;private_data; unsigned long flags; spin_lock_irqsave(&amp;data-&gt;lock, flags); reset_buffer(data); spin_unlock_irqrestore(&amp;data-&gt;lock, flags); return size;&#125;// 添加写操作static const struct file_operations kbd_fops = &#123; .owner = THIS_MODULE, .open = kbd_open, .release = kbd_release, .read = kbd_read, /* TODO 5: add write operation */ .write = kbd_write,&#125;; 此时执行命令 echo &quot;clear&quot; &gt; /dev/kbd 会让缓冲区清空","categories":[{"name":"内核教程","slug":"内核教程","permalink":"https://leeway2zc.top/categories/%E5%86%85%E6%A0%B8%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"内核教程","slug":"内核教程","permalink":"https://leeway2zc.top/tags/%E5%86%85%E6%A0%B8%E6%95%99%E7%A8%8B/"}]},{"title":"上传博客的教程","slug":"上传博客的教程","date":"2025-08-10T20:26:31.000Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"2025/08/10/上传博客的教程/","permalink":"https://leeway2zc.top/2025/08/10/%E4%B8%8A%E4%BC%A0%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%95%99%E7%A8%8B/","excerpt":"","text":"以后写文章的流程 npx hexo new post &quot;文章标题&quot; 编辑 source/_posts/文章标题.md git add . &amp;&amp; git commit -m &quot;update post&quot; &amp;&amp; git push 等 1~2 分钟，GitHub Pages 自动更新 在其他设备上推送博客的流程 安装git、node.js、npm 使用git -v, node -v, npm -v检查是否安装成功 选择一个目录打开 git bash，执行 1git clone https://github.com/Leeway2ZC/hexo-blog.git 进入仓库目录 cd hexo-blog 安装项目依赖 npm install 在Git中设置本地用户名和邮箱 配置全局Git用户名 1git config --global user.name &quot;Leeway2ZC&quot; 配置全局Git邮箱 1git config --global user.email &quot;leeway2zc@gmail.com&quot; 然后就可以按照上面的流程写文章啦 关于修改添加测试博客功能 参考hexo官方教程https://hexo.io/zh-cn/docs/ 使用git退回上一个提交版本(将源码分支和网站都退回到上个版本)： git log --oneline # 找到上一个版本的 commit ID git reset --hard &lt;commit-id&gt; # 找到上一个版本的 commit ID git push origin main --force # 推送（覆盖远端） 更改主题时，使用git在本地先进行测试，然后推送博客更新 git branch # 查看当前分支 git checkout -b test-theme # 创建并切换到测试分支 1234这一步做了两件事，此时的 `test-theme` 是完全跟 `main` 一样的，只是互不影响1. 从 `main` 复制当前代码2. 切换到新分支 `test-theme` 在测试分支修改主题 12你在这个分支上可以随便改主题、调整配置、改文章。如果改坏了，直接删掉这个分支就行，main 分支不受影响。 本地测试，在test-theme分支中运行 npx hexo server 浏览效果 确认没问题后合并到main 12git checkout maingit merge test-theme 推送到远程（更新博客）git push origin main 如果发现问题 12git checkout maingit branch -D test-theme 直接删除分支，一切回到切换主题前 关于配置图床 安装PicGo 配置PicGo 使用ini文件设置腾讯云Cos 设置Server修改监听端口与Typora保持一致 配置Typora 修改偏好设置中的图像 修改为上传图片，上传服务更改为PicGo 验证图片上传选项 注意事项 如果在另一台设备上做了修改，那么写文章前先要拉取最新代码 1git pull origin main 从而确保代码库是最新的，避免冲突","categories":[],"tags":[{"name":"教程","slug":"教程","permalink":"https://leeway2zc.top/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"我的第一篇文章","slug":"我的第一篇文章","date":"2025-08-10T18:50:13.000Z","updated":"2025-08-28T08:11:15.487Z","comments":true,"path":"2025/08/10/我的第一篇文章/","permalink":"https://leeway2zc.top/2025/08/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/","excerpt":"","text":"这是我的第一篇博客，以后会记录很多学习笔记，还有很多值得记录的事情。 不能总是等到失去才发现错过了什么，要时刻记录确保不会遗忘。以此怀念我的爷爷，愿您在天堂不再有苦痛，再见时希望您过的安详。","categories":[],"tags":[]}],"categories":[{"name":"存储测试教程","slug":"存储测试教程","permalink":"https://leeway2zc.top/categories/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%E6%95%99%E7%A8%8B/"},{"name":"内核教程","slug":"内核教程","permalink":"https://leeway2zc.top/categories/%E5%86%85%E6%A0%B8%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"存储测试教程","slug":"存储测试教程","permalink":"https://leeway2zc.top/tags/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%E6%95%99%E7%A8%8B/"},{"name":"内核教程","slug":"内核教程","permalink":"https://leeway2zc.top/tags/%E5%86%85%E6%A0%B8%E6%95%99%E7%A8%8B/"},{"name":"教程","slug":"教程","permalink":"https://leeway2zc.top/tags/%E6%95%99%E7%A8%8B/"}]}